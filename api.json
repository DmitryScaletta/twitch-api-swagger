[
  {
    "id": "start-commercial",
    "name": "Start Commercial",
    "resource": "Ads",
    "description": "Starts a commercial on the specified channel.",
    "descriptionFull": [
      "Starts a commercial on the specified channel. To start a commercial, the channel must be live."
    ],
    "authentication": [
      "Requires a user access token that includes the **channel:edit:commercial** scope."
    ],
    "authorization": [],
    "url": "https://api.twitch.tv/helix/channels/commercial",
    "method": "POST",
    "requestBody": {
      "description": [],
      "parameters": [
        {
          "name": "broadcaster_id",
          "type": "String",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "The ID of the broadcaster that wants to run the commercial. This ID must match the user ID found in the OAuth token.",
          "children": []
        },
        {
          "name": "length",
          "type": "Integer",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "The length of the commercial to run, in seconds. Twitch tries to serve a commercial that’s the requested length, but it may be shorter or longer. The maximum length you should request is 180 seconds.",
          "children": []
        }
      ]
    },
    "requestQueryParams": {
      "description": [],
      "parameters": []
    },
    "responseBody": {
      "description": [],
      "parameters": [
        {
          "name": "data",
          "type": "Object[]",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "An array that contains a single object with the status of your start commercial request.",
          "children": [
            {
              "name": "length",
              "type": "Integer",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The length of the commercial you requested. If you request a commercial that’s longer than 180 seconds, the API uses 180 seconds.",
              "children": []
            },
            {
              "name": "message",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "A message that indicates whether Twitch was able to serve an ad.",
              "children": []
            },
            {
              "name": "retry_after",
              "type": "Integer",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The number of seconds you must wait before running another commercial.",
              "children": []
            }
          ]
        }
      ]
    },
    "responseCodes": [
      [
        "200 OK",
        "Successfully started the commercial."
      ],
      [
        "400 Bad Request",
        "* The _broadcaster\\_id_ query parameter is required.\n* The _length_ query parameter is required.\n* The ID in _broadcaster\\_id_ is not valid.\n* To start a commercial, the broadcaster must be streaming live.\n* The broadcaster may not run another commercial until the cooldown period expires. The `retry_after` field in the previous start commercial response specifies the amount of time the broadcaster must wait between running commercials."
      ],
      [
        "401 Unauthorized",
        "* The ID in `broadcaster_id` must match the user ID found in the request’s OAuth token.\n* The Authorization header is required and must contain a user access token.\n* The user access token must include the **channel:edit:commercial** scope.\n* The OAuth token is not valid.\n* The client ID specified in the Client-Id header does not match the client ID specified in the OAuth token."
      ],
      [
        "404 Not Found",
        "* The ID in `broadcaster_id` was not found."
      ],
      [
        "429 Too Many Requests",
        "* The broadcaster may not run another commercial until the cooldown period expires. The `retry_after` field in the previous start commercial response specifies the amount of time the broadcaster must wait between running commercials."
      ]
    ],
    "examples": "### Example Request\n\nThis request starts a commercial.\n\n```\ncurl -X POST 'https://api.twitch.tv/helix/channels/commercial' \\\n-H 'Authorization: Bearer 2gbdx6oar67tqtcmt49t3wpcgycthx' \\\n-H 'Client-Id: wbmytr93xzw8zbg0p1izqyzzc5mbiz' \\\n-H 'Content-Type: application/json' \\\n--data-raw '{\n  \"broadcaster_id\": \"41245072\",\n  \"length\": 60\n}'\n\n```\n\n### Example Response\n\n```\n{\n  \"data\": [\n    {\n      \"length\" : 60,\n      \"message\" : \"\",\n      \"retry_after\" : 480\n    }\n  ]\n}\n\n```"
  },
  {
    "id": "get-extension-analytics",
    "name": "Get Extension Analytics",
    "resource": "Analytics",
    "description": "Gets an analytics report for one or more extensions.",
    "descriptionFull": [
      "Gets an analytics report for one or more extensions. The response contains the URLs used to download the reports (CSV files). [Learn More](https://dev.twitch.tv/docs/insights)"
    ],
    "authentication": [
      "Requires a user access token that includes the **analytics:read:extensions** scope."
    ],
    "authorization": [],
    "url": "https://api.twitch.tv/helix/analytics/extensions",
    "method": "GET",
    "requestBody": {
      "description": [],
      "parameters": []
    },
    "requestQueryParams": {
      "description": [],
      "parameters": [
        {
          "name": "extension_id",
          "type": "String",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "The extension’s client ID. If specified, the response contains a report for the specified extension. If not specified, the response includes a report for each extension that the authenticated user owns.",
          "children": []
        },
        {
          "name": "type",
          "type": "String",
          "possibleValues": [
            "overview_v2"
          ],
          "required": false,
          "depth": 0,
          "description": "The type of analytics report to get. Possible values are:  \n  \n* overview\\_v2",
          "children": []
        },
        {
          "name": "started_at",
          "type": "String",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "The reporting window’s start date, in RFC3339 format. Set the time portion to zeroes (for example, 2021-10-22T00:00:00Z).  \n  \nThe start date must be on or after January 31, 2018\\. If you specify an earlier date, the API ignores it and uses January 31, 2018\\. If you specify a start date, you must specify an end date. If you don’t specify a start and end date, the report includes all available data since January 31, 2018.  \n  \nThe report contains one row of data for each day in the reporting window.",
          "children": []
        },
        {
          "name": "ended_at",
          "type": "String",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "The reporting window’s end date, in RFC3339 format. Set the time portion to zeroes (for example, 2021-10-27T00:00:00Z). The report is inclusive of the end date.  \n  \nSpecify an end date only if you provide a start date. Because it can take up to two days for the data to be available, you must specify an end date that’s earlier than today minus one to two days. If not, the API ignores your end date and uses an end date that is today minus one to two days.",
          "children": []
        },
        {
          "name": "first",
          "type": "Integer",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "The maximum number of report URLs to return per page in the response. The minimum page size is 1 URL per page and the maximum is 100 URLs per page. The default is 20.  \n  \n**NOTE**: While you may specify a maximum value of 100, the response will contain at most 20 URLs per page.",
          "children": []
        },
        {
          "name": "after",
          "type": "String",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "The cursor used to get the next page of results. The **Pagination** object in the response contains the cursor’s value. [Read More](https://dev.twitch.tv/docs/api/guide#pagination)  \n  \nThis parameter is ignored if the _extension\\_id_ parameter is set.",
          "children": []
        }
      ]
    },
    "responseBody": {
      "description": [],
      "parameters": [
        {
          "name": "data",
          "type": "Object[]",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "A list of reports. The reports are returned in no particular order; however, the data within each report is in ascending order by date (newest first). The report contains one row of data per day of the reporting window; the report contains rows for only those days that the extension was used. The array is empty if there are no reports.",
          "children": [
            {
              "name": "extension_id",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "An ID that identifies the extension that the report was generated for.",
              "children": []
            },
            {
              "name": "URL",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The URL that you use to download the report. The URL is valid for 5 minutes.",
              "children": []
            },
            {
              "name": "type",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The type of report.",
              "children": []
            },
            {
              "name": "date_range",
              "type": "Object",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The reporting window’s start and end dates, in RFC3339 format.",
              "children": [
                {
                  "name": "started_at",
                  "type": "String",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "The reporting window’s start date.",
                  "children": []
                },
                {
                  "name": "ended_at",
                  "type": "String",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "The reporting window’s end date.",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "name": "pagination",
          "type": "Object",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "Contains the information used to page through the list of results. The object is empty if there are no more pages left to page through. [Read More](https://dev.twitch.tv/docs/api/guide#pagination)",
          "children": [
            {
              "name": "cursor",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The cursor used to get the next page of results. Use the cursor to set the request’s _after_ query parameter.",
              "children": []
            }
          ]
        }
      ]
    },
    "responseCodes": [
      [
        "200 OK",
        "Successfully retrieved the broadcaster’s analytics reports."
      ],
      [
        "400 Bad Request",
        "* The start and end dates are optional but if you specify one, you must specify the other.\n* The end date must be equal to or later than the start date.\n* The cursor specified in the _after_ query parameter is not valid.\n* The resource supports only forward pagination (use the _after_ query parameter).\n* The _first_ query parameter is outside the allowed range of values."
      ],
      [
        "401 Unauthorized",
        "* The Authorization header is required and must contain a user access token.\n* The user access token must include the **analytics:read:extensions** scope.\n* The OAuth token is not valid.\n* The Client-Id header is required.\n* The client ID specified in the Client-Id header does not match the client ID specified in the OAuth token."
      ],
      [
        "404 Not Found",
        "* The extension specified in the _extension\\_id_ query parameter was not found."
      ]
    ],
    "examples": "### Example Request\n\nGets the URLs for all reports for all extensions of the authenticated client. The request was issued on June 1, 2018.\n\n```\ncurl -X GET 'https://api.twitch.tv/helix/analytics/extensions' \\\n-H 'Authorization: Bearer cfabdegwdoklmawdzdo98xt2fo512y' \\\n-H 'Client-Id: uo6dggojyb8d6soh92zknwmi5ej1q2'\n\n```\n\n### Example Response\n\n```\n{\n   \"data\": [\n      {\n         \"extension_id\": \"efgh\",\n         \"URL\": \"https://twitch-piper-reports.s3-us-west-2.amazonaws.com/dynamic/LoL%20ADC...\",\n         \"type\": \"overview_v2\",\n         \"date_range\": {\n            \"started_at\": \"2018-03-01T00:00:00Z\",\n            \"ended_at\": \"2018-06-01T00:00:00Z\"\n         }\n      },\n      ...\n   ],\n   \"pagination\": {\"cursor\": \"eyJiIjpudWxsLCJhIjp7Ik9mZnNldCI6NX19\"}\n}\n\n```"
  },
  {
    "id": "get-game-analytics",
    "name": "Get Game Analytics",
    "resource": "Analytics",
    "description": "Gets an analytics report for one or more games.",
    "descriptionFull": [
      "Gets an analytics report for one or more games. The response contains the URLs used to download the reports (CSV files). [Learn more](https://dev.twitch.tv/docs/insights)"
    ],
    "authentication": [
      "Requires a user access token that includes the **analytics:read:games** scope."
    ],
    "authorization": [],
    "url": "https://api.twitch.tv/helix/analytics/games",
    "method": "GET",
    "requestBody": {
      "description": [],
      "parameters": []
    },
    "requestQueryParams": {
      "description": [],
      "parameters": [
        {
          "name": "game_id",
          "type": "String",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "The game’s client ID. If specified, the response contains a report for the specified game. If not specified, the response includes a report for each of the authenticated user’s games.",
          "children": []
        },
        {
          "name": "type",
          "type": "String",
          "possibleValues": [
            "overview_v2"
          ],
          "required": false,
          "depth": 0,
          "description": "The type of analytics report to get. Possible values are:  \n  \n* overview\\_v2",
          "children": []
        },
        {
          "name": "started_at",
          "type": "String",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "The reporting window’s start date, in RFC3339 format. Set the time portion to zeroes (for example, 2021-10-22T00:00:00Z). If you specify a start date, you must specify an end date.  \n  \nThe start date must be within one year of today’s date. If you specify an earlier date, the API ignores it and uses a date that’s one year prior to today’s date. If you don’t specify a start and end date, the report includes all available data for the last 365 days from today.  \n  \nThe report contains one row of data for each day in the reporting window.",
          "children": []
        },
        {
          "name": "ended_at",
          "type": "String",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "The reporting window’s end date, in RFC3339 format. Set the time portion to zeroes (for example, 2021-10-22T00:00:00Z). The report is inclusive of the end date.  \n  \nSpecify an end date only if you provide a start date. Because it can take up to two days for the data to be available, you must specify an end date that’s earlier than today minus one to two days. If not, the API ignores your end date and uses an end date that is today minus one to two days.",
          "children": []
        },
        {
          "name": "first",
          "type": "Integer",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "The maximum number of report URLs to return per page in the response. The minimum page size is 1 URL per page and the maximum is 100 URLs per page. The default is 20.  \n  \n**NOTE**: While you may specify a maximum value of 100, the response will contain at most 20 URLs per page.",
          "children": []
        },
        {
          "name": "after",
          "type": "String",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "The cursor used to get the next page of results. The **Pagination** object in the response contains the cursor’s value. [Read More](https://dev.twitch.tv/docs/api/guide#pagination)  \n  \nThis parameter is ignored if _game\\_id_ parameter is set.",
          "children": []
        }
      ]
    },
    "responseBody": {
      "description": [],
      "parameters": [
        {
          "name": "data",
          "type": "Object[]",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "A list of reports. The reports are returned in no particular order; however, the data within each report is in ascending order by date (newest first). The report contains one row of data per day of the reporting window; the report contains rows for only those days that the game was used. A report is available only if the game was broadcast for at least 5 hours over the reporting period. The array is empty if there are no reports.",
          "children": [
            {
              "name": "game_id",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "An ID that identifies the game that the report was generated for.",
              "children": []
            },
            {
              "name": "URL",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The URL that you use to download the report. The URL is valid for 5 minutes.",
              "children": []
            },
            {
              "name": "type",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The type of report.",
              "children": []
            },
            {
              "name": "date_range",
              "type": "Object",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The reporting window’s start and end dates, in RFC3339 format.",
              "children": [
                {
                  "name": "started_at",
                  "type": "String",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "The reporting window’s start date.",
                  "children": []
                },
                {
                  "name": "ended_at",
                  "type": "String",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "The reporting window’s end date.",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "name": "pagination",
          "type": "Object",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "Contains the information used to page through the list of results. The object is empty if there are no more pages left to page through. [Read More](https://dev.twitch.tv/docs/api/guide#pagination)",
          "children": [
            {
              "name": "cursor",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The cursor used to get the next page of results. Use the cursor to set the request’s _after_ query parameter.",
              "children": []
            }
          ]
        }
      ]
    },
    "responseCodes": [
      [
        "200 OK",
        "Successfully retrieved the broadcaster’s analytics reports."
      ],
      [
        "400 Bad Request",
        "* The start and end dates are optional but if you specify one, you must specify the other.\n* The end date must be equal to or later than the start date.\n* The cursor specified in the _after_ query parameter is not valid.\n* The resource supports only forward pagination (use the _after_ query parameter).\n* The _first_ query parameter is outside the allowed range of values."
      ],
      [
        "401 Unauthorized",
        "* The Authorization header is required and must contain a user access token.\n* The user access token must include the **analytics:read:games** scope.\n* The OAuth token is not valid.\n* The Client-Id header is required.\n* The client ID specified in the Client-Id header does not match the client ID specified in the OAuth token."
      ],
      [
        "404 Not Found",
        "* The game specified in the _game\\_id_ query parameter was not found."
      ]
    ],
    "examples": "### Example Request\n\nGets the URL for a downloadable CSV report for game ID 493057, covering the period January 1, 2018 through March 1, 2018.\n\n```\ncurl -X GET 'https://api.twitch.tv/helix/analytics/games?game_id=493057&started_at=2018-01-01T00:00:00Z&ended_at=2018-03-01T00:00:00Z' \\\n-H 'Authorization: Bearer cfabdegwdoklmawdzdo98xt2fo512y' \\\n-H 'Client-Id: uo6dggojyb8d6soh92zknwmi5ej1q2'\n\n```\n\n### Example Response\n\n```\n{\n  \"data\": [\n    {\n      \"game_id\" : \"493057\",\n      \"URL\" : \"https://twitch-piper-reports.s3-us-west-2.amazonaws.com/games/66170/overview/15183...\",\n      \"type\" : \"overview_v2\",\n      \"date_range\" : {\n        \"started_at\" : \"2018-01-01T00:00:00Z\",\n        \"ended_at\" : \"2018-03-01T00:00:00Z\"\n      }\n    }\n  ]\n}\n\n```\n\n### Example Request\n\nGets the first 5 URLs for all reports for all games of the authenticated client. The request was issued on June 14, 2018.\n\n```\ncurl -X GET 'https://api.twitch.tv/helix/analytics/games?first=5' \\\n-H 'Authorization: Bearer cfabdegwdoklmawdzdo98xt2fo512y' \\\n-H 'Client-Id: uo6dggojyb8d6soh92zknwmi5ej1q2'\n\n```\n\n### Example Response\n\n```\n{\n  \"data\": [\n    {\n      \"game_id\": \"9821\",\n      \"URL\": \"https://twitch-piper-reports.s3-us-west-2.amazonaws.com/games/9821/overview/152642...\",\n      \"type\" : \"overview_v2\",\n      \"date_range\" : {\n        \"started_at\" : \"2018-03-13T00:00:00Z\",\n        \"ended_at\" : \"2018-06-13T00:00:00Z\"\n      }\n    },\n    ...\n  ],\n  \"pagination\": {\"cursor\": \"eyJiIjpudWxsLJxhIjoiIn0gf5\"}\n}\n\n```"
  },
  {
    "id": "get-bits-leaderboard",
    "name": "Get Bits Leaderboard",
    "resource": "Bits",
    "description": "Gets the Bits leaderboard for the authenticated broadcaster.",
    "descriptionFull": [
      "Gets the Bits leaderboard for the authenticated broadcaster. The users are ranked by how much they’ve cheered."
    ],
    "authentication": [
      "Requires a user access token that includes the **bits:read** scope."
    ],
    "authorization": [],
    "url": "https://api.twitch.tv/helix/bits/leaderboard",
    "method": "GET",
    "requestBody": {
      "description": [],
      "parameters": []
    },
    "requestQueryParams": {
      "description": [],
      "parameters": [
        {
          "name": "count",
          "type": "Integer",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "The number of results to return. The minimum count is 1 and the maximum is 100\\. The default is 10.",
          "children": []
        },
        {
          "name": "period",
          "type": "String",
          "possibleValues": [
            "day",
            "week",
            "month",
            "year",
            "all"
          ],
          "required": false,
          "depth": 0,
          "description": "The time period over which data is aggregated (uses the PST time zone). Possible values are:  \n  \n* day — A day spans from 00:00:00 on the day specified in _started\\_at_ and runs through 00:00:00 of the next day.\n* week — A week spans from 00:00:00 on the Monday of the week specified in _started\\_at_ and runs through 00:00:00 of the next Monday.\n* month — A month spans from 00:00:00 on the first day of the month specified in _started\\_at_ and runs through 00:00:00 of the first day of the next month.\n* year — A year spans from 00:00:00 on the first day of the year specified in _started\\_at_ and runs through 00:00:00 of the first day of the next year.\n* all — Default. The lifetime of the broadcaster's channel.",
          "children": []
        },
        {
          "name": "started_at",
          "type": "String",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "The start date, in RFC3339 format, used for determining the aggregation period. Specify this parameter only if you specify the _period_ query parameter. The start date is ignored if _period_ is all.  \n  \nIf you don’t specify a start date, the time period specified by _period_ is assumed. For example, if _period_ is _month_, the data is aggregated for the current month.  \n  \nNote that the date is converted to PST before being used, so if you set the start time to `2022-01-01T00:00:00.0Z` and _period_ to month, the actual reporting period is December 2021, not January 2022\\. If you want the reporting period to be January 2022, you must set the start time to `2022-01-01T08:00:00.0Z` or `2022-01-01T00:00:00.0-08:00`.  \n  \nIf your start date uses the ‘+’ offset operator (for example, `2022-01-01T00:00:00.0+05:00`), you must URL encode the start date.",
          "children": []
        },
        {
          "name": "user_id",
          "type": "String",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "An ID that identifies a user that cheered bits in the channel. If _count_ is greater than 1, the response may include users ranked above and below the specified user. To get the leaderboard’s top leaders, don’t specify a user ID.",
          "children": []
        }
      ]
    },
    "responseBody": {
      "description": [],
      "parameters": [
        {
          "name": "data",
          "type": "Object[]",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "A list of leaderboard leaders. The leaders are returned in rank order. The array is empty if nobody has cheered bits.",
          "children": [
            {
              "name": "user_id",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "An ID that identifies a user on the leaderboard.",
              "children": []
            },
            {
              "name": "user_login",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The user’s login name.",
              "children": []
            },
            {
              "name": "user_name",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The user’s display name.",
              "children": []
            },
            {
              "name": "rank",
              "type": "Integer",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The user’s position on the leaderboard.",
              "children": []
            },
            {
              "name": "score",
              "type": "Integer",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The number of Bits the user has cheered.",
              "children": []
            }
          ]
        },
        {
          "name": "date_range",
          "type": "Object",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "The reporting window’s start and end dates, in RFC3339 format. The dates are calculated by using the _started\\_at_ and _period_ query parameters. If you don’t specify the _started\\_at_ query parameter, the fields contain empty strings.",
          "children": [
            {
              "name": "started_at",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The reporting window’s start date.",
              "children": []
            },
            {
              "name": "ended_at",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The reporting window’s end date.",
              "children": []
            }
          ]
        },
        {
          "name": "total",
          "type": "Integer",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "The number of ranked users in `data`. This is the value in the _count_ query parameter or the total number of entries on the leaderboard, whichever is less.",
          "children": []
        }
      ]
    },
    "responseCodes": [
      [
        "200 OK",
        "Successfully retrieved the broadcaster’s Bits leaderboard."
      ],
      [
        "400 Bad Request",
        "* The time period specified in the _period_ query parameter is not valid.\n* The value in the _count_ query parameter is outside the range of allowed values."
      ],
      [
        "401 Unauthorized",
        "* The Authorization header is required and must specify a user access token.\n* The user access token must include the the **bits:read** scope.\n* The OAuth token is not valid.\n* The ID in the Client-Id header must match the Client ID in the OAuth token."
      ],
      [
        "403 Forbidden",
        ""
      ]
    ],
    "examples": "### Example Request\n\nGets information about the authenticated broadcaster’s top two Bits leaderboard entries for the current week.\n\n```\ncurl -X GET 'https://api.twitch.tv/helix/bits/leaderboard?count=2&period=week' \\\n-H 'Authorization: Bearer 2gbdx6oar67tqtcmt49t3wpcgycthx' \\\n-H 'Client-Id: uo6dggojyb8d6soh92zknwmi5ej1q2'\n\n```\n\n### Example Response\n\n```\n{\n  \"data\": [\n    {\n      \"user_id\": \"158010205\",\n      \"user_login\": \"tundracowboy\",\n      \"user_name\": \"TundraCowboy\",\n      \"rank\": 1,\n      \"score\": 12543\n    },\n    {\n      \"user_id\": \"7168163\",\n      \"user_login\": \"topramens\",\n      \"user_name\": \"Topramens\",\n      \"rank\": 2,\n      \"score\": 6900\n    }\n  ],\n  \"date_range\": {\n    \"started_at\": \"2018-02-05T08:00:00Z\",\n    \"ended_at\": \"2018-02-12T08:00:00Z\"\n  },\n  \"total\": 2\n}\n\n```"
  },
  {
    "id": "get-cheermotes",
    "name": "Get Cheermotes",
    "resource": "Bits",
    "description": "Gets a list of Cheermotes that users can use to cheer Bits.",
    "descriptionFull": [
      "Gets a list of Cheermotes that users can use to cheer Bits in any Bits-enabled channel’s chat room. Cheermotes are animated emotes that viewers can assign Bits to."
    ],
    "authentication": [
      "Requires an app access token or user access token."
    ],
    "authorization": [],
    "url": "https://api.twitch.tv/helix/bits/cheermotes",
    "method": "GET",
    "requestBody": {
      "description": [],
      "parameters": []
    },
    "requestQueryParams": {
      "description": [],
      "parameters": [
        {
          "name": "broadcaster_id",
          "type": "String",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "The ID of the broadcaster whose custom Cheermotes you want to get. Specify the broadcaster’s ID if you want to include the broadcaster’s Cheermotes in the response (not all broadcasters upload Cheermotes). If not specified, the response contains only global Cheermotes.  \n  \nIf the broadcaster uploaded Cheermotes, the `type` field in the response is set to **channel\\_custom**.",
          "children": []
        }
      ]
    },
    "responseBody": {
      "description": [],
      "parameters": [
        {
          "name": "data",
          "type": "Object[]",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "The list of Cheermotes. The list is in ascending order by the `order` field’s value.",
          "children": [
            {
              "name": "prefix",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The name portion of the Cheermote string that you use in chat to cheer Bits. The full Cheermote string is the concatenation of {prefix} + {number of Bits}. For example, if the prefix is “Cheer” and you want to cheer 100 Bits, the full Cheermote string is Cheer100\\. When the Cheermote string is entered in chat, Twitch converts it to the image associated with the Bits tier that was cheered.",
              "children": []
            },
            {
              "name": "tiers",
              "type": "Object[]",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "A list of tier levels that the Cheermote supports. Each tier identifies the range of Bits that you can cheer at that tier level and an image that graphically identifies the tier level.",
              "children": [
                {
                  "name": "min_bits",
                  "type": "Integer",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "The minimum number of Bits that you must cheer at this tier level. The maximum number of Bits that you can cheer at this level is determined by the required minimum Bits of the next tier level minus 1\\. For example, if `min_bits` is 1 and `min_bits` for the next tier is 100, the Bits range for this tier level is 1 through 99\\. The minimum Bits value of the last tier is the maximum number of Bits you can cheer using this Cheermote. For example, 10000.",
                  "children": []
                },
                {
                  "name": "id",
                  "type": "String",
                  "possibleValues": [
                    "1",
                    "100",
                    "500",
                    "1000",
                    "5000",
                    "10000",
                    "100000"
                  ],
                  "required": null,
                  "depth": 2,
                  "description": "The tier level. Possible tiers are:  \n  \n* 1\n* 100\n* 500\n* 1000\n* 5000\n* 10000\n* 100000",
                  "children": []
                },
                {
                  "name": "color",
                  "type": "String",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "The hex code of the color associated with this tier level (for example, #979797).",
                  "children": []
                },
                {
                  "name": "images",
                  "type": "Dictionary",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "The animated and static image sets for the Cheermote. The dictionary of images is organized by theme, format, and size. The theme keys are _dark_ and _light_. Each theme is a dictionary of formats: _animated_ and _static_. Each format is a dictionary of sizes: 1, 1.5, 2, 3, and 4\\. The value of each size contains the URL to the image.",
                  "children": []
                },
                {
                  "name": "can_cheer",
                  "type": "Boolean",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "A Boolean value that determines whether users can cheer at this tier level.",
                  "children": []
                },
                {
                  "name": "show_in_bits_card",
                  "type": "Boolean",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "A Boolean value that determines whether this tier level is shown in the Bits card. Is **true** if this tier level is shown in the Bits card.",
                  "children": []
                }
              ]
            },
            {
              "name": "type",
              "type": "String",
              "possibleValues": [
                "global_first_party",
                "global_third_party",
                "channel_custom",
                "display_only",
                "sponsored"
              ],
              "required": null,
              "depth": 1,
              "description": "The type of Cheermote. Possible values are:  \n  \n* global\\_first\\_party — A Twitch-defined Cheermote that is shown in the Bits card.\n* global\\_third\\_party — A Twitch-defined Cheermote that is not shown in the Bits card.\n* channel\\_custom — A broadcaster-defined Cheermote.\n* display\\_only — Do not use; for internal use only.\n* sponsored — A sponsor-defined Cheermote. When used, the sponsor adds additional Bits to the amount that the user cheered. For example, if the user cheered Terminator100, the broadcaster might receive 110 Bits, which includes the sponsor's 10 Bits contribution.",
              "children": []
            },
            {
              "name": "order",
              "type": "Integer",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The order that the Cheermotes are shown in the Bits card. The numbers may not be consecutive. For example, the numbers may jump from 1 to 7 to 13\\. The order numbers are unique within a Cheermote type (for example, global\\_first\\_party) but may not be unique amongst all Cheermotes in the response.",
              "children": []
            },
            {
              "name": "last_updated",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The date and time, in RFC3339 format, when this Cheermote was last updated.",
              "children": []
            },
            {
              "name": "is_charitable",
              "type": "Boolean",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "A Boolean value that indicates whether this Cheermote provides a charitable contribution match during charity campaigns.",
              "children": []
            }
          ]
        }
      ]
    },
    "responseCodes": [
      [
        "200 OK",
        "Successfully retrieved the Cheermotes."
      ],
      [
        "401 Unauthorized",
        "* The Authorization header is required and must specify an app access token or user access token.\n* The ID in the Client-Id header must match the Client ID in the OAuth token."
      ]
    ],
    "examples": "### Example Requests\n\nGets a list of all global Cheermotes.\n\n```\ncurl -X GET 'https://api.twitch.tv/helix/bits/cheermotes' \\\n-H 'Authorization: Bearer 2gbdx6oar67tqtcmt49t3wpcgycthx' \\\n-H 'Client-Id: wbmytr93xzw8zbg0p1izqyzzc5mbiz'\n\n```\n\nGets a list of all global Cheermotes and any Cheermotes that the broadcaster has uploaded.\n\n```\ncurl -X GET 'https://api.twitch.tv/helix/bits/cheermotes?broadcaster_id=41245072' \\\n-H 'Authorization: Bearer 2gbdx6oar67tqtcmt49t3wpcgycthx' \\\n-H 'Client-Id: wbmytr93xzw8zbg0p1izqyzzc5mbiz'\n\n```\n\n### Example Response\n\n```\n{\n  \"data\": [\n    {\n      \"prefix\": \"Cheer\",\n      \"tiers\": [\n        {\n          \"min_bits\": 1,\n          \"id\": \"1\",\n          \"color\": \"#979797\",\n          \"images\": {\n            \"dark\": {\n              \"animated\": {\n                \"1\": \"https://d3aqoihi2n8ty8.cloudfront.net/actions/cheer/dark/animated/1/1.gif\",\n                \"1.5\": \"https://d3aqoihi2n8ty8.cloudfront.net/actions/cheer/dark/animated/1/1.5.gif\",\n                \"2\": \"https://d3aqoihi2n8ty8.cloudfront.net/actions/cheer/dark/animated/1/2.gif\",\n                \"3\": \"https://d3aqoihi2n8ty8.cloudfront.net/actions/cheer/dark/animated/1/3.gif\",\n                \"4\": \"https://d3aqoihi2n8ty8.cloudfront.net/actions/cheer/dark/animated/1/4.gif\"\n              },\n              \"static\": {\n                \"1\": \"https://d3aqoihi2n8ty8.cloudfront.net/actions/cheer/dark/static/1/1.png\",\n                \"1.5\": \"https://d3aqoihi2n8ty8.cloudfront.net/actions/cheer/dark/static/1/1.5.png\",\n                \"2\": \"https://d3aqoihi2n8ty8.cloudfront.net/actions/cheer/dark/static/1/2.png\",\n                \"3\": \"https://d3aqoihi2n8ty8.cloudfront.net/actions/cheer/dark/static/1/3.png\",\n                \"4\": \"https://d3aqoihi2n8ty8.cloudfront.net/actions/cheer/dark/static/1/4.png\"\n              }\n            },\n            \"light\": {\n              \"animated\": {\n                \"1\": \"https://d3aqoihi2n8ty8.cloudfront.net/actions/cheer/light/animated/1/1.gif\",\n                \"1.5\": \"https://d3aqoihi2n8ty8.cloudfront.net/actions/cheer/light/animated/1/1.5.gif\",\n                \"2\": \"https://d3aqoihi2n8ty8.cloudfront.net/actions/cheer/light/animated/1/2.gif\",\n                \"3\": \"https://d3aqoihi2n8ty8.cloudfront.net/actions/cheer/light/animated/1/3.gif\",\n                \"4\": \"https://d3aqoihi2n8ty8.cloudfront.net/actions/cheer/light/animated/1/4.gif\"\n              },\n              \"static\": {\n                \"1\": \"https://d3aqoihi2n8ty8.cloudfront.net/actions/cheer/light/static/1/1.png\",\n                \"1.5\": \"https://d3aqoihi2n8ty8.cloudfront.net/actions/cheer/light/static/1/1.5.png\",\n                \"2\": \"https://d3aqoihi2n8ty8.cloudfront.net/actions/cheer/light/static/1/2.png\",\n                \"3\": \"https://d3aqoihi2n8ty8.cloudfront.net/actions/cheer/light/static/1/3.png\",\n                \"4\": \"https://d3aqoihi2n8ty8.cloudfront.net/actions/cheer/light/static/1/4.png\"\n              }\n            }\n          },\n          \"can_cheer\": true,\n          \"show_in_bits_card\": true\n        }\n        ...\n      ],\n      \"type\": \"global_first_party\",\n      \"order\": 1,\n      \"last_updated\": \"2018-05-22T00:06:04Z\",\n      \"is_charitable\": false\n    },\n    ...\n  ]\n}\n\n```"
  },
  {
    "id": "get-extension-transactions",
    "name": "Get Extension Transactions",
    "resource": "Bits",
    "description": "Gets a list of transactions for an extension.",
    "descriptionFull": [
      "Gets a list of transactions for an extension. A transaction records the exchange of a currency (for example, Bits) for a digital product."
    ],
    "authentication": [
      "Requires an app access token."
    ],
    "authorization": [],
    "url": "https://api.twitch.tv/helix/extensions/transactions",
    "method": "GET",
    "requestBody": {
      "description": [],
      "parameters": []
    },
    "requestQueryParams": {
      "description": [],
      "parameters": [
        {
          "name": "extension_id",
          "type": "String",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "The ID of the extension whose list of transactions you want to get.",
          "children": []
        },
        {
          "name": "id",
          "type": "String",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "A transaction ID used to filter the list of transactions. Specify this parameter for each transaction you want to get. For example, `id=1234&id=5678`. You may specify a maximum of 100 IDs.",
          "children": []
        },
        {
          "name": "first",
          "type": "Integer",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "The maximum number of items to return per page in the response. The minimum page size is 1 item per page and the maximum is 100 items per page. The default is 20.",
          "children": []
        },
        {
          "name": "after",
          "type": "String",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "The cursor used to get the next page of results. The **Pagination** object in the response contains the cursor’s value. [Read More](https://dev.twitch.tv/docs/api/guide#pagination)",
          "children": []
        }
      ]
    },
    "responseBody": {
      "description": [],
      "parameters": [
        {
          "name": "data",
          "type": "Object[]",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "The list of transactions.",
          "children": [
            {
              "name": "id",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "An ID that identifies the transaction.",
              "children": []
            },
            {
              "name": "timestamp",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The UTC date and time (in RFC3339 format) of the transaction.",
              "children": []
            },
            {
              "name": "broadcaster_id",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The ID of the broadcaster that owns the channel where the transaction occurred.",
              "children": []
            },
            {
              "name": "broadcaster_login",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The broadcaster’s login name.",
              "children": []
            },
            {
              "name": "broadcaster_name",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The broadcaster’s display name.",
              "children": []
            },
            {
              "name": "user_id",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The ID of the user that purchased the digital product.",
              "children": []
            },
            {
              "name": "user_login",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The user’s login name.",
              "children": []
            },
            {
              "name": "user_name",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The user’s display name.",
              "children": []
            },
            {
              "name": "product_type",
              "type": "String",
              "possibleValues": [
                "BITS_IN_EXTENSION"
              ],
              "required": null,
              "depth": 1,
              "description": "The type of transaction. Possible values are:  \n  \n* BITS\\_IN\\_EXTENSION",
              "children": []
            },
            {
              "name": "product_data",
              "type": "Object",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "Contains details about the digital product.",
              "children": [
                {
                  "name": "sku",
                  "type": "String",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "An ID that identifies the digital product.",
                  "children": []
                },
                {
                  "name": "domain",
                  "type": "String",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "Set to `twitch.ext.` \\+ `<the extension's ID>`.",
                  "children": []
                },
                {
                  "name": "cost",
                  "type": "Object",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "Contains details about the digital product’s cost.",
                  "children": []
                },
                {
                  "name": "inDevelopment",
                  "type": "Boolean",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "A Boolean value that determines whether the product is in development. Is **true** if the digital product is in development and cannot be exchanged.",
                  "children": []
                },
                {
                  "name": "displayName",
                  "type": "String",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "The name of the digital product.",
                  "children": []
                },
                {
                  "name": "expiration",
                  "type": "String",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "This field is always empty since you may purchase only unexpired products.",
                  "children": []
                },
                {
                  "name": "broadcast",
                  "type": "Boolean",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "A Boolean value that determines whether the data was broadcast to all instances of the extension. Is **true** if the data was broadcast to all instances.",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "name": "pagination",
          "type": "Object",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "Contains the information used to page through the list of results. The object is empty if there are no more pages left to page through. [Read More](https://dev.twitch.tv/docs/api/guide#pagination)",
          "children": [
            {
              "name": "cursor",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The cursor used to get the next page of results. Use the cursor to set the request’s _after_ query parameter.",
              "children": []
            }
          ]
        }
      ]
    },
    "responseCodes": [
      [
        "200 OK",
        "Sccessfully retrieved the list of transactions."
      ],
      [
        "400 Bad Request",
        "* The _extension\\_id_ query parameter is required.\n* The request specified too many _id_ query parameters.\n* The pagination cursor is not valid."
      ],
      [
        "401 Unauthorized",
        "* The Authorization header is required and must specify an app access token.\n* The access token is not valid.\n* The ID in the _extension\\_id_ query parameter must match the client ID in the access token.\n* The ID in the Client-Id header must match the client ID in the access token."
      ],
      [
        "404 Not Found",
        "* One or more of the transaction IDs specified using the _id_ query parameter were not found."
      ]
    ],
    "examples": "### Example Request\n\n```\ncurl -X GET\n'https://api.twitch.tv/helix/extensions/transactions?extension_id=1234' \\\n-H 'Authorization: Bearer cfabdegwdoklmawdzdo98xt2fo512y' \\\n-H 'Client-Id: uo6dggojyb8d6soh92zknwmi5ej1q2'\n\n```\n\n### Example Response\n\n```\n{\n  \"data\": [\n    {\n      \"id\": \"74c52265-e214-48a6-91b9-23b6014e8041\",\n      \"timestamp\": \"2019-01-28T04:15:53.325Z\",\n      \"broadcaster_id\": \"439964613\",\n      \"broadcaster_login\": \"chikuseuma\",\n      \"broadcaster_name\": \"chikuseuma\",\n      \"user_id\": \"424596340\",\n      \"user_login\": \"quotrok\",\n      \"user_name\": \"quotrok\",\n      \"product_type\": \"BITS_IN_EXTENSION\",\n      \"product_data\": {\n        \"domain\": \"twitch.ext.uo6dggojyb8d6soh92zknwmi5ej1q2\",\n        \"sku\": \"testSku100\",\n        \"cost\": {\n          \"amount\": 100,\n          \"type\": \"bits\"\n        },\n        \"inDevelopment\": false,\n        \"displayName\": \"Test Product 100\",\n        \"expiration\": \"\",\n        \"broadcast\": false\n      }\n    },\n    {\n      \"id\": \"8d303dc6-a460-4945-9f48-59c31d6735cb\",\n      \"timestamp\": \"2019-01-18T09:10:13.397Z\",\n      \"broadcaster_id\": \"439964613\",\n      \"broadcaster_login\": \"chikuseuma\",\n      \"broadcaster_name\": \"chikuseuma\",\n      \"user_id\": \"439966926\",\n      \"user_login\": \"liscuit\",\n      \"user_name\": \"liscuit\",\n      \"product_type\": \"BITS_IN_EXTENSION\",\n      \"product_data\": {\n        \"domain\": \"twitch.ext.uo6dggojyb8d6soh92zknwmi5ej1q2\",\n        \"sku\": \"testSku200\",\n        \"cost\": {\n          \"amount\": 200,\n          \"type\": \"bits\"\n        },\n        \"inDevelopment\": false,\n        \"displayName\": \"Test Product 200\",\n        \"expiration\": \"\",\n        \"broadcast\": false\n      }\n    },\n    ...\n  ],\n  \"pagination\": {\n    \"cursor\": \"cursorString\"\n  }\n}\n\n```"
  },
  {
    "id": "get-channel-information",
    "name": "Get Channel Information",
    "resource": "Channels",
    "description": "Gets information about one or more channels.",
    "descriptionFull": [
      "Gets information about one or more channels."
    ],
    "authentication": [
      "Requires an app access token or user access token."
    ],
    "authorization": [],
    "url": "https://api.twitch.tv/helix/channels",
    "method": "GET",
    "requestBody": {
      "description": [],
      "parameters": []
    },
    "requestQueryParams": {
      "description": [],
      "parameters": [
        {
          "name": "broadcaster_id",
          "type": "String",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "The ID of the broadcaster whose channel you want to get. To specify more than one ID, include this parameter for each broadcaster you want to get. For example, `broadcaster_id=1234&broadcaster_id=5678`. You may specify a maximum of 100 IDs. The API ignores duplicate IDs and IDs that are not found.",
          "children": []
        }
      ]
    },
    "responseBody": {
      "description": [],
      "parameters": [
        {
          "name": "data",
          "type": "Object[]",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "A list that contains information about the specified channels. The list is empty if the specified channels weren’t found.",
          "children": [
            {
              "name": "broadcaster_id",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "An ID that uniquely identifies the broadcaster.",
              "children": []
            },
            {
              "name": "broadcaster_login",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The broadcaster’s login name.",
              "children": []
            },
            {
              "name": "broadcaster_name",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The broadcaster’s display name.",
              "children": []
            },
            {
              "name": "broadcaster_language",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The broadcaster’s preferred language. The value is an ISO 639-1 two-letter language code (for example, _en_ for English). The value is set to “other” if the language is not a Twitch supported language.",
              "children": []
            },
            {
              "name": "game_name",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The name of the game that the broadcaster is playing or last played. The value is an empty string if the broadcaster has never played a game.",
              "children": []
            },
            {
              "name": "game_id",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "An ID that uniquely identifies the game that the broadcaster is playing or last played. The value is an empty string if the broadcaster has never played a game.",
              "children": []
            },
            {
              "name": "title",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The title of the stream that the broadcaster is currently streaming or last streamed. The value is an empty string if the broadcaster has never streamed.",
              "children": []
            },
            {
              "name": "delay",
              "type": "Unsigned Integer",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The value of the broadcaster’s stream delay setting, in seconds. Reserved for users with Partner status.",
              "children": []
            }
          ]
        }
      ]
    },
    "responseCodes": [
      [
        "HTTP Code",
        "Description"
      ],
      [
        "200 OK",
        "Successfully retrieved the list of channels."
      ],
      [
        "400 Bad Request",
        "* The _broadcaster\\_id_ query parameter is required.\n* The broadcaster ID is not valid.\n* The number of _broadcaster\\_id_ query parameters exceeds the maximum allowed."
      ],
      [
        "401 Unauthorized",
        "* The Authorization header is required and must specify an app access token or user access token.\n* The OAuth token is not valid.\n* The ID in the Client-Id header must match the Client ID in the OAuth token."
      ],
      [
        "429 Too Many Requests",
        "* The application exceeded the number of calls it may make per minute. For details, see [Rate Limits](https://dev.twitch.tv/docs/api/guide#twitch-rate-limits)."
      ],
      [
        "500 Internal Server Error",
        ""
      ]
    ],
    "examples": "### Example Request\n\nGets information about the TwitchDev channel.\n\n```\ncurl -X GET 'https://api.twitch.tv/helix/channels?broadcaster_id=141981764' \\\n-H 'Authorization: Bearer 2gbdx6oar67tqtcmt49t3wpcgycthx' \\\n-H 'Client-Id: wbmytr93xzw8zbg0p1izqyzzc5mbiz'\n\n```\n\n### Example Response\n\n```\n{\n  \"data\": [\n    {\n      \"broadcaster_id\": \"141981764\",\n      \"broadcaster_login\": \"twitchdev\",\n      \"broadcaster_name\": \"TwitchDev\",\n      \"broadcaster_language\": \"en\",\n      \"game_id\": \"509670\",\n      \"game_name\": \"Science & Technology\",\n      \"title\": \"TwitchDev Monthly Update // May 6, 2021\",\n      \"delay\": 0\n    }\n  ]\n}\n\n```"
  },
  {
    "id": "modify-channel-information",
    "name": "Modify Channel Information",
    "resource": "Channels",
    "description": "Updates a channel’s properties.",
    "descriptionFull": [
      "Updates a channel’s properties."
    ],
    "authentication": [
      "Requires a user access token that includes the **channel:manage:broadcast** scope."
    ],
    "authorization": [],
    "url": "https://api.twitch.tv/helix/channels",
    "method": "PATCH",
    "requestBody": {
      "description": [
        "All fields are optional, but you must specify at least one field."
      ],
      "parameters": [
        {
          "name": "game_id",
          "type": "String",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "The ID of the game that the user plays. The game is not updated if the ID isn’t a game ID that Twitch recognizes. To unset this field, use “0” or “” (an empty string).",
          "children": []
        },
        {
          "name": "broadcaster_language",
          "type": "String",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "The user’s preferred language. Set the value to an ISO 639-1 two-letter language code (for example, _en_ for English). Set to “other” if the user’s preferred language is not a Twitch supported language. The language isn’t updated if the language code isn’t a Twitch supported language.",
          "children": []
        },
        {
          "name": "title",
          "type": "String",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "The title of the user’s stream. You may not set this field to an empty string.",
          "children": []
        },
        {
          "name": "delay",
          "type": "Integer",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "The number of seconds you want your broadcast buffered before streaming it live. The delay helps ensure fairness during competitive play. Only users with Partner status may set this field. The maximum delay is 900 seconds (15 minutes).",
          "children": []
        }
      ]
    },
    "requestQueryParams": {
      "description": [],
      "parameters": [
        {
          "name": "broadcaster_id",
          "type": "String",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "The ID of the broadcaster whose channel you want to update. This ID must match the user ID associated with the user access token.",
          "children": []
        }
      ]
    },
    "responseBody": {
      "description": [],
      "parameters": []
    },
    "responseCodes": [
      [
        "204 No Content",
        "Successfully updated the channel’s properties."
      ],
      [
        "400 Bad Request",
        "* The _broadcaster\\_id_ query parameter is required.\n* The request must update at least one property.\n* The `title` field may not contain an empty string.\n* The ID in `game_id` is not valid.\n* To update the `delay` field, the broadcaster must have partner status."
      ],
      [
        "401 Unauthorized",
        "* The ID in _broadcaster\\_id_ must match the user ID found in the OAuth token.\n* The Authorization header is required and must specify a user access token.\n* The OAuth token must include the **channel:manage:broadcast** scope.\n* The OAuth token is not valid.\n* The ID in the Client-Id header must match the Client ID in the OAuth token."
      ],
      [
        "500 Internal server error",
        ""
      ]
    ],
    "examples": "### Example Request\n\n```\ncurl -X PATCH 'https://api.twitch.tv/helix/channels?broadcaster_id=41245072' \\\n-H 'Authorization: Bearer 2gbdx6oar67tqtcmt49t3wpcgycthx' \\\n-H 'Client-Id: wbmytr93xzw8zbg0p1izqyzzc5mbiz' \\\n-H 'Content-Type: application/json' \\\n--data-raw '{\"game_id\":\"33214\", \"title\":\"there are helicopters in the game? REASON TO PLAY FORTNITE found\", \"broadcaster_language\":\"en\"}'\n\n```\n\n### Example Response\n\n```\n204 No Content\n\n```"
  },
  {
    "id": "get-channel-editors",
    "name": "Get Channel Editors",
    "resource": "Channels",
    "description": "Gets a list of users that are editors for the specified broadcaster.",
    "descriptionFull": [
      "Gets a list of users that are editors for the specified broadcaster."
    ],
    "authentication": [
      "Requires a user access token that includes the **channel:read:editors** scope."
    ],
    "authorization": [],
    "url": "https://api.twitch.tv/helix/channels/editors",
    "method": "GET",
    "requestBody": {
      "description": [],
      "parameters": []
    },
    "requestQueryParams": {
      "description": [],
      "parameters": [
        {
          "name": "broadcaster_id",
          "type": "String",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "The ID of the broadcaster that owns the channel. This ID must match the user ID in the access token.",
          "children": []
        }
      ]
    },
    "responseBody": {
      "description": [],
      "parameters": [
        {
          "name": "data",
          "type": "Object[]",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "A list of users that are editors for the specified broadcaster. The list is empty if the broadcaster doesn’t have editors.",
          "children": [
            {
              "name": "user_id",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "An ID that uniquely identifies a user with editor permissions.",
              "children": []
            },
            {
              "name": "user_name",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The user’s display name.",
              "children": []
            },
            {
              "name": "created_at",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The date and time, in RFC3339 format, when the user became one of the broadcaster’s editors.",
              "children": []
            }
          ]
        }
      ]
    },
    "responseCodes": [
      [
        "200 OK",
        "Successfully retrieved the list of editors."
      ],
      [
        "400 Bad Request",
        "* The _broadcaster\\_id_ query parameter is required."
      ],
      [
        "401 Unauthorized",
        "* The ID in the _broadcaster\\_id_ query parameter must match the user ID found in the OAuth token.\n* The Authorization header is required and must specify a user access token.\n* The OAuth token must include the **channel:read:editors** scope.\n* The OAuth token is not valid.\n* The ID in the Client-Id header must match the Client ID in the OAuth token."
      ]
    ],
    "examples": "### Example Request\n\nGets the list of editors for TwitchDev.\n\n```\ncurl -X GET 'https://api.twitch.tv/helix/channels/editors?broadcaster_id=141981764' \\\n-H 'Authorization: Bearer 2gbdx6oar67tqtcmt49t3wpcgycthx' \\\n-H 'Client-Id: wbmytr93xzw8zbg0p1izqyzzc5mbiz' \\\n\n```\n\n### Example Response\n\n```\n{\n  \"data\": [\n    {\n      \"user_id\": \"182891647\",\n      \"user_name\": \"mauerbac\",\n      \"created_at\": \"2019-02-15T21:19:50.380833Z\"\n    },\n    {\n      \"user_id\": \"135093069\",\n      \"user_name\": \"BlueLava\",\n      \"created_at\": \"2018-03-07T16:28:29.872937Z\"\n    }\n  ]\n}\n\n```"
  },
  {
    "id": "create-custom-rewards",
    "name": "Create Custom Rewards",
    "resource": "Channel Points",
    "description": "Creates a Custom Reward in the broadcaster’s channel.",
    "descriptionFull": [
      "Creates a Custom Reward in the broadcaster’s channel. The maximum number of custom rewards per channel is 50, which includes both enabled and disabled rewards."
    ],
    "authentication": [
      "Requires a user access token that includes the **channel:manage:redemptions** scope."
    ],
    "authorization": [],
    "url": "https://api.twitch.tv/helix/channel_points/custom_rewards",
    "method": "POST",
    "requestBody": {
      "description": [],
      "parameters": [
        {
          "name": "title",
          "type": "String",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "The custom reward’s title. The title may contain a maximum of 45 characters and it must be unique amongst all of the broadcaster’s custom rewards.",
          "children": []
        },
        {
          "name": "cost",
          "type": "Int64",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "The cost of the reward, in Channel Points. The minimum is 1 point.",
          "children": []
        },
        {
          "name": "prompt",
          "type": "String",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "The prompt shown to the viewer when they redeem the reward. Specify a prompt if `is_user_input_required` is **true**. The prompt is limited to a maximum of 200 characters.",
          "children": []
        },
        {
          "name": "is_enabled",
          "type": "Boolean",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "A Boolean value that determines whether the reward is enabled. Viewers see only enabled rewards. The default is **true**.",
          "children": []
        },
        {
          "name": "background_color",
          "type": "String",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "The background color to use for the reward. Specify the color using Hex format (for example, #9147FF).",
          "children": []
        },
        {
          "name": "is_user_input_required",
          "type": "Boolean",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "A Boolean value that determines whether the user needs to enter information when redeeming the reward. See the `prompt` field. The default is **false**.",
          "children": []
        },
        {
          "name": "is_max_per_stream_enabled",
          "type": "Boolean",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "A Boolean value that determines whether to limit the maximum number of redemptions allowed per live stream (see the `max_per_stream` field). The default is **false**.",
          "children": []
        },
        {
          "name": "max_per_stream",
          "type": "Integer",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "The maximum number of redemptions allowed per live stream. Applied only if `is_max_per_stream_enabled` is **true**. The minimum value is 1.",
          "children": []
        },
        {
          "name": "is_max_per_user_per_stream_enabled",
          "type": "Boolean",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "A Boolean value that determines whether to limit the maximum number of redemptions allowed per user per stream (see the `max_per_user_per_stream` field). The default is **false**.",
          "children": []
        },
        {
          "name": "max_per_user_per_stream",
          "type": "Integer",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "The maximum number of redemptions allowed per user per stream. Applied only if `is_max_per_user_per_stream_enabled` is **true**. The minimum value is 1.",
          "children": []
        },
        {
          "name": "is_global_cooldown_enabled",
          "type": "Boolean",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "A Boolean value that determines whether to apply a cooldown period between redemptions (see the `global_cooldown_seconds` field for the duration of the cooldown period). The default is **false**.",
          "children": []
        },
        {
          "name": "global_cooldown_seconds",
          "type": "Integer",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "The cooldown period, in seconds. Applied only if the `is_global_cooldown_enabled` field is **true**. The minimum value is 1; however, the minimum value is 60 for it to be shown in the Twitch UX.",
          "children": []
        },
        {
          "name": "should_redemptions_skip_request_queue",
          "type": "Boolean",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "A Boolean value that determines whether redemptions should be set to FULFILLED status immediately when a reward is redeemed. If **false**, status is set to UNFULFILLED and follows the normal request queue process. The default is **false**.",
          "children": []
        }
      ]
    },
    "requestQueryParams": {
      "description": [],
      "parameters": [
        {
          "name": "broadcaster_id",
          "type": "String",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "The ID of the broadcaster to add the custom reward to. This ID must match the user ID found in the OAuth token.",
          "children": []
        }
      ]
    },
    "responseBody": {
      "description": [],
      "parameters": [
        {
          "name": "data",
          "type": "Object[]",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "A list that contains the single custom reward you created.",
          "children": [
            {
              "name": "broadcaster_id",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The ID that uniquely identifies the broadcaster.",
              "children": []
            },
            {
              "name": "broadcaster_login",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The broadcaster’s login name.",
              "children": []
            },
            {
              "name": "broadcaster_name",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The broadcaster’s display name.",
              "children": []
            },
            {
              "name": "id",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The ID that uniquely identifies this custom reward.",
              "children": []
            },
            {
              "name": "title",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The title of the reward.",
              "children": []
            },
            {
              "name": "prompt",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The prompt shown to the viewer when they redeem the reward if user input is required (see the `is_user_input_required` field).",
              "children": []
            },
            {
              "name": "cost",
              "type": "Integer",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The cost of the reward in Channel Points.",
              "children": []
            },
            {
              "name": "image",
              "type": "Object",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "A set of custom images for the reward. This field is set to **null** if the broadcaster didn’t upload images.",
              "children": [
                {
                  "name": "url_1x",
                  "type": "String",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "The URL to a small version of the image.",
                  "children": []
                },
                {
                  "name": "url_2x",
                  "type": "String",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "The URL to a medium version of the image.",
                  "children": []
                },
                {
                  "name": "url_4x",
                  "type": "String",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "The URL to a large version of the image.",
                  "children": []
                }
              ]
            },
            {
              "name": "default_image",
              "type": "Object",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "A set of default images for the reward.",
              "children": [
                {
                  "name": "url_1x",
                  "type": "String",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "The URL to a small version of the image.",
                  "children": []
                },
                {
                  "name": "url_2x",
                  "type": "String",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "The URL to a medium version of the image.",
                  "children": []
                },
                {
                  "name": "url_4x",
                  "type": "String",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "The URL to a large version of the image.",
                  "children": []
                }
              ]
            },
            {
              "name": "background_color",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The background color to use for the reward. The color is in Hex format (for example, #00E5CB).",
              "children": []
            },
            {
              "name": "is_enabled",
              "type": "Boolean",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "A Boolean value that determines whether the reward is enabled. Is **true** if enabled; otherwise, **false**. Disabled rewards aren’t shown to the user.",
              "children": []
            },
            {
              "name": "is_user_input_required",
              "type": "Boolean",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "A Boolean value that determines whether the user must enter information when redeeming the reward. Is **true** if the reward requires user input.",
              "children": []
            },
            {
              "name": "max_per_stream_setting",
              "type": "Object",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The settings used to determine whether to apply a maximum to the number to the redemptions allowed per live stream.",
              "children": [
                {
                  "name": "is_enabled",
                  "type": "Boolean",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "A Boolean value that determines whether the reward applies a limit on the number of redemptions allowed per live stream. Is **true** if the reward applies a limit.",
                  "children": []
                },
                {
                  "name": "max_per_stream",
                  "type": "Int64",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "The maximum number of redemptions allowed per live stream.",
                  "children": []
                }
              ]
            },
            {
              "name": "max_per_user_per_stream_setting",
              "type": "Object",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The settings used to determine whether to apply a maximum to the number of redemptions allowed per user per live stream.",
              "children": [
                {
                  "name": "is_enabled",
                  "type": "Boolean",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "A Boolean value that determines whether the reward applies a limit on the number of redemptions allowed per user per live stream. Is **true** if the reward applies a limit.",
                  "children": []
                },
                {
                  "name": "max_per_user_per_stream",
                  "type": "Int64",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "The maximum number of redemptions allowed per user per live stream.",
                  "children": []
                }
              ]
            },
            {
              "name": "global_cooldown_setting",
              "type": "Object",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The settings used to determine whether to apply a cooldown period between redemptions and the length of the cooldown.",
              "children": [
                {
                  "name": "is_enabled",
                  "type": "Boolean",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "A Boolean value that determines whether to apply a cooldown period. Is **true** if a cooldown period is enabled.",
                  "children": []
                },
                {
                  "name": "global_cooldown_seconds",
                  "type": "Int64",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "The cooldown period, in seconds.",
                  "children": []
                }
              ]
            },
            {
              "name": "is_paused",
              "type": "Boolean",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "A Boolean value that determines whether the reward is currently paused. Is **true** if the reward is paused. Viewers can’t redeem paused rewards.",
              "children": []
            },
            {
              "name": "is_in_stock",
              "type": "Boolean",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "A Boolean value that determines whether the reward is currently in stock. Is **true** if the reward is in stock. Viewers can’t redeem out of stock rewards.",
              "children": []
            },
            {
              "name": "should_redemptions_skip_request_queue",
              "type": "Boolean",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "A Boolean value that determines whether redemptions should be set to FULFILLED status immediately when a reward is redeemed. If **false**, status is UNFULFILLED and follows the normal request queue process.",
              "children": []
            },
            {
              "name": "redemptions_redeemed_current_stream",
              "type": "Integer",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The number of redemptions redeemed during the current live stream. The number counts against the `max_per_stream_setting` limit. This field is **null** if the broadcaster’s stream isn’t live or _max\\_per\\_stream\\_setting_ isn’t enabled.",
              "children": []
            },
            {
              "name": "cooldown_expires_at",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The timestamp of when the cooldown period expires. Is **null** if the reward isn’t in a cooldown state (see the `global_cooldown_setting` field).",
              "children": []
            }
          ]
        }
      ]
    },
    "responseCodes": [
      [
        "200 OK",
        "Successfully created the Custom Reward."
      ],
      [
        "400 Bad Request",
        "* The request exceeds the maximum number of rewards allowed per channel.\n* The _broadcaster\\_id_ query parameter is required.\n* The `title` field is required.\n* The `title` must contain a minimum of 1 character and a maximum of 45 characters.\n* The `title` must be unique amongst all of the broadcaster's custom rewards.\n* The `cost` field is required.\n* The `cost` field must contain a minimum of 1 point.\n* The `prompt` field is limited to a maximum of 200 characters.\n* If `is_max_per_stream_enabled` is **true**, the minimum value for `max_per_stream` is 1.\n* If `is_max_per_user_per_stream_enabled` is **true**, the minimum value for `max_per_user_per_stream` is 1.\n* If `is_global_cooldown_enabled` is **true**, the minimum value for `global_cooldown_seconds` is 1."
      ],
      [
        "401 Unauthorized",
        "* The Authorization header is required and must specify a user access token.\n* The user access token is missing the **channel:manage:redemptions** scope.\n* The OAuth token is not valid.\n* The ID in the Client-Id header must match the Client ID in the OAuth token."
      ],
      [
        "403 Forbidden",
        "* The broadcaster is not a partner or affiliate."
      ],
      [
        "500 Internal Server Error",
        ""
      ]
    ],
    "examples": "### Example Request\n\nCreates a custom reward.\n\n```\ncurl -X POST 'https://api.twitch.tv/helix/channel_points/custom_rewards?broadcaster_id=274637212' \\\n-H 'client-id: gx2pv4208cff0ig9ou7nk3riccffxt' \\\n-H 'Authorization: Bearer vjxv3i0l4zxru966wsnwji51tmpkj2' \\\n-H 'Content-Type: application/json' \\\n-d '{\n  \"title\":\"game analysis 1v1\",\n  \"cost\":50000\n}'\n\n```\n\n### Example Response\n\n```\n{\n  \"data\": [\n    {\n      \"broadcaster_name\": \"torpedo09\",\n      \"broadcaster_login\": \"torpedo09\",\n      \"broadcaster_id\": \"274637212\",\n      \"id\": \"afaa7e34-6b17-49f0-a19a-d1e76eaaf673\",\n      \"image\": null,\n      \"background_color\": \"#00E5CB\",\n      \"is_enabled\": true,\n      \"cost\": 50000,\n      \"title\": \"game analysis 1v1\",\n      \"prompt\": \"\",\n      \"is_user_input_required\": false,\n      \"max_per_stream_setting\": {\n        \"is_enabled\": false,\n        \"max_per_stream\": 0\n      },\n      \"max_per_user_per_stream_setting\": {\n        \"is_enabled\": false,\n        \"max_per_user_per_stream\": 0\n      },\n      \"global_cooldown_setting\": {\n        \"is_enabled\": false,\n        \"global_cooldown_seconds\": 0\n      },\n      \"is_paused\": false,\n      \"is_in_stock\": true,\n      \"default_image\": {\n        \"url_1x\": \"https://static-cdn.jtvnw.net/custom-reward-images/default-1.png\",\n        \"url_2x\": \"https://static-cdn.jtvnw.net/custom-reward-images/default-2.png\",\n        \"url_4x\": \"https://static-cdn.jtvnw.net/custom-reward-images/default-4.png\"\n      },\n      \"should_redemptions_skip_request_queue\": false,\n      \"redemptions_redeemed_current_stream\": null,\n      \"cooldown_expires_at\": null\n    }\n  ]\n}\n\n```"
  },
  {
    "id": "delete-custom-reward",
    "name": "Delete Custom Reward",
    "resource": "Channel Points",
    "description": "Deletes a custom reward that the broadcaster created.",
    "descriptionFull": [
      "Deletes a custom reward that the broadcaster created.",
      "The app used to create the reward is the only app that may delete it. If the reward’s redemption status is UNFULFILLED at the time the reward is deleted, its redemption status is marked as FULFILLED."
    ],
    "authentication": [
      "Requires a user access token that includes the **channel:manage:redemptions** scope."
    ],
    "authorization": [],
    "url": "https://api.twitch.tv/helix/channel_points/custom_rewards",
    "method": "DELETE",
    "requestBody": {
      "description": [],
      "parameters": []
    },
    "requestQueryParams": {
      "description": [],
      "parameters": [
        {
          "name": "broadcaster_id",
          "type": "String",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "The ID of the broadcaster that created the custom reward. This ID must match the user ID found in the OAuth token.",
          "children": []
        },
        {
          "name": "id",
          "type": "String",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "The ID of the custom reward to delete.",
          "children": []
        }
      ]
    },
    "responseBody": {
      "description": [],
      "parameters": []
    },
    "responseCodes": [
      [
        "204 No Content",
        "Successfully deleted the custom reward."
      ],
      [
        "400 Bad Request",
        "* The _broadcaster\\_id_ query parameter is required.\n* The _id_ query parameter is required."
      ],
      [
        "401 Unauthorized",
        "* The Authorization header is required and must specify a user access token.\n* The user access token must include the **channel:manage:redemptions** scope.\n* The OAuth token is not valid.\n* The ID in the Client-Id header must match the Client ID in the OAuth token."
      ],
      [
        "403 Forbidden",
        "* The ID in the Client-Id header must match the client ID used to create the custom reward.\n* The broadcaster is not a partner or affiliate."
      ],
      [
        "404 Not Found",
        "* The custom reward specified in the _id_ query parameter was not found."
      ],
      [
        "500 Internal Server Error",
        ""
      ]
    ],
    "examples": "### Example Request\n\nDeletes the specified custom reward.\n\n```\ncurl -X DELETE 'https://api.twitch.tv/helix/channel_points/custom_rewards?broadcaster_id=274637212&id=b045196d-9ce7-4a27-a9b9-279ed341ab28' \\\n-H 'Client-Id: gx2pv4208cff0ig9ou7nk3riccffxt' \\\n-H 'Authorization: Bearer vjxv3i0l4zxru966wsnwji51tmpkj2'\n\n```\n\n### Example Response\n\n```\n204 No Content\n\n```"
  },
  {
    "id": "get-custom-reward",
    "name": "Get Custom Reward",
    "resource": "Channel Points",
    "description": "Gets a list of custom rewards that the specified broadcaster created.",
    "descriptionFull": [
      "Gets a list of custom rewards that the specified broadcaster created."
    ],
    "authentication": [
      "Requires a user access token that includes the **channel:read:redemptions** scope.",
      "**NOTE**: A channel may offer a maximum of 50 rewards, which includes both enabled and disabled rewards."
    ],
    "authorization": [],
    "url": "https://api.twitch.tv/helix/channel_points/custom_rewards",
    "method": "GET",
    "requestBody": {
      "description": [],
      "parameters": []
    },
    "requestQueryParams": {
      "description": [],
      "parameters": [
        {
          "name": "broadcaster_id",
          "type": "String",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "The ID of the broadcaster whose custom rewards you want to get. This ID must match the user ID found in the OAuth token.",
          "children": []
        },
        {
          "name": "id",
          "type": "String",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "A list of IDs to filter the rewards by. To specify more than one ID, include this parameter for each reward you want to get. For example, `id=1234&id=5678`. You may specify a maximum of 50 IDs.  \n  \nDuplicate IDs are ignored. The response contains only the IDs that were found. If none of the IDs were found, the response is 404 Not Found.",
          "children": []
        },
        {
          "name": "only_manageable_rewards",
          "type": "Boolean",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "A Boolean value that determines whether the response contains only the custom rewards that the app may manage (the app is identified by the ID in the Client-Id header). Set to **true** to get only the custom rewards that the app may manage. The default is **false**.",
          "children": []
        }
      ]
    },
    "responseBody": {
      "description": [],
      "parameters": [
        {
          "name": "data",
          "type": "Object[]",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "A list of custom rewards. The list is in ascending order by `id`. If the broadcaster hasn’t created custom rewards, the list is empty.",
          "children": [
            {
              "name": "broadcaster_id",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The ID that uniquely identifies the broadcaster.",
              "children": []
            },
            {
              "name": "broadcaster_login",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The broadcaster’s login name.",
              "children": []
            },
            {
              "name": "broadcaster_name",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The broadcaster’s display name.",
              "children": []
            },
            {
              "name": "id",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The ID that uniquely identifies this custom reward.",
              "children": []
            },
            {
              "name": "title",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The title of the reward.",
              "children": []
            },
            {
              "name": "prompt",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The prompt shown to the viewer when they redeem the reward if user input is required (see the `is_user_input_required` field).",
              "children": []
            },
            {
              "name": "cost",
              "type": "Integer",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The cost of the reward in Channel Points.",
              "children": []
            },
            {
              "name": "image",
              "type": "Object",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "A set of custom images for the reward. This field is **null** if the broadcaster didn’t upload images.",
              "children": [
                {
                  "name": "url_1x",
                  "type": "String",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "The URL to a small version of the image.",
                  "children": []
                },
                {
                  "name": "url_2x",
                  "type": "String",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "The URL to a medium version of the image.",
                  "children": []
                },
                {
                  "name": "url_4x",
                  "type": "String",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "The URL to a large version of the image.",
                  "children": []
                }
              ]
            },
            {
              "name": "default_image",
              "type": "Object",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "A set of default images for the reward.",
              "children": [
                {
                  "name": "url_1x",
                  "type": "String",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "The URL to a small version of the image.",
                  "children": []
                },
                {
                  "name": "url_2x",
                  "type": "String",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "The URL to a medium version of the image.",
                  "children": []
                },
                {
                  "name": "url_4x",
                  "type": "String",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "The URL to a large version of the image.",
                  "children": []
                }
              ]
            },
            {
              "name": "background_color",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The background color to use for the reward. The color is in Hex format (for example, #00E5CB).",
              "children": []
            },
            {
              "name": "is_enabled",
              "type": "Boolean",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "A Boolean value that determines whether the reward is enabled. Is **true** if enabled; otherwise, **false**. Disabled rewards aren’t shown to the user.",
              "children": []
            },
            {
              "name": "is_user_input_required",
              "type": "Boolean",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "A Boolean value that determines whether the user must enter information when redeeming the reward. Is **true** if the user is prompted.",
              "children": []
            },
            {
              "name": "max_per_stream_setting",
              "type": "Object",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The settings used to determine whether to apply a maximum to the number of redemptions allowed per live stream.",
              "children": [
                {
                  "name": "is_enabled",
                  "type": "Boolean",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "A Boolean value that determines whether the reward applies a limit on the number of redemptions allowed per live stream. Is **true** if the reward applies a limit.",
                  "children": []
                },
                {
                  "name": "max_per_stream",
                  "type": "Int64",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "The maximum number of redemptions allowed per live stream.",
                  "children": []
                }
              ]
            },
            {
              "name": "max_per_user_per_stream_setting",
              "type": "Object",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The settings used to determine whether to apply a maximum to the number of redemptions allowed per user per live stream.",
              "children": [
                {
                  "name": "is_enabled",
                  "type": "Boolean",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "A Boolean value that determines whether the reward applies a limit on the number of redemptions allowed per user per live stream. Is **true** if the reward applies a limit.",
                  "children": []
                },
                {
                  "name": "max_per_user_per_stream",
                  "type": "Int64",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "The maximum number of redemptions allowed per user per live stream.",
                  "children": []
                }
              ]
            },
            {
              "name": "global_cooldown_setting",
              "type": "Object",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The settings used to determine whether to apply a cooldown period between redemptions and the length of the cooldown.",
              "children": [
                {
                  "name": "is_enabled",
                  "type": "Boolean",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "A Boolean value that determines whether to apply a cooldown period. Is **true** if a cooldown period is enabled.",
                  "children": []
                },
                {
                  "name": "global_cooldown_seconds",
                  "type": "Int64",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "The cooldown period, in seconds.",
                  "children": []
                }
              ]
            },
            {
              "name": "is_paused",
              "type": "Boolean",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "A Boolean value that determines whether the reward is currently paused. Is **true** if the reward is paused. Viewers can’t redeem paused rewards.",
              "children": []
            },
            {
              "name": "is_in_stock",
              "type": "Boolean",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "A Boolean value that determines whether the reward is currently in stock. Is **true** if the reward is in stock. Viewers can’t redeem out of stock rewards.",
              "children": []
            },
            {
              "name": "should_redemptions_skip_request_queue",
              "type": "Boolean",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "A Boolean value that determines whether redemptions should be set to FULFILLED status immediately when a reward is redeemed. If **false**, status is set to UNFULFILLED and follows the normal request queue process.",
              "children": []
            },
            {
              "name": "redemptions_redeemed_current_stream",
              "type": "Integer",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The number of redemptions redeemed during the current live stream. The number counts against the `max_per_stream_setting` limit. This field is **null** if the broadcaster’s stream isn’t live or _max\\_per\\_stream\\_setting_ isn’t enabled.",
              "children": []
            },
            {
              "name": "cooldown_expires_at",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The timestamp of when the cooldown period expires. Is **null** if the reward isn’t in a cooldown state. See the `global_cooldown_setting` field.",
              "children": []
            }
          ]
        }
      ]
    },
    "responseCodes": [
      [
        "200 OK",
        "Successfully retrieved the broadcaster’s list of the Custom Rewards."
      ],
      [
        "400 Bad Request",
        "* The _broadcaster\\_id_ query parameter is required.\n* The request exceeds the maximum number of _id_ query parameters that you may specify."
      ],
      [
        "401 Unauthorized",
        "* The Authorization header must specify a user access token.\n* The user access token must include the **channel:read:redemptions** scope.\n* The OAuth token is not valid.\n* The ID in the Client-Id header must match the Client ID in the OAuth token."
      ],
      [
        "403 Forbidden",
        "* The broadcaster is not a partner or affiliate."
      ],
      [
        "404 Not Found",
        "* All of the custom rewards specified using the _id_ query parameter were not found."
      ],
      [
        "500 Internal Server Error",
        ""
      ]
    ],
    "examples": "### Example Request\n\nGets the broadcaster’s list of custom rewards.\n\n```\ncurl -X GET 'https://api.twitch.tv/helix/channel_points/custom_rewards?broadcaster_id=274637212'\n-H 'Client-Id: gx2pv4208cff0ig9ou7nk3riccffxt' \\\n-H 'Authorization: Bearer vjxv3i0l4zxru966wsnwji51tmpkj2'\n\n```\n\n### Example Response\n\n```\n{\n  \"data\": [\n    {\n      \"broadcaster_name\": \"torpedo09\",\n      \"broadcaster_login\": \"torpedo09\",\n      \"broadcaster_id\": \"274637212\",\n      \"id\": \"92af127c-7326-4483-a52b-b0da0be61c01\",\n      \"image\": null,\n      \"background_color\": \"#00E5CB\",\n      \"is_enabled\": true,\n      \"cost\": 50000,\n      \"title\": \"game analysis\",\n      \"prompt\": \"\",\n      \"is_user_input_required\": false,\n      \"max_per_stream_setting\": {\n        \"is_enabled\": false,\n        \"max_per_stream\": 0\n      },\n      \"max_per_user_per_stream_setting\": {\n        \"is_enabled\": false,\n        \"max_per_user_per_stream\": 0\n      },\n      \"global_cooldown_setting\": {\n        \"is_enabled\": false,\n        \"global_cooldown_seconds\": 0\n      },\n      \"is_paused\": false,\n      \"is_in_stock\": true,\n      \"default_image\": {\n        \"url_1x\": \"https://static-cdn.jtvnw.net/custom-reward-images/default-1.png\",\n        \"url_2x\": \"https://static-cdn.jtvnw.net/custom-reward-images/default-2.png\",\n        \"url_4x\": \"https://static-cdn.jtvnw.net/custom-reward-images/default-4.png\"\n      },\n      \"should_redemptions_skip_request_queue\": false,\n      \"redemptions_redeemed_current_stream\": null,\n      \"cooldown_expires_at\": null\n    }\n  ]\n}\n\n```\n\n### Example Request\n\nGets the list of custom rewards that the calling Client ID can manage.\n\n```\ncurl -X GET 'https://api.twitch.tv/helix/channel_points/custom_rewards?broadcaster_id=274637212&only_manageable_rewards=true'\n-H 'Client-Id: gx2pv4208cff0ig9ou7nk3riccffxt' \\\n-H 'Authorization: Bearer vjxv3i0l4zxru966wsnwji51tmpkj2'​​​​​​​\n\n```\n\n### Example Response\n\n```\n{\n  \"data\": [\n    {\n      \"broadcaster_name\": \"torpedo09\",\n      \"broadcaster_id\": \"274637212\",\n      \"id\": \"92af127c-7326-4483-a52b-b0da0be61c01\",\n      \"image\": null,\n      \"background_color\": \"#00E5CB\",\n      \"is_enabled\": true,\n      \"cost\": 50000,\n      \"title\": \"game analysis\",\n      \"prompt\": \"\",\n      \"is_user_input_required\": false,\n      \"max_per_stream_setting\": {\n        \"is_enabled\": false,\n        \"max_per_stream\": 0\n      },\n      \"max_per_user_per_stream_setting\": {\n        \"is_enabled\": false,\n        \"max_per_user_per_stream\": 0\n      },\n      \"global_cooldown_setting\": {\n        \"is_enabled\": false,\n        \"global_cooldown_seconds\": 0\n      },\n      \"is_paused\": false,\n      \"is_in_stock\": true,\n      \"default_image\": {\n        \"url_1x\": \"https://static-cdn.jtvnw.net/custom-reward-images/default-1.png\",\n        \"url_2x\": \"https://static-cdn.jtvnw.net/custom-reward-images/default-2.png\",\n        \"url_4x\": \"https://static-cdn.jtvnw.net/custom-reward-images/default-4.png\"\n      },\n      \"should_redemptions_skip_request_queue\": false,\n      \"redemptions_redeemed_current_stream\": null,\n      \"cooldown_expires_at\": null\n    }\n  ]\n}\n\n```\n\n### Example Request\n\nGets the specified custom reward.\n\n```\ncurl -X GET 'https://api.twitch.tv/helix/channel_points/custom_rewards?broadcaster_id=274637212&id=92af127c-7326-4483-a52b-b0da0be61c01'\n-H 'Client-Id: gx2pv4208cff0ig9ou7nk3riccffxt' \\\n-H 'Authorization: Bearer vjxv3i0l4zxru966wsnwji51tmpkj2'​​​​​​​​​​​​​​\n\n```\n\n### Example Response\n\n```\n{\n  \"data\": [\n    {\n      \"broadcaster_name\": \"torpedo09\",\n      \"broadcaster_id\": \"274637212\",\n      \"id\": \"92af127c-7326-4483-a52b-b0da0be61c01\",\n      \"image\": null,\n      \"background_color\": \"#00E5CB\",\n      \"is_enabled\": true,\n      \"cost\": 50000,\n      \"title\": \"game analysis\",\n      \"prompt\": \"\",\n      \"is_user_input_required\": false,\n      \"max_per_stream_setting\": {\n        \"is_enabled\": false,\n        \"max_per_stream\": 0\n      },\n      \"max_per_user_per_stream_setting\": {\n        \"is_enabled\": false,\n        \"max_per_user_per_stream\": 0\n      },\n      \"global_cooldown_setting\": {\n        \"is_enabled\": false,\n        \"global_cooldown_seconds\": 0\n      },\n      \"is_paused\": false,\n      \"is_in_stock\": true,\n      \"default_image\": {\n        \"url_1x\": \"https://static-cdn.jtvnw.net/custom-reward-images/default-1.png\",\n        \"url_2x\": \"https://static-cdn.jtvnw.net/custom-reward-images/default-2.png\",\n        \"url_4x\": \"https://static-cdn.jtvnw.net/custom-reward-images/default-4.png\"\n      },\n      \"should_redemptions_skip_request_queue\": false,\n      \"redemptions_redeemed_current_stream\": null,\n      \"cooldown_expires_at\": null\n    }\n  ]\n}\n\n```"
  },
  {
    "id": "get-custom-reward-redemption",
    "name": "Get Custom Reward Redemption",
    "resource": "Channel Points",
    "description": "Gets a list of redemptions for a custom reward.",
    "descriptionFull": [
      "Gets a list of redemptions for the specified custom reward. The app used to create the reward is the only app that may get the redemptions."
    ],
    "authentication": [
      "Requires a user access token that includes the **channel:read:redemptions** scope."
    ],
    "authorization": [],
    "url": "https://api.twitch.tv/helix/channel_points/custom_rewards/redemptions",
    "method": "GET",
    "requestBody": {
      "description": [],
      "parameters": []
    },
    "requestQueryParams": {
      "description": [],
      "parameters": [
        {
          "name": "broadcaster_id",
          "type": "String",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "The ID of the broadcaster that owns the custom reward. This ID must match the user ID found in the user OAuth token.",
          "children": []
        },
        {
          "name": "reward_id",
          "type": "String",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "The ID that identifies the custom reward whose redemptions you want to get.",
          "children": []
        },
        {
          "name": "status",
          "type": "String",
          "possibleValues": [
            "CANCELED",
            "FULFILLED",
            "UNFULFILLED"
          ],
          "required": true,
          "depth": 0,
          "description": "The status of the redemptions to return. The possible case-sensitive values are:  \n  \n* CANCELED\n* FULFILLED\n* UNFULFILLED\n  \n**NOTE**: This field is required only if you don’t specify the _id_ query parameter.",
          "children": []
        },
        {
          "name": "id",
          "type": "String",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "A list of IDs to filter the redemptions by. To specify more than one ID, include this parameter for each redemption you want to get. For example, `id=1234&id=5678`. You may specify a maximum of 50 IDs.  \n  \nDuplicate IDs are ignored. The response contains only the IDs that were found. If none of the IDs were found, the response is 404 Not Found.",
          "children": []
        },
        {
          "name": "sort",
          "type": "String",
          "possibleValues": [
            "OLDEST",
            "NEWEST"
          ],
          "required": false,
          "depth": 0,
          "description": "The order to sort redemptions by. The possible case-sensitive values are:  \n  \n* OLDEST\n* NEWEST\n  \nThe default is OLDEST.",
          "children": []
        },
        {
          "name": "after",
          "type": "String",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "The cursor used to get the next page of results. The **Pagination** object in the response contains the cursor’s value. [Read more](https://dev.twitch.tv/docs/api/guide#pagination)",
          "children": []
        },
        {
          "name": "first",
          "type": "Integer",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "The maximum number of redemptions to return per page in the response. The minimum page size is 1 redemption per page and the maximum is 50\\. The default is 20.",
          "children": []
        }
      ]
    },
    "responseBody": {
      "description": [],
      "parameters": [
        {
          "name": "data",
          "type": "Object[]",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "The list of redemptions for the specified reward. The list is empty if there are no redemptions that match the redemption criteria.",
          "children": [
            {
              "name": "broadcaster_id",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The ID that uniquely identifies the broadcaster.",
              "children": []
            },
            {
              "name": "broadcaster_login",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The broadcaster’s login name.",
              "children": []
            },
            {
              "name": "broadcaster_name",
              "type": "string",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The broadcaster’s display name.",
              "children": []
            },
            {
              "name": "id",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The ID that uniquely identifies this redemption.",
              "children": []
            },
            {
              "name": "user_login",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The user’s login name.",
              "children": []
            },
            {
              "name": "user_id",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The ID that uniquely identifies the user that redeemed the reward.",
              "children": []
            },
            {
              "name": "user_name",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The user’s display name.",
              "children": []
            },
            {
              "name": "user_input",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The text the user entered at the prompt when they redeemed the reward; otherwise, an empty string if user input was not required.",
              "children": []
            },
            {
              "name": "status",
              "type": "String",
              "possibleValues": [
                "CANCELED",
                "FULFILLED",
                "UNFULFILLED"
              ],
              "required": null,
              "depth": 1,
              "description": "The state of the redemption. Possible values are:  \n  \n* CANCELED\n* FULFILLED\n* UNFULFILLED",
              "children": []
            },
            {
              "name": "redeemed_at",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The date and time of when the reward was redeemed, in RFC3339 format.",
              "children": []
            },
            {
              "name": "reward",
              "type": "Object",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The reward that the user redeemed.",
              "children": [
                {
                  "name": "id",
                  "type": "String",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "The ID that uniquely identifies the redeemed reward.",
                  "children": []
                },
                {
                  "name": "title",
                  "type": "String",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "The reward’s title.",
                  "children": []
                },
                {
                  "name": "prompt",
                  "type": "String",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "The prompt displayed to the viewer if user input is required.",
                  "children": []
                },
                {
                  "name": "reward",
                  "type": "Int64",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "The reward’s cost, in Channel Points.",
                  "children": []
                }
              ]
            }
          ]
        }
      ]
    },
    "responseCodes": [
      [
        "200 Ok",
        "Successfully retrieved the list of redeemed custom rewards."
      ],
      [
        "400 Bad Request",
        "* The _broadcaster\\_id_ query parameter is required.\n* The _reward\\_id_ query parameter is required.\n* The _status_ query parameter is required if you didn't specify the _id_ query parameter.\n* The value in the _status_ query parameter is not valid.\n* The value in the _sort_ query parameter is not valid."
      ],
      [
        "401 Unauthorized",
        "* The Authorization header is required and must specify a user access token.\n* The user access token must include the **channel:read:redemptions** scope.\n* The OAuth token is not valid.\n* The ID in the Client-Id header must match the Client ID in the OAuth token."
      ],
      [
        "403 Forbidden",
        "* The ID in the Client-Id header must match the client ID used to create the custom reward.\n* The broadcaster is not a partner or affiliate."
      ],
      [
        "404 Not Found",
        "* All of the redemptions specified using the _id_ query parameter were not found."
      ],
      [
        "500 Internal Server Error",
        ""
      ]
    ],
    "examples": "### Example Request\n\nGets the list of redemptions that were canceled for the specified reward.\n\n```\ncurl -X GET 'https://api.twitch.tv/helix/channel_points/custom_rewards/redemptions?broadcaster_id=274637212&reward_id=92af127c-7326-4483-a52b-b0da0be61c01&status=CANCELED' \\\n-H 'Client-Id: gx2pv4208cff0ig9ou7nk3riccffxt' \\\n-H 'Authorization: Bearer vjxv3i0l4zxru966wsnwji51tmpkj2'\n\n```\n\n### Example Response\n\n```\n{\n  \"data\": [\n    {\n      \"broadcaster_name\": \"torpedo09\",\n      \"broadcaster_login\": \"torpedo09\",\n      \"broadcaster_id\": \"274637212\",\n      \"id\": \"17fa2df1-ad76-4804-bfa5-a40ef63efe63\",\n      \"user_login\": \"torpedo09\",\n      \"user_id\": \"274637212\",\n      \"user_name\": \"torpedo09\",\n      \"user_input\": \"\",\n      \"status\": \"CANCELED\",\n      \"redeemed_at\": \"2020-07-01T18:37:32Z\",\n      \"reward\": {\n        \"id\": \"92af127c-7326-4483-a52b-b0da0be61c01\",\n        \"title\": \"game analysis\",\n        \"prompt\": \"\",\n        \"cost\": 50000\n      }\n    }\n  ],\n  \"pagination\": {\n      \"cursor\": \"eyJiIjpudWxsLCJhIjp7IkN1cnNvciI6Ik1UZG1ZVEprWmpFdFlXUTNOaTAwT0RBMExXSm1ZVFV0WVRRd1pXWTJNMlZtWlRZelgxOHlNREl3TFRBM0xUQXhWREU0T2pNM09qTXlMakl6TXpFeU56RTFOMW89In19\"\n  }\n}\n\n```\n\n### Example Request\n\nGets redemptions by ID.\n\n```\ncurl -X GET 'https://api.twitch.tv/helix/channel_points/custom_rewards/redemptions?broadcaster_id=274637212&reward_id=92af127c-7326-4483-a52b-b0da0be61c01&id=17fa2df1-ad76-4804-bfa5-a40ef63efe63' \\\n-H 'Client-Id: gx2pv4208cff0ig9ou7nk3riccffxt' \\\n-H 'Authorization: Bearer vjxv3i0l4zxru966wsnwji51tmpkj2'\n\n```\n\n### Example Response\n\n```\n{\n  \"data\": [\n    {\n      \"broadcaster_name\": \"torpedo09\",\n      \"broadcaster_login\": \"torpedo09\",\n      \"broadcaster_id\": \"274637212\",\n      \"id\": \"17fa2df1-ad76-4804-bfa5-a40ef63efe63\",\n      \"user_id\": \"274637212\",\n      \"user_name\": \"torpedo09\",\n      \"user_input\": \"\",\n      \"status\": \"CANCELED\",\n      \"redeemed_at\": \"2020-07-01T18:37:32Z\",\n      \"reward\": {\n        \"id\": \"92af127c-7326-4483-a52b-b0da0be61c01\",\n        \"title\": \"game analysis\",\n        \"prompt\": \"\",\n        \"cost\": 50000\n      }\n    }\n  ]\n}\n\n```"
  },
  {
    "id": "update-custom-reward",
    "name": "Update Custom Reward",
    "resource": "Channel Points",
    "description": "Updates a custom reward.",
    "descriptionFull": [
      "Updates a custom reward. The app used to create the reward is the only app that may update the reward."
    ],
    "authentication": [
      "Requires a user access token that includes the **channel:manage:redemptions** scope."
    ],
    "authorization": [],
    "url": "https://api.twitch.tv/helix/channel_points/custom_rewards",
    "method": "PATCH",
    "requestBody": {
      "description": [
        "The body of the request should contain only the fields you’re updating."
      ],
      "parameters": [
        {
          "name": "title",
          "type": "String",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "The reward’s title. The title may contain a maximum of 45 characters and it must be unique amongst all of the broadcaster’s custom rewards.",
          "children": []
        },
        {
          "name": "prompt",
          "type": "String",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "The prompt shown to the viewer when they redeem the reward. Specify a prompt if `is_user_input_required` is **true**. The prompt is limited to a maximum of 200 characters.",
          "children": []
        },
        {
          "name": "cost",
          "type": "Int64",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "The cost of the reward, in channel points. The minimum is 1 point.",
          "children": []
        },
        {
          "name": "background_color",
          "type": "String",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "The background color to use for the reward. Specify the color using Hex format (for example, #00E5CB).",
          "children": []
        },
        {
          "name": "is_enabled",
          "type": "Boolean",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "A Boolean value that indicates whether the reward is enabled. Set to **true** to enable the reward. Viewers see only enabled rewards.",
          "children": []
        },
        {
          "name": "is_user_input_required",
          "type": "Boolean",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "A Boolean value that determines whether users must enter information to redeem the reward. Set to **true** if user input is required. See the `prompt` field.",
          "children": []
        },
        {
          "name": "is_max_per_stream_enabled",
          "type": "Boolean",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "A Boolean value that determines whether to limit the maximum number of redemptions allowed per live stream (see the `max_per_stream` field). Set to **true** to limit redemptions.",
          "children": []
        },
        {
          "name": "max_per_stream",
          "type": "Int64",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "The maximum number of redemptions allowed per live stream. Applied only if `is_max_per_stream_enabled` is **true**. The minimum value is 1.",
          "children": []
        },
        {
          "name": "is_max_per_user_per_stream_enabled",
          "type": "Boolean",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "A Boolean value that determines whether to limit the maximum number of redemptions allowed per user per stream (see `max_per_user_per_stream`). The minimum value is 1\\. Set to **true** to limit redemptions.",
          "children": []
        },
        {
          "name": "max_per_user_per_stream",
          "type": "Int64",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "The maximum number of redemptions allowed per user per stream. Applied only if `is_max_per_user_per_stream_enabled` is **true**.",
          "children": []
        },
        {
          "name": "is_global_cooldown_enabled",
          "type": "Boolean",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "A Boolean value that determines whether to apply a cooldown period between redemptions. Set to **true** to apply a cooldown period. For the duration of the cooldown period, see `global_cooldown_seconds`.",
          "children": []
        },
        {
          "name": "global_cooldown_seconds",
          "type": "Int64",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "The cooldown period, in seconds. Applied only if `is_global_cooldown_enabled` is **true**. The minimum value is 1; however, for it to be shown in the Twitch UX, the minimum value is 60.",
          "children": []
        },
        {
          "name": "is_paused",
          "type": "Boolean",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "A Boolean value that determines whether to pause the reward. Set to **true** to pause the reward. Viewers can’t redeem paused rewards..",
          "children": []
        },
        {
          "name": "should_redemptions_skip_request_queue",
          "type": "Boolean",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "A Boolean value that determines whether redemptions should be set to FULFILLED status immediately when a reward is redeemed. If **false**, status is set to UNFULFILLED and follows the normal request queue process.",
          "children": []
        }
      ]
    },
    "requestQueryParams": {
      "description": [],
      "parameters": [
        {
          "name": "broadcaster_id",
          "type": "String",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "The ID of the broadcaster that’s updating the reward. This ID must match the user ID found in the OAuth token.",
          "children": []
        },
        {
          "name": "id",
          "type": "String",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "The ID of the reward to update.",
          "children": []
        }
      ]
    },
    "responseBody": {
      "description": [],
      "parameters": [
        {
          "name": "data",
          "type": "Object[]",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "The list contains the single reward that you updated.",
          "children": [
            {
              "name": "broadcaster_id",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The ID that uniquely identifies the broadcaster.",
              "children": []
            },
            {
              "name": "broadcaster_login",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The broadcaster’s login name.",
              "children": []
            },
            {
              "name": "broadcaster_name",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The broadcaster’s display name.",
              "children": []
            },
            {
              "name": "id",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The ID that uniquely identifies this custom reward.",
              "children": []
            },
            {
              "name": "title",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The title of the reward.",
              "children": []
            },
            {
              "name": "prompt",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The prompt shown to the viewer when they redeem the reward if user input is required. See the `is_user_input_required` field.",
              "children": []
            },
            {
              "name": "cost",
              "type": "Int64",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The cost of the reward in Channel Points.",
              "children": []
            },
            {
              "name": "image",
              "type": "Object",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "A set of custom images for the reward. This field is **null** if the broadcaster didn’t upload images.",
              "children": [
                {
                  "name": "url_1x",
                  "type": "String",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "The URL to a small version of the image.",
                  "children": []
                },
                {
                  "name": "url_2x",
                  "type": "String",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "The URL to a medium version of the image.",
                  "children": []
                },
                {
                  "name": "url_4x",
                  "type": "String",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "The URL to a large version of the image.",
                  "children": []
                }
              ]
            },
            {
              "name": "default_image",
              "type": "Object",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "A set of default images for the reward.",
              "children": [
                {
                  "name": "url_1x",
                  "type": "String",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "The URL to a small version of the image.",
                  "children": []
                },
                {
                  "name": "url_2x",
                  "type": "String",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "The URL to a medium version of the image.",
                  "children": []
                },
                {
                  "name": "url_4x",
                  "type": "String",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "The URL to a large version of the image.",
                  "children": []
                }
              ]
            },
            {
              "name": "background_color",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The background color to use for the reward. The color is in Hex format (for example, #00E5CB).",
              "children": []
            },
            {
              "name": "is_enabled",
              "type": "Boolean",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "A Boolean value that determines whether the reward is enabled. Is **true** if enabled; otherwise, **false**. Disabled rewards aren’t shown to the user.",
              "children": []
            },
            {
              "name": "is_user_input_required",
              "type": "Boolean",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "A Boolean value that determines whether the user must enter information when they redeem the reward. Is **true** if the user is prompted.",
              "children": []
            },
            {
              "name": "max_per_stream_setting",
              "type": "Object",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The settings used to determine whether to apply a maximum to the number of redemptions allowed per live stream.",
              "children": [
                {
                  "name": "is_enabled",
                  "type": "Boolean",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "A Boolean value that determines whether the reward applies a limit on the number of redemptions allowed per live stream. Is **true** if the reward applies a limit.",
                  "children": []
                },
                {
                  "name": "max_per_stream",
                  "type": "Int64",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "The maximum number of redemptions allowed per live stream.",
                  "children": []
                }
              ]
            },
            {
              "name": "max_per_user_per_stream_setting",
              "type": "Object",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The settings used to determine whether to apply a maximum to the number of redemptions allowed per user per live stream.",
              "children": [
                {
                  "name": "is_enabled",
                  "type": "Boolean",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "A Boolean value that determines whether the reward applies a limit on the number of redemptions allowed per user per live stream. Is **true** if the reward applies a limit.",
                  "children": []
                },
                {
                  "name": "max_per_user_per_stream",
                  "type": "Int64",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "The maximum number of redemptions allowed per user per live stream.",
                  "children": []
                }
              ]
            },
            {
              "name": "global_cooldown_setting",
              "type": "Object",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The settings used to determine whether to apply a cooldown period between redemptions and the length of the cooldown.",
              "children": [
                {
                  "name": "is_enabled",
                  "type": "Boolean",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "A Boolean value that determines whether to apply a cooldown period. Is **true** if a cooldown period is enabled.",
                  "children": []
                }
              ]
            },
            {
              "name": "is_paused",
              "type": "Boolean",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "A Boolean value that determines whether the reward is currently paused. Is **true** if the reward is paused. Viewers can’t redeem paused rewards.",
              "children": []
            },
            {
              "name": "is_in_stock",
              "type": "Boolean",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "A Boolean value that determines whether the reward is currently in stock. Is **true** if the reward is in stock. Viewers can’t redeem out of stock rewards.",
              "children": []
            },
            {
              "name": "should_redemptions_skip_request_queue",
              "type": "Boolean",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "A Boolean value that determines whether redemptions should be set to FULFILLED status immediately when a reward is redeemed. If **false**, status is set to UNFULFILLED and follows the normal request queue process.",
              "children": []
            },
            {
              "name": "redemptions_redeemed_current_stream",
              "type": "Integer",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The number of redemptions redeemed during the current live stream. The number counts against the `max_per_stream_setting` limit. This field is **null** if the broadcaster’s stream isn’t live or _max\\_per\\_stream\\_setting_ isn’t enabled.",
              "children": []
            },
            {
              "name": "cooldown_expires_at",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The timestamp of when the cooldown period expires. Is **null** if the reward isn’t in a cooldown state. See the `global_cooldown_setting` field.",
              "children": []
            }
          ]
        }
      ]
    },
    "responseCodes": [
      [
        "200 OK",
        "Successfully updated the Custom Reward."
      ],
      [
        "400 Bad Request",
        "* The _broadcaster\\_id_ query parameter is required.\n* The _id_ query parameter is required.\n* The `title` must contain a minimum of 1 character and a maximum of 45 characters.\n* The `title` must be unique amongst all of the broadcaster's custom rewards.\n* The `cost` field must contain a minimum of 1 point.\n* The `prompt` field is limited to a maximum of 200 characters.\n* If `is_max_per_stream_enabled` is **true**, the minimum value for `max_per_stream` is 1.\n* If `is_max_per_user_per_stream_enabled` is **true**, the minimum value for `max_per_user_per_stream` is 1.\n* If `is_global_cooldown_enabled` is **true**, the minimum value for `global_cooldown_seconds` is 1 and the maximum is 604800."
      ],
      [
        "401 Unauthorized",
        "* The Authorization header is required and must specify a user access token.\n* The user access token must include the **channel:manage:redemptions** scope.\n* The OAuth token is not valide.\n* The ID in the Client-Id header must match the Client ID in the OAuth token."
      ],
      [
        "403 Forbidden",
        "* The ID in the Client-Id header must match the client ID used to create the custom reward.\n* The broadcaster is not a partner or affiliate."
      ],
      [
        "404 Not Found",
        "* The custom reward specified in the _id_ query parameter was not found."
      ],
      [
        "500 Internal Server Error",
        ""
      ]
    ],
    "examples": "### Example Request\n\nDisables the specified custom reward.\n\n```\ncurl -X PATCH 'https://api.twitch.tv/helix/channel_points/custom_rewards?broadcaster_id=274637212&id=92af127c-7326-4483-a52b-b0da0be61c01' \\\n-H 'client-id: gx2pv4208cff0ig9ou7nk3riccffxt' \\\n-H 'Authorization: Bearer vjxv3i0l4zxru966wsnwji51tmpkj2' \\\n-H 'Content-Type: application/json' \\\n-d '{\n  \"is_enabled\": false\n }'\n\n\n```\n\n### Example Response\n\n```\n{\n  \"data\": [\n    {\n      \"broadcaster_name\": \"torpedo09\",\n      \"broadcaster_login\": \"torpedo09\",\n      \"broadcaster_id\": \"274637212\",\n      \"id\": \"92af127c-7326-4483-a52b-b0da0be61c01\",\n      \"image\": null,\n      \"background_color\": \"#00E5CB\",\n      \"is_enabled\": false,\n      \"cost\": 30000,\n      \"title\": \"game analysis 2v2\",\n      \"prompt\": \"\",\n      \"is_user_input_required\": false,\n      \"max_per_stream_setting\": {\n        \"is_enabled\": true,\n        \"max_per_stream\": 60\n      },\n      \"max_per_user_per_stream_setting\": {\n        \"is_enabled\": false,\n        \"max_per_user_per_stream\": 0\n      },\n      \"global_cooldown_setting\": {\n        \"is_enabled\": false,\n        \"global_cooldown_seconds\": 0\n      },\n      \"is_paused\": false,\n      \"is_in_stock\": false,\n      \"default_image\": {\n        \"url_1x\": \"https://static-cdn.jtvnw.net/custom-reward-images/default-1.png\",\n        \"url_2x\": \"https://static-cdn.jtvnw.net/custom-reward-images/default-2.png\",\n        \"url_4x\": \"https://static-cdn.jtvnw.net/custom-reward-images/default-4.png\"\n      },\n      \"should_redemptions_skip_request_queue\": true,\n      \"redemptions_redeemed_current_stream\": 60,\n      \"cooldown_expires_at\": null\n    }\n  ]\n}\n\n```\n\n### Example Request\n\nUpdates the reward’s title.\n\n```\ncurl -X PATCH 'https://api.twitch.tv/helix/channel_points/custom_rewards?broadcaster_id=274637212&id=92af127c-7326-4483-a52b-b0da0be61c01' \\\n-H 'client-id: gx2pv4208cff0ig9ou7nk3riccffxt' \\\n-H 'Authorization: Bearer vjxv3i0l4zxru966wsnwji51tmpkj2' \\\n-H 'Content-Type: application/json' \\\n-d '{\n  \"title\": \"game analysis 2v2\"\n }'\n\n\n```\n\n### Example Response\n\n```\n{\n  \"data\": [\n    {\n      \"broadcaster_name\": \"torpedo09\",\n      \"broadcaster_login\": \"torpedo09\",\n      \"broadcaster_id\": \"274637212\",\n      \"id\": \"92af127c-7326-4483-a52b-b0da0be61c01\",\n      \"image\": null,\n      \"background_color\": \"\",\n      \"is_enabled\": false,\n      \"cost\": 30000,\n      \"title\": \"game analysis 2v2\",\n      \"prompt\": \"\",\n      \"is_user_input_required\": false,\n      \"max_per_stream_setting\": {\n        \"is_enabled\": true,\n        \"max_per_stream\": 60\n      },\n      \"max_per_user_per_stream_setting\": {\n        \"is_enabled\": false,\n        \"max_per_user_per_stream\": 0\n      },\n      \"global_cooldown_setting\": {\n        \"is_enabled\": false,\n        \"global_cooldown_seconds\": 0\n      },\n      \"is_paused\": false,\n      \"is_in_stock\": true,\n      \"default_image\": {\n        \"url_1x\": \"https://static-cdn.jtvnw.net/custom-reward-images/default-1.png\",\n        \"url_2x\": \"https://static-cdn.jtvnw.net/custom-reward-images/default-2.png\",\n        \"url_4x\": \"https://static-cdn.jtvnw.net/custom-reward-images/default-4.png\"\n      },\n      \"should_redemptions_skip_request_queue\": true,\n      \"redemptions_redeemed_current_stream\": 60,\n      \"cooldown_expires_at\": null\n    }\n  ]\n}\n\n```"
  },
  {
    "id": "update-redemption-status",
    "name": "Update Redemption Status",
    "resource": "Channel Points",
    "description": "Updates a redemption’s status.",
    "descriptionFull": [
      "Updates a redemption’s status. You may update a redemption only if its status is UNFULFILLED. The app used to create the reward is the only app that may update the redemption."
    ],
    "authentication": [
      "Requires a user access token that includes the **channel:manage:redemptions** scope."
    ],
    "authorization": [],
    "url": "https://api.twitch.tv/helix/channel_points/custom_rewards/redemptions",
    "method": "PATCH",
    "requestBody": {
      "description": [],
      "parameters": [
        {
          "name": "status",
          "type": "String",
          "possibleValues": [
            "CANCELED",
            "FULFILLED"
          ],
          "required": true,
          "depth": 0,
          "description": "The status to set the redemption to. Possible values are:  \n  \n* CANCELED\n* FULFILLED\n  \nSetting the status to CANCELED refunds the user’s channel points.",
          "children": []
        }
      ]
    },
    "requestQueryParams": {
      "description": [],
      "parameters": [
        {
          "name": "id",
          "type": "String",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "A list of IDs that identify the redemptions to update. To specify more than one ID, include this parameter for each redemption you want to update. For example, `id=1234&id=5678`. You may specify a maximum of 50 IDs.",
          "children": []
        },
        {
          "name": "broadcaster_id",
          "type": "String",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "The ID of the broadcaster that’s updating the redemption. This ID must match the user ID associated with the user OAuth token.",
          "children": []
        },
        {
          "name": "reward_id",
          "type": "String",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "The ID that identifies the reward that’s been redeemed.",
          "children": []
        }
      ]
    },
    "responseBody": {
      "description": [],
      "parameters": [
        {
          "name": "data",
          "type": "Object[]",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "The list contains the single redemption that you updated.",
          "children": [
            {
              "name": "broadcaster_id",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The ID that uniquely identifies the broadcaster.",
              "children": []
            },
            {
              "name": "broadcaster_login",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The broadcaster’s login name.",
              "children": []
            },
            {
              "name": "broadcaster_name",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The broadcaster’s display name.",
              "children": []
            },
            {
              "name": "id",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The ID that uniquely identifies this redemption..",
              "children": []
            },
            {
              "name": "user_id",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The ID of the user that redeemed the reward.",
              "children": []
            },
            {
              "name": "user_name",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The user’s display name.",
              "children": []
            },
            {
              "name": "user_login",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The user’s login name.",
              "children": []
            },
            {
              "name": "reward",
              "type": "Object",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "An object that describes the reward that the user redeemed.",
              "children": [
                {
                  "name": "id",
                  "type": "String",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "The ID that uniquely identifies the reward.",
                  "children": []
                },
                {
                  "name": "title",
                  "type": "String",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "The reward’s title.",
                  "children": []
                },
                {
                  "name": "prompt",
                  "type": "String",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "The prompt displayed to the viewer if user input is required.",
                  "children": []
                },
                {
                  "name": "cost",
                  "type": "Int64",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "The reward’s cost, in Channel Points.",
                  "children": []
                }
              ]
            },
            {
              "name": "user_input",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The text that the user entered at the prompt when they redeemed the reward; otherwise, an empty string if user input was not required.",
              "children": []
            },
            {
              "name": "status",
              "type": "String",
              "possibleValues": [
                "CANCELED",
                "FULFILLED",
                "UNFULFILLED"
              ],
              "required": null,
              "depth": 1,
              "description": "The state of the redemption. Possible values are:  \n  \n* CANCELED\n* FULFILLED\n* UNFULFILLED",
              "children": []
            },
            {
              "name": "redeemed_at",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The date and time of when the reward was redeemed, in RFC3339 format.",
              "children": []
            }
          ]
        }
      ]
    },
    "responseCodes": [
      [
        "200 OK",
        "Successfully updated the redemption’s status."
      ],
      [
        "400 Bad Request",
        "* The _broadcaster\\_id_ query parameter is required.\n* The _reward\\_id_ query parameter is required.\n* The _id_ query parameter is required.\n* The value in the _status_ query parameter is not valid."
      ],
      [
        "401 Unauthorized",
        "* The Authorization header is required and must specify a user access token.\n* The user access token must include the **channel:manage:redemptions** scope.\n* The OAuth token is not valid.\n* The ID in the Client-Id header must match the Client ID in the OAuth token."
      ],
      [
        "403 Forbidden",
        "* The ID in the Client-Id header must match the client ID used to create the custom reward.\n* The broadcaster is not a partner or affiliate."
      ],
      [
        "404 Not Found",
        "* The custom reward specified in the _reward\\_id_ query parameter was not found.\n* The redemptions specified using the _id_ query parameter were not found or their statuses weren't marked as UNFULFILLED."
      ],
      [
        "500 Internal Server Error",
        ""
      ]
    ],
    "examples": "### Example Request\n\nUpdates a redemption’s status.\n\n```\ncurl --X PATCH 'https://api.twitch.tv/helix/channel_points/custom_rewards/redemptions?broadcaster_id=274637212&reward_id=92af127c-7326-4483-a52b-b0da0be61c01&id=17fa2df1-ad76-4804-bfa5-a40ef63efe63' \\\n-H 'client-id: gx2pv4208cff0ig9ou7nk3riccffxt' \\\n-H 'Authorization: Bearer vjxv3i0l4zxru966wsnwji51tmpkj2' \\\n-H 'Content-Type: application/json' \\\n-d '{\n  \"status\": \"CANCELED\"\n}'\n\n```\n\n### Example Response\n\n```\n{\n  \"data\": [\n    {\n      \"broadcaster_name\": \"torpedo09\",\n      \"broadcaster_login\": \"torpedo09\",\n      \"broadcaster_id\": \"274637212\",\n      \"id\": \"17fa2df1-ad76-4804-bfa5-a40ef63efe63\",\n      \"user_id\": \"274637212\",\n      \"user_name\": \"torpedo09\",\n      \"user_login\": \"torpedo09\",\n      \"user_input\": \"\",\n      \"status\": \"CANCELED\",\n      \"redeemed_at\": \"2020-07-01T18:37:32Z\",\n      \"reward\": {\n        \"id\": \"92af127c-7326-4483-a52b-b0da0be61c01\",\n        \"title\": \"game analysis\",\n        \"prompt\": \"\",\n        \"cost\": 50000\n      }\n    }\n  ]\n}\n\n```"
  },
  {
    "id": "get-charity-campaign",
    "name": "Get Charity Campaign",
    "resource": "Charity",
    "description": "BETA Gets information about the broadcaster’s active charity campaign.",
    "descriptionFull": [
      "[BETA](https://dev.twitch.tv/docs/product-lifecycle) Gets information about the charity campaign that a broadcaster is running, such as their fundraising goal and the amount that’s been donated so far.",
      "To receive events as donations occur, use the [channel.charity\\_campaign.donate](https://dev.twitch.tv/docs/eventsub/eventsub-subscription-types#channelcharity%5Fcampaigndonate) subscription type."
    ],
    "authentication": [],
    "authorization": [
      "Requires a user access token that includes the **channel:read:charity** scope."
    ],
    "url": "https://api.twitch.tv/helix/charity/campaigns",
    "method": "GET",
    "requestBody": {
      "description": [],
      "parameters": []
    },
    "requestQueryParams": {
      "description": [],
      "parameters": [
        {
          "name": "broadcaster_id",
          "type": "String",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "The ID of the broadcaster that’s actively running a charity campaign. This ID must match the user ID in the access token.",
          "children": []
        }
      ]
    },
    "responseBody": {
      "description": [],
      "parameters": [
        {
          "name": "data",
          "type": "Object[]",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "A list that contains the charity campaign that the broadcaster is currently running. The array is empty if the broadcaster is not running a charity campaign; the campaign information is no longer available as soon as the campaign ends.",
          "children": [
            {
              "name": "id",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "An ID that uniquely identifies the charity campaign.",
              "children": []
            },
            {
              "name": "broadcaster_id",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "An ID that uniquely identifies the broadcaster that’s running the campaign.",
              "children": []
            },
            {
              "name": "broadcaster_login",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The broadcaster’s login name.",
              "children": []
            },
            {
              "name": "broadcaster_name",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The broadcaster’s display name.",
              "children": []
            },
            {
              "name": "charity_name",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The charity’s name.",
              "children": []
            },
            {
              "name": "charity_description",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "A description of the charity.",
              "children": []
            },
            {
              "name": "charity_logo",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "A URL to an image of the charity’s logo. The image’s type is PNG and its size is 100px X 100px.",
              "children": []
            },
            {
              "name": "charity_website",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "A URL to the charity’s website.",
              "children": []
            },
            {
              "name": "current_amount",
              "type": "Object",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The current amount of donations that the campaign has received.",
              "children": [
                {
                  "name": "value",
                  "type": "Integer",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "The monetary amount. The amount is specified in the currency’s minor unit. For example, the minor units for USD is cents, so if the amount is $5.50 USD, `value` is set to 550.",
                  "children": []
                },
                {
                  "name": "decimal_places",
                  "type": "Integer",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "The number of decimal places used by the currency. For example, USD uses two decimal places. Use this number to translate `value` from minor units to major units by using the formula:  \n  \n`value / 10^decimal_places`",
                  "children": []
                },
                {
                  "name": "currency",
                  "type": "String",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "The ISO-4217 three-letter currency code that identifies the type of currency in `value`.",
                  "children": []
                }
              ]
            },
            {
              "name": "target_amount",
              "type": "Object",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The amount of money that the campaign is trying to raise. This field may be **null** if the broadcaster has not defined a target goal.",
              "children": [
                {
                  "name": "value",
                  "type": "Integer",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "The monetary amount. The amount is specified in the currency’s minor unit. For example, the minor units for USD is cents, so if the amount is $5.50 USD, `value` is set to 550.",
                  "children": []
                },
                {
                  "name": "decimal_places",
                  "type": "Integer",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "The number of decimal places used by the currency. For example, USD uses two decimal places. Use this number to translate `value` from minor units to major units by using the formula:  \n  \n`value / 10^decimal_places`",
                  "children": []
                },
                {
                  "name": "currency",
                  "type": "String",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "The ISO-4217 three-letter currency code that identifies the type of currency in `value`.",
                  "children": []
                }
              ]
            }
          ]
        }
      ]
    },
    "responseCodes": [
      [
        "200 OK",
        "Successfully retrieved information about the broadcaster’s active charity campaign."
      ],
      [
        "400 Bad Request",
        "* The _broadcaster\\_id_ query parameter is required.\n* The _broadcaster\\_id_ query parameter is not valid."
      ],
      [
        "401 Unauthorized",
        "* The ID in the _broadcaster\\_id_ query parameter must match the user ID in the access token.\n* The Authorization header is required and must contain a user access token.\n* The user access token must include the **channel:read:charity** scope.\n* The OAuth token is not valid.\n* The client ID specified in the Client-Id header must match the client ID specified in the OAuth token."
      ],
      [
        "403 Forbidden",
        "* The broadcaster must be a partner or affiliate."
      ]
    ],
    "examples": "### Example Request\n\nGets the broadcaster’s active charity campaign.\n\n```\ncurl -X GET 'https://api.twitch.tv/helix/charity/campaigns?broadcaster_id=123456' \\\n-H 'Authorization: Bearer kpvy3cjboyptmiacwr0c19hotn5s' \\\n-H 'Client-Id: hof5gwx0su6owfn0nyan9c87zr6t'\n\n```\n\n### Example Response\n\n```\n\n{\n  \"data\": [\n    {\n      \"id\": \"123-abc-456-def\",\n      \"broadcaster_id\": \"123456\",\n      \"broadcaster_name\": \"SunnySideUp\",\n      \"broadcaster_login\": \"sunnysideup\",\n      \"charity_name\": \"Example name\",\n      \"charity_description\": \"Example description\",\n      \"charity_logo\": \"https://abc.cloudfront.net/ppgf/1000/100.png\",\n      \"charity_website\": \"https://www.example.com\",\n      \"current_amount\": {\n        \"value\": 86000,\n        \"decimal_places\": 2,\n        \"currency\": \"USD\"\n      },\n      \"target_amount\": {\n        \"value\": 1500000,\n        \"decimal_places\": 2,\n        \"currency\": \"USD\"\n      }\n    }\n  ]\n}\n\n```"
  },
  {
    "id": "get-chatters",
    "name": "Get Chatters",
    "resource": "Chat",
    "description": "BETA Gets the list of users that are connected to the specified broadcaster’s chat session.",
    "descriptionFull": [
      "[BETA](https://dev.twitch.tv/docs/product-lifecycle) Gets the list of users that are connected to the specified broadcaster’s chat session.",
      "Note that there is a delay between when users join and leave a chat and when the list is updated accordingly."
    ],
    "authentication": [],
    "authorization": [
      "Requires a user access token that includes the **moderator:read:chatters** scope."
    ],
    "url": "https://api.twitch.tv/helix/chat/chatters",
    "method": "GET",
    "requestBody": {
      "description": [],
      "parameters": []
    },
    "requestQueryParams": {
      "description": [],
      "parameters": [
        {
          "name": "broadcaster_id",
          "type": "String",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "The ID of the broadcaster whose list of chatters you want to get.",
          "children": []
        },
        {
          "name": "moderator_id",
          "type": "String",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "The ID of the moderator or the specified broadcaster that’s requesting the list of chatters. This ID must match the user ID associated with the user access token.  \n  \nThe moderator must have permission to moderate the broadcaster’s chat room.",
          "children": []
        },
        {
          "name": "first",
          "type": "Integer",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "The maximum number of items to return per page in the response. The minimum page size is 1 item per page and the maximum is 1,000\\. The default is 100.",
          "children": []
        },
        {
          "name": "after",
          "type": "String",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "The cursor used to get the next page of results. The **Pagination** object in the response contains the cursor’s value. [Read More](https://dev.twitch.tv/docs/api/guide#pagination)",
          "children": []
        }
      ]
    },
    "responseBody": {
      "description": [],
      "parameters": [
        {
          "name": "data",
          "type": "Object[]",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "The list of users that are connected to the specified broadcaster’s chat room. The list is empty if no users are connected to the chat room.",
          "children": [
            {
              "name": "user_login",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The login name of a user that’s connected to the broadcaster’s chat room.  \n  \nTo get the user’s ID and display name, use the [Get Users](https://dev.twitch.tv/docs/api/reference#get-users) endpoint. You can get the IDs associated with up to 100 login names.  \n  \nTo determine whether the user is a moderator or VIP, use the [Get Moderators](https://dev.twitch.tv/docs/api/reference#get-moderators) and [Get VIPs](https://dev.twitch.tv/docs/api/reference#get-vips) endpoints. You can check the roles of up to 100 users (after getting their IDs).",
              "children": []
            }
          ]
        },
        {
          "name": "pagination",
          "type": "Object",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "Contains the information used to page through the list of results. The object is empty if there are no more pages left to page through. [Read More](https://dev.twitch.tv/docs/api/guide#pagination)",
          "children": [
            {
              "name": "cursor",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The cursor used to get the next page of results. Use the cursor to set the request’s _after_ query parameter.",
              "children": []
            }
          ]
        },
        {
          "name": "total",
          "type": "Integer",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "The total number of users that are connected to the broadcaster’s chat room. As you page through the list, the number of users may change as users join and leave the chat room.",
          "children": []
        }
      ]
    },
    "responseCodes": [
      [
        "200 OK",
        "Successfully retrieved the broadcaster’s list of chatters."
      ],
      [
        "400 Bad Request",
        "* The _broadcaster\\_id_ query parameter is required.\n* The ID in the _broadcaster\\_id_ query parameter is not valid.\n* The _moderator\\_id_ query parameter is required.\n* The ID in the _moderator\\_id_ query parameter is not valid."
      ],
      [
        "401 Unauthorized",
        "* The ID in the _moderator\\_id_ query parameter must match the user ID in the access token.\n* The Authorization header is required and must contain a user access token.\n* The user access token must include the **moderator:read:chatters** scope.\n* The access token is not valid.\n* The client ID specified in the Client-Id header does not match the client ID specified in the access token."
      ],
      [
        "403 Forbidden",
        "* The user identified in the _moderator\\_id_ query parameter is not one of the broadcaster's moderators."
      ]
    ],
    "examples": "### Example Request\n\nGets the list of users that are connected to the specified broadcaster’s chat room.\n\n```\ncurl -X GET 'https://api.twitch.tv/helix/chat/chatters?broadcaster_id=123456&moderator_id=654321' \\\n-H 'Authorization: Bearer kpvy3cjboyptmiacwr0c19hotn5s' \\\n-H 'Client-Id: hof5gwx0su6owfn0nyan9c87zr6t'\n\n```\n\n### Example Response\n\n```\n\n{\n  \"data\": [\n    {\n      \"user_login\": \"smittysmithers\"\n    },\n    ...\n  ],\n  \"pagination\": {\n    \"cursor\": \"eyJiIjpudWxsLCJhIjp7Ik9mZnNldCI6NX19\"\n  },\n  \"total\": 8\n}\n\n```"
  },
  {
    "id": "get-channel-emotes",
    "name": "Get Channel Emotes",
    "resource": "Chat",
    "description": "Gets all emotes that the specified Twitch channel created.",
    "descriptionFull": [
      "Gets all emotes that the specified Twitch channel created. Broadcasters create these custom emotes for users who subscribe to or follow the channel or cheer Bits in the channel’s chat window. [Learn More](https://dev.twitch.tv/docs/irc/emotes)",
      "For information about the custom emotes, see [subscriber emotes](https://help.twitch.tv/s/article/subscriber-emote-guide), [Bits tier emotes](https://help.twitch.tv/s/article/custom-bit-badges-guide?language=bg#slots), and [follower emotes](https://blog.twitch.tv/en/2021/06/04/kicking-off-10-years-with-our-biggest-emote-update-ever/).",
      "**NOTE:** With the exception of custom follower emotes, users may use custom emotes in any Twitch chat."
    ],
    "authentication": [],
    "authorization": [
      "Requires an app access token or user access token."
    ],
    "url": "https://api.twitch.tv/helix/chat/emotes",
    "method": "GET",
    "requestBody": {
      "description": [],
      "parameters": []
    },
    "requestQueryParams": {
      "description": [],
      "parameters": [
        {
          "name": "broadcaster_id",
          "type": "String",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "An ID that identifies the broadcaster whose emotes you want to get.",
          "children": []
        }
      ]
    },
    "responseBody": {
      "description": [],
      "parameters": [
        {
          "name": "data",
          "type": "Object[]",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "The list of emotes that the specified broadcaster created. If the broadcaster hasn’t created custom emotes, the list is empty.",
          "children": [
            {
              "name": "id",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "An ID that identifies this emote.",
              "children": []
            },
            {
              "name": "name",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The name of the emote. This is the name that viewers type in the chat window to get the emote to appear.",
              "children": []
            },
            {
              "name": "images",
              "type": "Object",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The image URLs for the emote. These image URLs always provide a static, non-animated emote image with a light background.  \n  \n**NOTE:** You should use the templated URL in the `template` field to fetch the image instead of using these URLs.",
              "children": [
                {
                  "name": "url_1x",
                  "type": "String",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "A URL to the small version (28px x 28px) of the emote.",
                  "children": []
                },
                {
                  "name": "url_2x",
                  "type": "String",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "A URL to the medium version (56px x 56px) of the emote.",
                  "children": []
                },
                {
                  "name": "url_4x",
                  "type": "String",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "A URL to the large version (112px x 112px) of the emote.",
                  "children": []
                }
              ]
            },
            {
              "name": "tier",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The subscriber tier at which the emote is unlocked. This field contains the tier information only if `emote_type` is set to `subscriptions`, otherwise, it’s an empty string.",
              "children": []
            },
            {
              "name": "emote_type",
              "type": "String",
              "possibleValues": [
                "bitstier",
                "follower",
                "subscriptions"
              ],
              "required": null,
              "depth": 1,
              "description": "The type of emote. The possible values are:   \n  \n* bitstier — A custom Bits tier emote.\n* follower — A custom follower emote.\n* subscriptions — A custom subscriber emote.",
              "children": []
            },
            {
              "name": "emote_set_id",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "An ID that identifies the emote set that the emote belongs to.",
              "children": []
            },
            {
              "name": "format",
              "type": "String[]",
              "possibleValues": [
                "animated",
                "static"
              ],
              "required": null,
              "depth": 1,
              "description": "The formats that the emote is available in. For example, if the emote is available only as a static PNG, the array contains only `static`. But if the emote is available as a static PNG and an animated GIF, the array contains `static` and `animated`. The possible formats are:   \n  \n* animated — An animated GIF is available for this emote.\n* static — A static PNG file is available for this emote.",
              "children": []
            },
            {
              "name": "scale",
              "type": "String[]",
              "possibleValues": [
                "1.0",
                "2.0",
                "3.0"
              ],
              "required": null,
              "depth": 1,
              "description": "The sizes that the emote is available in. For example, if the emote is available in small and medium sizes, the array contains 1.0 and 2.0\\. Possible sizes are:   \n  \n* 1.0 — A small version (28px x 28px) is available.\n* 2.0 — A medium version (56px x 56px) is available.\n* 3.0 — A large version (112px x 112px) is available.",
              "children": []
            },
            {
              "name": "theme_mode",
              "type": "String[]",
              "possibleValues": [
                "dark",
                "light"
              ],
              "required": null,
              "depth": 1,
              "description": "The background themes that the emote is available in. Possible themes are:   \n  \n* dark\n* light",
              "children": []
            }
          ]
        },
        {
          "name": "template",
          "type": "String",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "A templated URL. Use the values from the `id`, `format`, `scale`, and `theme_mode` fields to replace the like-named placeholder strings in the templated URL to create a CDN (content delivery network) URL that you use to fetch the emote. For information about what the template looks like and how to use it to fetch emotes, see [Emote CDN URL format](https://dev.twitch.tv/docs/irc/emotes#cdn-template). You should use this template instead of using the URLs in the `images` object.",
          "children": []
        }
      ]
    },
    "responseCodes": [
      [
        "200 OK",
        "Successfully retrieved the custom emotes for the specified broadcaster."
      ],
      [
        "400 Bad Request",
        "* The _broadcaster\\_id_ query parameter is required."
      ],
      [
        "401 Unauthorized",
        "* The Authorization header is required and must specify a valid app access token or user access token.\n* The OAuth token is not valid.\n* The ID in the Client-Id header must match the Client ID in the OAuth token."
      ]
    ],
    "examples": "### Example Request\n\nGets custom emotes that the TwitchDev channel created.\n\n```\ncurl -X GET 'https://api.twitch.tv/helix/chat/emotes?broadcaster_id=141981764' \\\n-H 'Authorization: Bearer cfabdegwdoklmawdzdo98xt2fo512y' \\\n-H 'Client-Id: uo6dggojyb8d6soh92zknwmi5ej1q2'\n\n```\n\n```\n# Twitch CLI example that gets the custom emotes for the specified channel.\n\ntwitch api get /chat/emotes -q broadcaster_id=141981764\n\n```\n\n### Example Response\n\n```\n\n{\n  \"data\": [\n    {\n      \"id\": \"304456832\",\n      \"name\": \"twitchdevPitchfork\",\n      \"images\": {\n        \"url_1x\": \"https://static-cdn.jtvnw.net/emoticons/v2/304456832/static/light/1.0\",\n        \"url_2x\": \"https://static-cdn.jtvnw.net/emoticons/v2/304456832/static/light/2.0\",\n        \"url_4x\": \"https://static-cdn.jtvnw.net/emoticons/v2/304456832/static/light/3.0\"\n      },\n      \"tier\": \"1000\",\n      \"emote_type\": \"subscriptions\",\n      \"emote_set_id\": \"301590448\",\n      \"format\": [\n        \"static\"\n      ],\n      \"scale\": [\n        \"1.0\",\n        \"2.0\",\n        \"3.0\"\n      ],\n      \"theme_mode\": [\n        \"light\",\n        \"dark\"\n      ]\n    },\n    ...\n    {\n      \"id\": \"emotesv2_4c3b4ed516de493bbcd2df2f5d450f49\",\n      \"name\": \"twitchdevHyperPitchfork\",\n      \"images\": {\n        \"url_1x\": \"https://static-cdn.jtvnw.net/emoticons/v2/emotesv2_4c3b4ed516de493bbcd2df2f5d450f49/static/light/1.0\",\n        \"url_2x\": \"https://static-cdn.jtvnw.net/emoticons/v2/emotesv2_4c3b4ed516de493bbcd2df2f5d450f49/static/light/2.0\",\n        \"url_4x\": \"https://static-cdn.jtvnw.net/emoticons/v2/emotesv2_4c3b4ed516de493bbcd2df2f5d450f49/static/light/3.0\"\n      },\n      \"tier\": \"1000\",\n      \"emote_type\": \"subscriptions\",\n      \"emote_set_id\": \"318939165\",\n      \"format\": [\n        \"static\",\n        \"animated\"\n      ],\n      \"scale\": [\n        \"1.0\",\n        \"2.0\",\n        \"3.0\"\n      ],\n      \"theme_mode\": [\n        \"light\",\n        \"dark\"\n      ]\n    },\n  ],\n  \"template\": \"https://static-cdn.jtvnw.net/emoticons/v2/{{id}}/{{format}}/{{theme_mode}}/{{scale}}\"\n}\n\n\n```"
  },
  {
    "id": "get-global-emotes",
    "name": "Get Global Emotes",
    "resource": "Chat",
    "description": "Gets all global emotes.",
    "descriptionFull": [
      "Gets all [global emotes](https://www.twitch.tv/creatorcamp/en/learn-the-basics/emotes/). Global emotes are Twitch-created emotes that users can use in any Twitch chat.",
      "[Learn More](https://dev.twitch.tv/docs/irc/emotes)"
    ],
    "authentication": [],
    "authorization": [
      "Requires an app access token or user access token."
    ],
    "url": "https://api.twitch.tv/helix/chat/emotes/global",
    "method": "GET",
    "requestBody": {
      "description": [],
      "parameters": []
    },
    "requestQueryParams": {
      "description": [
        "None"
      ],
      "parameters": []
    },
    "responseBody": {
      "description": [],
      "parameters": [
        {
          "name": "data",
          "type": "Object[]",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "The list of global emotes.",
          "children": [
            {
              "name": "id",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "An ID that identifies this emote.",
              "children": []
            },
            {
              "name": "name",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The name of the emote. This is the name that viewers type in the chat window to get the emote to appear.",
              "children": []
            },
            {
              "name": "images",
              "type": "Object",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The image URLs for the emote. These image URLs always provide a static, non-animated emote image with a light background.  \n  \n**NOTE:** You should use the templated URL in the `template` field to fetch the image instead of using these URLs.",
              "children": [
                {
                  "name": "url_1x",
                  "type": "String",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "A URL to the small version (28px x 28px) of the emote.",
                  "children": []
                },
                {
                  "name": "url_2x",
                  "type": "String",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "A URL to the medium version (56px x 56px) of the emote.",
                  "children": []
                },
                {
                  "name": "url_4x",
                  "type": "String",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "A URL to the large version (112px x 112px) of the emote.",
                  "children": []
                }
              ]
            },
            {
              "name": "format",
              "type": "String[]",
              "possibleValues": [
                "animated",
                "static"
              ],
              "required": null,
              "depth": 1,
              "description": "The formats that the emote is available in. For example, if the emote is available only as a static PNG, the array contains only `static`. But if the emote is available as a static PNG and an animated GIF, the array contains `static` and `animated`. The possible formats are:   \n  \n* animated — An animated GIF is available for this emote.\n* static — A static PNG file is available for this emote.",
              "children": []
            },
            {
              "name": "scale",
              "type": "String[]",
              "possibleValues": [
                "1.0",
                "2.0",
                "3.0"
              ],
              "required": null,
              "depth": 1,
              "description": "The sizes that the emote is available in. For example, if the emote is available in small and medium sizes, the array contains 1.0 and 2.0\\. Possible sizes are:   \n  \n* 1.0 — A small version (28px x 28px) is available.\n* 2.0 — A medium version (56px x 56px) is available.\n* 3.0 — A large version (112px x 112px) is available.",
              "children": []
            },
            {
              "name": "theme_mode",
              "type": "String[]",
              "possibleValues": [
                "dark",
                "light"
              ],
              "required": null,
              "depth": 1,
              "description": "The background themes that the emote is available in. Possible themes are:   \n  \n* dark\n* light",
              "children": []
            }
          ]
        },
        {
          "name": "template",
          "type": "String",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "A templated URL. Use the values from the `id`, `format`, `scale`, and `theme_mode` fields to replace the like-named placeholder strings in the templated URL to create a CDN (content delivery network) URL that you use to fetch the emote. For information about what the template looks like and how to use it to fetch emotes, see [Emote CDN URL format](https://dev.twitch.tv/docs/irc/emotes#cdn-template). You should use this template instead of using the URLs in the `images` object.",
          "children": []
        }
      ]
    },
    "responseCodes": [
      [
        "200 OK",
        "Successfully retrieved the global emotes."
      ],
      [
        "401 Unauthorized",
        "* The Authorization header is required and must specify a valid app access token or user access token.\n* The OAuth token is not valid.\n* The ID in the Client-Id header must match the Client ID in the OAuth token."
      ]
    ],
    "examples": "### Example Request\n\nGets all global emotes.\n\n```\ncurl -X GET 'https://api.twitch.tv/helix/chat/emotes/global' \\\n-H 'Authorization: Bearer cfabdegwdoklmawdzdo98xt2fo512y' \\\n-H 'Client-Id: uo6dggojyb8d6soh92zknwmi5ej1q2'\n\n```\n\n```\n# Twitch CLI example that gets all global emotes.\n\ntwitch api get /chat/emotes/global\n\n```\n\n### Example Response\n\n```\n\n{\n  \"data\": [\n    {\n      \"id\": \"196892\",\n      \"name\": \"TwitchUnity\",\n      \"images\": {\n        \"url_1x\": \"https://static-cdn.jtvnw.net/emoticons/v2/196892/static/light/1.0\",\n        \"url_2x\": \"https://static-cdn.jtvnw.net/emoticons/v2/196892/static/light/2.0\",\n        \"url_4x\": \"https://static-cdn.jtvnw.net/emoticons/v2/196892/static/light/3.0\"\n      },\n      \"format\": [\n        \"static\"\n      ],\n      \"scale\": [\n        \"1.0\",\n        \"2.0\",\n        \"3.0\"\n      ],\n      \"theme_mode\": [\n        \"light\",\n        \"dark\"\n      ]\n    },\n    ...\n  ],\n  \"template\": \"https://static-cdn.jtvnw.net/emoticons/v2/{{id}}/{{format}}/{{theme_mode}}/{{scale}}\"\n}\n\n\n```"
  },
  {
    "id": "get-emote-sets",
    "name": "Get Emote Sets",
    "resource": "Chat",
    "description": "Gets emotes for one or more specified emote sets.",
    "descriptionFull": [
      "Gets emotes for one or more specified emote sets.",
      "An emote set groups emotes that have a similar context. For example, Twitch places all the subscriber emotes that a broadcaster uploads for their channel in the same emote set.",
      "[Learn More](https://dev.twitch.tv/docs/irc/emotes)"
    ],
    "authentication": [],
    "authorization": [
      "Requires an app access token or user access token."
    ],
    "url": "https://api.twitch.tv/helix/chat/emotes/set",
    "method": "GET",
    "requestBody": {
      "description": [],
      "parameters": []
    },
    "requestQueryParams": {
      "description": [],
      "parameters": [
        {
          "name": "emote_set_id",
          "type": "String",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "An ID that identifies the emote set to get. Include this parameter for each emote set you want to get. For example, `emote_set_id=1234&emote_set_id=5678`. You may specify a maximum of 25 IDs. The response contains only the IDs that were found and ignores duplicate IDs.  \n  \nTo get emote set IDs, use the [Get Channel Emotes](https://dev.twitch.tv/docs/api/reference#get-channel-emotes) API.",
          "children": []
        }
      ]
    },
    "responseBody": {
      "description": [],
      "parameters": [
        {
          "name": "data",
          "type": "Object[]",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "The list of emotes found in the specified emote sets. The list is empty if none of the IDs were found. The list is in the same order as the set IDs specified in the request. Each set contains one or more emoticons.",
          "children": [
            {
              "name": "id",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "An ID that uniquely identifies this emote.",
              "children": []
            },
            {
              "name": "name",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The name of the emote. This is the name that viewers type in the chat window to get the emote to appear.",
              "children": []
            },
            {
              "name": "images",
              "type": "Object",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The image URLs for the emote. These image URLs always provide a static, non-animated emote image with a light background.  \n  \n**NOTE:** You should use the templated URL in the `template` field to fetch the image instead of using these URLs.",
              "children": [
                {
                  "name": "url_1x",
                  "type": "String",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "A URL to the small version (28px x 28px) of the emote.",
                  "children": []
                },
                {
                  "name": "url_2x",
                  "type": "String",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "A URL to the medium version (56px x 56px) of the emote.",
                  "children": []
                },
                {
                  "name": "url_4x",
                  "type": "String",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "A URL to the large version (112px x 112px) of the emote.",
                  "children": []
                }
              ]
            },
            {
              "name": "emote_type",
              "type": "String",
              "possibleValues": [
                "bitstier",
                "follower",
                "subscriptions"
              ],
              "required": null,
              "depth": 1,
              "description": "The type of emote. The possible values are:   \n  \n* bitstier — A Bits tier emote.\n* follower — A follower emote.\n* subscriptions — A subscriber emote.",
              "children": []
            },
            {
              "name": "emote_set_id",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "An ID that identifies the emote set that the emote belongs to.",
              "children": []
            },
            {
              "name": "owner_id",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The ID of the broadcaster who owns the emote.",
              "children": []
            },
            {
              "name": "format",
              "type": "String[]",
              "possibleValues": [
                "animated",
                "static"
              ],
              "required": null,
              "depth": 1,
              "description": "The formats that the emote is available in. For example, if the emote is available only as a static PNG, the array contains only `static`. But if the emote is available as a static PNG and an animated GIF, the array contains `static` and `animated`. The possible formats are:   \n  \n* animated — An animated GIF is available for this emote.\n* static — A static PNG file is available for this emote.",
              "children": []
            },
            {
              "name": "scale",
              "type": "String[]",
              "possibleValues": [
                "1.0",
                "2.0",
                "3.0"
              ],
              "required": null,
              "depth": 1,
              "description": "The sizes that the emote is available in. For example, if the emote is available in small and medium sizes, the array contains 1.0 and 2.0\\. Possible sizes are:   \n  \n* 1.0 — A small version (28px x 28px) is available.\n* 2.0 — A medium version (56px x 56px) is available.\n* 3.0 — A large version (112px x 112px) is available.",
              "children": []
            },
            {
              "name": "theme_mode",
              "type": "String[]",
              "possibleValues": [
                "dark",
                "light"
              ],
              "required": null,
              "depth": 1,
              "description": "The background themes that the emote is available in. Possible themes are:   \n  \n* dark\n* light",
              "children": []
            }
          ]
        },
        {
          "name": "template",
          "type": "string",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "A templated URL. Use the values from the `id`, `format`, `scale`, and `theme_mode` fields to replace the like-named placeholder strings in the templated URL to create a CDN (content delivery network) URL that you use to fetch the emote. For information about what the template looks like and how to use it to fetch emotes, see [Emote CDN URL format](https://dev.twitch.tv/docs/irc/emotes#cdn-template). You should use this template instead of using the URLs in the `images` object.",
          "children": []
        }
      ]
    },
    "responseCodes": [
      [
        "200 OK",
        "Successfully retrieved the emotes for the specified emote sets."
      ],
      [
        "400 Bad Request",
        "* The _emote\\_set\\_id_ query parameter is required.\n* The number of _emote\\_set\\_id_ query parameters exceeds the maximum allowed."
      ],
      [
        "401 Unauthorized",
        "* The Authorization header is required and must specify a valid app access token or user access token.\n* The OAuth token is not valid.\n* The ID in the Client-Id header must match the Client ID in the OAuth token."
      ]
    ],
    "examples": "### Example Request\n\nGets the emotes for the TwitchDev subscriber emote set.\n\n```\ncurl -X GET 'https://api.twitch.tv/helix/chat/emotes/set?emote_set_id=301590448' \\\n-H 'Authorization: Bearer cfabdegwdoklmawdzdo98xt2fo512y' \\\n-H 'Client-Id: uo6dggojyb8d6soh92zknwmi5ej1q2'\n\n```\n\n```\n# Twitch CLI example that gets the emotes for the specified emote set.\n\ntwitch api get /chat/emotes/set -q emote_set_id=301590448\n\n```\n\n### Example Response\n\n```\n\n{\n  \"data\": [\n    {\n      \"id\": \"304456832\",\n      \"name\": \"twitchdevPitchfork\",\n      \"images\": {\n        \"url_1x\": \"https://static-cdn.jtvnw.net/emoticons/v2/304456832/static/light/1.0\",\n        \"url_2x\": \"https://static-cdn.jtvnw.net/emoticons/v2/304456832/static/light/2.0\",\n        \"url_4x\": \"https://static-cdn.jtvnw.net/emoticons/v2/304456832/static/light/3.0\"\n      },\n      \"emote_type\": \"subscriptions\",\n      \"emote_set_id\": \"301590448\",\n      \"owner_id\": \"141981764\",\n      \"format\": [\n        \"static\"\n      ],\n      \"scale\": [\n        \"1.0\",\n        \"2.0\",\n        \"3.0\"\n      ],\n      \"theme_mode\": [\n        \"light\",\n        \"dark\"\n      ]\n    },\n    ...\n  ],\n  \"template\": \"https://static-cdn.jtvnw.net/emoticons/v2/{{id}}/{{format}}/{{theme_mode}}/{{scale}}\"\n}\n\n\n```"
  },
  {
    "id": "get-channel-chat-badges",
    "name": "Get Channel Chat Badges",
    "resource": "Chat",
    "description": "Gets all badges that the specified broadcaster created.",
    "descriptionFull": [
      "Gets all badges that the specified broadcaster created. The list is empty if the broadcaster hasn’t created custom chat badges. For information about custom badges, see [subscriber badges](https://help.twitch.tv/s/article/subscriber-badge-guide) and [Bits badges](https://help.twitch.tv/s/article/custom-bit-badges-guide)."
    ],
    "authentication": [],
    "authorization": [
      "Requires an app access token or user access token."
    ],
    "url": "https://api.twitch.tv/helix/chat/badges",
    "method": "GET",
    "requestBody": {
      "description": [],
      "parameters": []
    },
    "requestQueryParams": {
      "description": [],
      "parameters": []
    },
    "responseBody": {
      "description": [],
      "parameters": [
        {
          "name": "data",
          "type": "Object[]",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "The list of chat badges. The list is sorted in ascending order by `set_id`, and within a set, the list is sorted in ascending order by `id`.",
          "children": [
            {
              "name": "set_id",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "An ID that identifies this set of chat badges. For example, Bits or Subscriber.",
              "children": []
            },
            {
              "name": "versions",
              "type": "Object[]",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The list of chat badges in this set.",
              "children": [
                {
                  "name": "id",
                  "type": "String",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "An ID that identifies this version of the badge. The ID can be any value. For example, for Bits, the ID is the Bits tier level, but for World of Warcraft, it could be Alliance or Horde.",
                  "children": []
                },
                {
                  "name": "image_url_1x",
                  "type": "String",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "A URL to the small version (18px x 18px) of the badge.",
                  "children": []
                },
                {
                  "name": "image_url_2x",
                  "type": "String",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "A URL to the medium version (36px x 36px) of the badge.",
                  "children": []
                },
                {
                  "name": "image_url_4x",
                  "type": "String",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "A URL to the large version (72px x 72px) of the badge.",
                  "children": []
                }
              ]
            }
          ]
        }
      ]
    },
    "responseCodes": [
      [
        "200 OK",
        "Successfully retrieved the broadcaster’s custom chat badges."
      ],
      [
        "400 Bad Request",
        "* The _broadcaster\\_id_ query parameter is required."
      ],
      [
        "401 Unauthorized",
        "* The Authorization header is required and must specify a valid app access token or user access token.\n* The OAuth token is not valid.\n* The ID in the Client-Id header must match the Client ID in the OAuth token."
      ]
    ],
    "examples": "### Example Request\n\nGet the list of custom chat badges that the BlueLava Twitch channel created.\n\n```\ncurl -X GET 'https://api.twitch.tv/helix/chat/badges?broadcaster_id=135093069' \\\n-H 'Authorization: Bearer cfabdegwdoklmawdzdo98xt2fo512y' \\\n-H 'Client-Id: uo6dggojyb8d6soh92zknwmi5ej1q2'\n\n```\n\n### Example Response\n\n```\n{\n  \"data\": [\n    {\n      \"set_id\": \"bits\",\n      \"versions\": [\n        {\n          \"id\": \"1\",\n          \"image_url_1x\": \"https://static-cdn.jtvnw.net/badges/v1/743a0f3b-84b3-450b-96a0-503d7f4a9764/1\",\n          \"image_url_2x\": \"https://static-cdn.jtvnw.net/badges/v1/743a0f3b-84b3-450b-96a0-503d7f4a9764/2\",\n          \"image_url_4x\": \"https://static-cdn.jtvnw.net/badges/v1/743a0f3b-84b3-450b-96a0-503d7f4a9764/3\"\n        }\n      ]\n    },\n    {\n      \"set_id\": \"subscriber\",\n      \"versions\": [\n        {\n          \"id\": \"0\",\n          \"image_url_1x\": \"https://static-cdn.jtvnw.net/badges/v1/eb4a8a4c-eacd-4f5e-b9f2-394348310442/1\",\n          \"image_url_2x\": \"https://static-cdn.jtvnw.net/badges/v1/eb4a8a4c-eacd-4f5e-b9f2-394348310442/2\",\n          \"image_url_4x\": \"https://static-cdn.jtvnw.net/badges/v1/eb4a8a4c-eacd-4f5e-b9f2-394348310442/3\"\n        },\n        ...\n      ]\n    }\n  ]\n}\n\n```"
  },
  {
    "id": "get-global-chat-badges",
    "name": "Get Global Chat Badges",
    "resource": "Chat",
    "description": "Gets the list of chat badges that Twitch created.",
    "descriptionFull": [
      "Gets the list of chat badges that Twitch created. Users can use these badges in any channel’s chat room. For information about chat badges, see [Twitch Chat Badges Guide](https://help.twitch.tv/s/article/twitch-chat-badges-guide)."
    ],
    "authentication": [],
    "authorization": [
      "Requires an app access token or user access token."
    ],
    "url": "https://api.twitch.tv/helix/chat/badges/global",
    "method": "GET",
    "requestBody": {
      "description": [],
      "parameters": []
    },
    "requestQueryParams": {
      "description": [
        "None"
      ],
      "parameters": []
    },
    "responseBody": {
      "description": [],
      "parameters": [
        {
          "name": "data",
          "type": "Object[]",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "The list of chat badges. The list is sorted in ascending order by `set_id`, and within a set, the list is sorted in ascending order by `id`.",
          "children": [
            {
              "name": "set_id",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "An ID that identifies this set of chat badges. For example, Bits or Subscriber.",
              "children": []
            },
            {
              "name": "versions",
              "type": "Object[]",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The list of chat badges in this set.",
              "children": [
                {
                  "name": "id",
                  "type": "String",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "An ID that identifies this version of the badge. The ID can be any value. For example, for Bits, the ID is the Bits tier level, but for World of Warcraft, it could be Alliance or Horde.",
                  "children": []
                },
                {
                  "name": "image_url_1x",
                  "type": "String",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "A URL to the small version (18px x 18px) of the badge.",
                  "children": []
                },
                {
                  "name": "image_url_2x",
                  "type": "String",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "A URL to the medium version (36px x 36px) of the badge.",
                  "children": []
                },
                {
                  "name": "image_url_4x",
                  "type": "String",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "A URL to the large version (72px x 72px) of the badge.",
                  "children": []
                }
              ]
            }
          ]
        }
      ]
    },
    "responseCodes": [
      [
        "200 OK",
        "Successfully retrieved the list of global chat badges."
      ],
      [
        "401 Unauthorized",
        "* The Authorization header is required and must specify a valid app access token or user access token.\n* The OAuth token is not valid.\n* The ID in the Client-Id header must match the Client ID in the OAuth token."
      ]
    ],
    "examples": "### Example Request\n\nGets the list of global chat badges.\n\n```\ncurl -X GET 'https://api.twitch.tv/helix/chat/badges/global' \\\n-H 'Authorization: Bearer cfabdegwdoklmawdzdo98xt2fo512y' \\\n-H 'Client-Id: uo6dggojyb8d6soh92zknwmi5ej1q2'\n\n```\n\n### Example Response\n\n```\n{\n  \"data\": [\n    ...\n    {\n      \"set_id\": \"vip\",\n      \"versions\": [\n        {\n          \"id\": \"1\",\n          \"image_url_1x\": \"https://static-cdn.jtvnw.net/badges/v1/b817aba4-fad8-49e2-b88a-7cc744dfa6ec/1\",\n          \"image_url_2x\": \"https://static-cdn.jtvnw.net/badges/v1/b817aba4-fad8-49e2-b88a-7cc744dfa6ec/2\",\n          \"image_url_4x\": \"https://static-cdn.jtvnw.net/badges/v1/b817aba4-fad8-49e2-b88a-7cc744dfa6ec/3\"\n        }\n      ]\n    },\n    ...\n  ]\n}\n\n```"
  },
  {
    "id": "get-chat-settings",
    "name": "Get Chat Settings",
    "resource": "Chat",
    "description": "Gets the broadcaster’s chat settings.",
    "descriptionFull": [
      "Gets the broadcaster’s chat settings.",
      "For an overview of chat settings, see [Chat Commands for Broadcasters and Moderators](https://help.twitch.tv/s/article/chat-commands#AllMods) and [Moderator Preferences](https://help.twitch.tv/s/article/setting-up-moderation-for-your-twitch-channel#modpreferences)."
    ],
    "authentication": [],
    "authorization": [
      "Requires an app access token or user access token."
    ],
    "url": "https://api.twitch.tv/helix/chat/settings",
    "method": "GET",
    "requestBody": {
      "description": [],
      "parameters": []
    },
    "requestQueryParams": {
      "description": [],
      "parameters": [
        {
          "name": "broadcaster_id",
          "type": "String",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "The ID of the broadcaster whose chat settings you want to get.",
          "children": []
        },
        {
          "name": "moderator_id",
          "type": "String",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "The ID of a user that has permission to moderate the broadcaster’s chat room, or the broadcaster’s ID if they’re getting the settings.  \n  \nThis field is required only if you want to include the `non_moderator_chat_delay` and `non_moderator_chat_delay_duration` settings in the response.  \n  \nIf you specify this field, this ID must match the user ID in the user access token.",
          "children": []
        }
      ]
    },
    "responseBody": {
      "description": [],
      "parameters": [
        {
          "name": "data",
          "type": "Object[]",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "The list of chat settings. The list contains a single object with all the settings.",
          "children": [
            {
              "name": "broadcaster_id",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The ID of the broadcaster specified in the request.",
              "children": []
            },
            {
              "name": "emote_mode",
              "type": "Boolean",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "A Boolean value that determines whether chat messages must contain only emotes. Is **true** if chat messages may contain only emotes; otherwise, **false**.",
              "children": []
            },
            {
              "name": "follower_mode",
              "type": "Boolean",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "A Boolean value that determines whether the broadcaster restricts the chat room to followers only.  \n  \nIs **true** if the broadcaster restricts the chat room to followers only; otherwise, **false**.  \n  \nSee the `follower_mode_duration` field for how long users must follow the broadcaster before being able to participate in the chat room.",
              "children": []
            },
            {
              "name": "follower_mode_duration",
              "type": "Integer",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The length of time, in minutes, that users must follow the broadcaster before being able to participate in the chat room. Is **null** if `follower_mode` is **false**.",
              "children": []
            },
            {
              "name": "moderator_id",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The moderator’s ID. The response includes this field only if the request specifies a user access token that includes the **moderator:read:chat\\_settings** scope.",
              "children": []
            },
            {
              "name": "non_moderator_chat_delay",
              "type": "Boolean",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "A Boolean value that determines whether the broadcaster adds a short delay before chat messages appear in the chat room. This gives chat moderators and bots a chance to remove them before viewers can see the message. See the `non_moderator_chat_delay_duration` field for the length of the delay. Is **true** if the broadcaster applies a delay; otherwise, **false**.  \n  \nThe response includes this field only if the request specifies a user access token that includes the **moderator:read:chat\\_settings** scope and the user in the _moderator\\_id_ query parameter is one of the broadcaster’s moderators.",
              "children": []
            },
            {
              "name": "non_moderator_chat_delay_duration",
              "type": "Integer",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The amount of time, in seconds, that messages are delayed before appearing in chat. Is **null** if `non_moderator_chat_delay` is **false**.  \n  \nThe response includes this field only if the request specifies a user access token that includes the **moderator:read:chat\\_settings** scope and the user in the _moderator\\_id_ query parameter is one of the broadcaster’s moderators.",
              "children": []
            },
            {
              "name": "slow_mode",
              "type": "Boolean",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "A Boolean value that determines whether the broadcaster limits how often users in the chat room are allowed to send messages.  \n  \nIs **true** if the broadcaster applies a delay; otherwise, **false**.  \n  \nSee the `slow_mode_wait_time` field for the delay.",
              "children": []
            },
            {
              "name": "slow_mode_wait_time",
              "type": "Integer",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The amount of time, in seconds, that users must wait between sending messages.  \n  \nIs **null** if slow\\_mode is **false**.",
              "children": []
            },
            {
              "name": "subscriber_mode",
              "type": "Boolean",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "A Boolean value that determines whether only users that subscribe to the broadcaster’s channel may talk in the chat room.  \n  \nIs **true** if the broadcaster restricts the chat room to subscribers only; otherwise, **false**.",
              "children": []
            },
            {
              "name": "unique_chat_mode",
              "type": "Boolean",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "A Boolean value that determines whether the broadcaster requires users to post only unique messages in the chat room.  \n  \nIs **true** if the broadcaster requires unique messages only; otherwise, **false**.",
              "children": []
            }
          ]
        }
      ]
    },
    "responseCodes": [
      [
        "200 OK",
        "Successfully retrieved the broadcaster’s chat settings."
      ],
      [
        "400 Bad Request",
        "* The _broadcaster\\_id_ query parameter is required."
      ],
      [
        "401 Unauthorized",
        "* The Authorization header is required and must specify a valid app access token or user access token.\n* The OAuth token is not valid.\n* The ID in the Client-Id header must match the Client ID in the OAuth token."
      ]
    ],
    "examples": "### Example Request\n\n```\ncurl -X GET 'https://api.twitch.tv/helix/chat/settings?broadcaster_id=1234' \\\n-H 'Authorization: Bearer 4a4x78f5wqvkybms7mxfist3jmzul' \\\n-H 'Client-Id: t214nt8z1rdtbj69hyarjvh5mi6fh'\n\n```\n\n### Example Response\n\n```\n{\n  \"data\": [\n    {\n      \"broadcaster_id\": \"713936733\",\n      \"slow_mode\": false,\n      \"slow_mode_wait_time\": null,\n      \"follower_mode\": true,\n      \"follower_mode_duration\": 0,\n      \"subscriber_mode\": false,\n      \"emote_mode\": false,\n      \"unique_chat_mode\": false,\n      \"non_moderator_chat_delay\": true,\n      \"non_moderator_chat_delay_duration\": 4\n    }\n  ]\n}\n\n```"
  },
  {
    "id": "update-chat-settings",
    "name": "Update Chat Settings",
    "resource": "Chat",
    "description": "Updates the broadcaster’s chat settings.",
    "descriptionFull": [
      "Updates the broadcaster’s chat settings."
    ],
    "authentication": [
      "Requires a user access token that includes the `moderator:manage:chat_settings` scope."
    ],
    "authorization": [],
    "url": "https://api.twitch.tv/helix/chat/settings",
    "method": "PATCH",
    "requestBody": {
      "description": [
        "All fields are optional. Specify only those fields that you want to update.",
        "To set the `slow_mode_wait_time` or `follower_mode_duration` field to its default value, set the corresponding `slow_mode` or `follower_mode` field to **true** (and don’t include the `slow_mode_wait_time` or `follower_mode_duration` field).",
        "To set the `slow_mode_wait_time`, `follower_mode_duration`, or `non_moderator_chat_delay_duration` field’s value, you must set the corresponding `slow_mode`, `follower_mode`, or `non_moderator_chat_delay` field to **true**.",
        "To remove the `slow_mode_wait_time`, `follower_mode_duration`, or `non_moderator_chat_delay_duration` field’s value, set the corresponding `slow_mode`, `follower_mode`, or `non_moderator_chat_delay` field to **false** (and don’t include the `slow_mode_wait_time`, `follower_mode_duration`, or `non_moderator_chat_delay_duration` field)."
      ],
      "parameters": [
        {
          "name": "emote_mode",
          "type": "Boolean",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "A Boolean value that determines whether chat messages must contain only emotes.  \n  \nSet to **true** if only emotes are allowed; otherwise, **false**. The default is **false**.",
          "children": []
        },
        {
          "name": "follower_mode",
          "type": "Boolean",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "A Boolean value that determines whether the broadcaster restricts the chat room to followers only.  \n  \nSet to **true** if the broadcaster restricts the chat room to followers only; otherwise, **false**. The default is **true**.  \n  \nTo specify how long users must follow the broadcaster before being able to participate in the chat room, see the `follower_mode_duration` field.",
          "children": []
        },
        {
          "name": "follower_mode_duration",
          "type": "Integer",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "The length of time, in minutes, that users must follow the broadcaster before being able to participate in the chat room. Set only if `follower_mode` is **true**. Possible values are: 0 (no restriction) through 129600 (3 months). The default is 0.",
          "children": []
        },
        {
          "name": "non_moderator_chat_delay",
          "type": "Boolean",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "A Boolean value that determines whether the broadcaster adds a short delay before chat messages appear in the chat room. This gives chat moderators and bots a chance to remove them before viewers can see the message.  \n  \nSet to **true** if the broadcaster applies a delay; otherwise, **false**. The default is **false**.  \n  \nTo specify the length of the delay, see the `non_moderator_chat_delay_duration` field.",
          "children": []
        },
        {
          "name": "non_moderator_chat_delay_duration",
          "type": "Integer",
          "possibleValues": [
            "2",
            "4",
            "6"
          ],
          "required": null,
          "depth": 0,
          "description": "The amount of time, in seconds, that messages are delayed before appearing in chat. Set only if `non_moderator_chat_delay` is **true**. Possible values are:  \n  \n* 2 — 2 second delay (recommended)\n* 4 — 4 second delay\n* 6 — 6 second delay",
          "children": []
        },
        {
          "name": "slow_mode",
          "type": "Boolean",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "A Boolean value that determines whether the broadcaster limits how often users in the chat room are allowed to send messages. Set to **true** if the broadcaster applies a wait period between messages; otherwise, **false**. The default is **false**.  \n  \nTo specify the delay, see the `slow_mode_wait_time` field.",
          "children": []
        },
        {
          "name": "slow_mode_wait_time",
          "type": "Integer",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "The amount of time, in seconds, that users must wait between sending messages. Set only if `slow_mode` is **true**.  \n  \nPossible values are: 3 (3 second delay) through 120 (2 minute delay). The default is 30 seconds.",
          "children": []
        },
        {
          "name": "subscriber_mode",
          "type": "Boolean",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "A Boolean value that determines whether only users that subscribe to the broadcaster’s channel may talk in the chat room.  \n  \nSet to **true** if the broadcaster restricts the chat room to subscribers only; otherwise, **false**. The default is **false**.",
          "children": []
        },
        {
          "name": "unique_chat_mode",
          "type": "Boolean",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "A Boolean value that determines whether the broadcaster requires users to post only unique messages in the chat room.  \n  \nSet to **true** if the broadcaster allows only unique messages; otherwise, **false**. The default is **false**.",
          "children": []
        }
      ]
    },
    "requestQueryParams": {
      "description": [],
      "parameters": [
        {
          "name": "broadcaster_id",
          "type": "String",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "The ID of the broadcaster whose chat settings you want to update.",
          "children": []
        },
        {
          "name": "moderator_id",
          "type": "String",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "The ID of a user that has permission to moderate the broadcaster’s chat room, or the broadcaster’s ID if they’re making the update. This ID must match the user ID in the user access token.",
          "children": []
        }
      ]
    },
    "responseBody": {
      "description": [],
      "parameters": [
        {
          "name": "data",
          "type": "Object[]",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "The list of chat settings. The list contains a single object with all the settings.",
          "children": [
            {
              "name": "broadcaster_id",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The ID of the broadcaster specified in the request.",
              "children": []
            },
            {
              "name": "emote_mode",
              "type": "Boolean",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "A Boolean value that determines whether chat messages must contain only emotes. Is **true** if chat messages may contain only emotes; otherwise, **false**.",
              "children": []
            },
            {
              "name": "follower_mode",
              "type": "Boolean",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "A Boolean value that determines whether the broadcaster restricts the chat room to followers only.  \n  \nIs **true** if the broadcaster restricts the chat room to followers only; otherwise, **false**.  \n  \nSee the `follower_mode_duration` field for how long users must follow the broadcaster before being able to participate in the chat room.",
              "children": []
            },
            {
              "name": "follower_mode_duration",
              "type": "Integer",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The length of time, in minutes, that users must follow the broadcaster before being able to participate in the chat room. Is **null** if `follower_mode` is **false**.",
              "children": []
            },
            {
              "name": "moderator_id",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The moderator’s ID. The response includes this field only if the request specifies a user access token that includes the **moderator:read:chat\\_settings** scope.",
              "children": []
            },
            {
              "name": "non_moderator_chat_delay",
              "type": "Boolean",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "A Boolean value that determines whether the broadcaster adds a short delay before chat messages appear in the chat room. This gives chat moderators and bots a chance to remove them before viewers can see the message. See the `non_moderator_chat_delay_duration` field for the length of the delay. Is **true** if the broadcaster applies a delay; otherwise, **false**.",
              "children": []
            },
            {
              "name": "non_moderator_chat_delay_duration",
              "type": "Integer",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The amount of time, in seconds, that messages are delayed before appearing in chat. Is **null** if `non_moderator_chat_delay` is **false**.",
              "children": []
            },
            {
              "name": "slow_mode",
              "type": "Boolean",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "A Boolean value that determines whether the broadcaster limits how often users in the chat room are allowed to send messages.  \n  \nIs **true** if the broadcaster applies a delay; otherwise, **false**.  \n  \nSee the `slow_mode_wait_time` field for the delay.",
              "children": []
            },
            {
              "name": "slow_mode_wait_time",
              "type": "Integer",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The amount of time, in seconds, that users must wait between sending messages.  \n  \nIs **null** if slow\\_mode is **false**.",
              "children": []
            },
            {
              "name": "subscriber_mode",
              "type": "Boolean",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "A Boolean value that determines whether only users that subscribe to the broadcaster’s channel may talk in the chat room.  \n  \nIs **true** if the broadcaster restricts the chat room to subscribers only; otherwise, **false**.",
              "children": []
            },
            {
              "name": "unique_chat_mode",
              "type": "Boolean",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "A Boolean value that determines whether the broadcaster requires users to post only unique messages in the chat room.  \n  \nIs **true** if the broadcaster requires unique messages only; otherwise, **false**.",
              "children": []
            }
          ]
        }
      ]
    },
    "responseCodes": [
      [
        "200 OK",
        "Successfully updated the broadcaster’s chat settings."
      ],
      [
        "400 Bad Request",
        "* The _broadcaster\\_id_ query parameter is required.\n* The _moderator\\_id_ query parameter is required.\n* If _slow\\_mode_ is **true**, the `slow_mode_wait_time` field must be set to a valid value.\n* If `follower_mode` is **true**, the `follower_mode_duration` field must be set to a valid value.\n* If `non_moderator_chat_delay` is **true**, the `non_moderator_chat_delay_duration` field must be set to a valid value."
      ],
      [
        "401 Unauthorized",
        "* The ID in the _moderator\\_id_ query parameter must match the user ID in the user access token.\n* The Authorization header is required and must contain a user access token.\n* The user access token must include the **moderator:manage:chat\\_settings** scope.\n* The OAuth token is not valid.\n* The ID in the Client-Id header must match the client ID in the OAuth token."
      ],
      [
        "403 Forbidden",
        "* The user in the _moderator\\_id_ query parameter must have moderator privileges in the broadcaster's channel."
      ]
    ],
    "examples": "### Example Request\n\nThis example disables `follower_mode` by setting it to false.\n\n```\ncurl -X PATCH 'https://api.twitch.tv/helix/chat/settings?broadcaster_id=1234&moderator_id=5678' \\\n-H 'Authorization: Bearer 4a4x78f5wqvkybms7mxfist3jmzul' \\\n-H 'Client-Id: t214nt8z1rdtbj69hyarjvh5mi6fh' \\\n-H 'Content-Type: application/json' \\\n-d '{\"follower_mode\": false}'\n\n```\n\nTo change a setting’s value, the request must specify the mode field and its corresponding value field. For example, to change the value of `slow_mode_wait_time`, the request must also specify `slow_mode` even if it’s already **true**.\n\n```\ncurl -X PATCH 'https://https://api.twitch.tv/helix/chat/settings?broadcaster_id=1234&moderator_id=5678' \\\n-H 'Authorization: Bearer 8j9yq1kpl92w96trqy7sintbsihdp' \\\n-H 'Client-Id: 0vql4f5yqu4spo6zrz1pkumcqwa9c' \\\n-H 'Content-Type: application/json' \\\n-d '{\"slow_mode\": true, \"slow_mode_wait_time\": 10}'\n\n```\n\n### Example Response\n\n```\n{\n  \"data\": [\n    {\n      \"broadcaster_id\": \"1234\",\n      \"moderator_id\": \"5678\",\n      \"slow_mode\": true,\n      \"slow_mode_wait_time\": 10,\n      \"follower_mode\": false,\n      \"follower_mode_duration\": null,\n      \"subscriber_mode\": false,\n      \"emote_mode\": false,\n      \"unique_chat_mode\": false,\n      \"non_moderator_chat_delay\": false,\n      \"non_moderator_chat_delay_duration\": null\n    }\n  ]\n}\n\n```"
  },
  {
    "id": "send-chat-announcement",
    "name": "Send Chat Announcement",
    "resource": "Chat",
    "description": "Sends an announcement to the broadcaster’s chat room.",
    "descriptionFull": [
      "Sends an announcement to the broadcaster’s chat room."
    ],
    "authentication": [],
    "authorization": [
      "Requires a user access token that includes the **moderator:manage:announcements** scope."
    ],
    "url": "https://api.twitch.tv/helix/chat/announcements",
    "method": "POST",
    "requestBody": {
      "description": [],
      "parameters": [
        {
          "name": "message",
          "type": "String",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "The announcement to make in the broadcaster’s chat room. Announcements are limited to a maximum of 500 characters; announcements longer than 500 characters are truncated.",
          "children": []
        },
        {
          "name": "color",
          "type": "String",
          "possibleValues": [
            "blue",
            "green",
            "orange",
            "purple",
            "primary (default)"
          ],
          "required": false,
          "depth": 0,
          "description": "The color used to highlight the announcement. Possible case-sensitive values are:  \n  \n* blue\n* green\n* orange\n* purple\n* primary (default)\n  \nIf `color` is set to _primary_ or is not set, the channel’s accent color is used to highlight the announcement (see **Profile Accent Color** under [profile settings](https://www.twitch.tv/settings/profile), **Channel and Videos**, and **Brand**).",
          "children": []
        }
      ]
    },
    "requestQueryParams": {
      "description": [],
      "parameters": [
        {
          "name": "broadcaster_id",
          "type": "String",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "The ID of the broadcaster that owns the chat room to send the announcement to.",
          "children": []
        },
        {
          "name": "moderator_id",
          "type": "String",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "The ID of a user who has permission to moderate the broadcaster’s chat room, or the broadcaster’s ID if they’re sending the announcement. This ID must match the user ID in the user access token.",
          "children": []
        }
      ]
    },
    "responseBody": {
      "description": [
        "None"
      ],
      "parameters": []
    },
    "responseCodes": [
      [
        "204No Content",
        "Successfully sent the announcement."
      ],
      [
        "400Bad Request",
        "* The `message` field in the request's body is required.\n* The specified color is not valid."
      ],
      [
        "401Unauthorized",
        "* The Authorization header is required and must contain a user access token.\n* The user access token is missing the **moderator:manage:announcements** scope.\n* The OAuth token is not valid.\n* The client ID specified in the Client-Id header does not match the client ID specified in the OAuth token."
      ]
    ],
    "examples": "### Example Request\n\nSends an announcement to the broadcaster’s chat room.\n\n```\ncurl -X POST 'https://api.twitch.tv/helix/chat/announcements?broadcaster_id=11111&moderator_id=44444' \\\n-H 'Authorization: Bearer kpvy3cjboyptmdkiacwr0c19hotn5s' \\\n-H 'Client-Id: hof5gwx0su6owfnys0nyan9c87zr6t' \\\n-H 'Content-Type: application/json' \\\n-d '{\"message\":\"Hello chat!\",\"color\":\"purple\"}'\n\n```"
  },
  {
    "id": "get-user-chat-color",
    "name": "Get User Chat Color",
    "resource": "Chat",
    "description": "Gets the color used for the user’s name in chat.",
    "descriptionFull": [
      "Gets the color used for the user’s name in chat."
    ],
    "authentication": [],
    "authorization": [
      "Requires an app access token or user access token."
    ],
    "url": "https://api.twitch.tv/helix/chat/color",
    "method": "GET",
    "requestBody": {
      "description": [],
      "parameters": []
    },
    "requestQueryParams": {
      "description": [],
      "parameters": [
        {
          "name": "user_id",
          "type": "String",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "The ID of the user whose username color you want to get. To specify more than one user, include the _user\\_id_ parameter for each user to get. For example, `&user_id=1234&user_id=5678`. The maximum number of IDs that you may specify is 100.  \n  \nThe API ignores duplicate IDs and IDs that weren’t found.",
          "children": []
        }
      ]
    },
    "responseBody": {
      "description": [],
      "parameters": [
        {
          "name": "data",
          "type": "Object[]",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "The list of users and the color code they use for their name.",
          "children": [
            {
              "name": "user_id",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "An ID that uniquely identifies the user.",
              "children": []
            },
            {
              "name": "user_login",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The user’s login name.",
              "children": []
            },
            {
              "name": "user_name",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The user’s display name.",
              "children": []
            },
            {
              "name": "color",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The Hex color code that the user uses in chat for their name. If the user hasn’t specified a color in their settings, the string is empty.",
              "children": []
            }
          ]
        }
      ]
    },
    "responseCodes": [
      [
        "200OK",
        "Successfully retrieved the chat color used by the specified users."
      ],
      [
        "400Bad Request",
        "* The ID in the _user\\_id_ query parameter is not valid."
      ],
      [
        "401Unauthorized",
        "* The Authorization header is required and must contain an app access token or user access token.\n* The OAuth token is not valid.\n* The client ID specified in the Client-Id header does not match the client ID specified in the OAuth token."
      ]
    ],
    "examples": "### Example Request\n\nGets the chat color code used by the specified users.\n\n```\ncurl -X GET 'https://api.twitch.tv/helix/chat/color?user_id=11111&user_id=44444' \\\n-H 'Authorization: Bearer kpvy3cjboyptmdkiacwr0c19hotn5s' \\\n-H 'Client-Id: hof5gwx0su6owfnys0nyan9c87zr6t' \n\n```\n\n### Example Response\n\n```\n{\n  \"data\": [\n    {\n      \"user_id\": \"11111\",\n      \"user_name\": \"SpeedySpeedster1\",\n      \"user_login\": \"speedyspeedster1\",\n      \"color\": \"#9146FF\"\n    },\n    {\n      \"user_id\": \"44444\",\n      \"user_name\": \"SpeedySpeedster2\",\n      \"user_login\": \"speedyspeedster2\",\n      \"color\": \"\"\n    }\n  ]\n}\n\n```"
  },
  {
    "id": "update-user-chat-color",
    "name": "Update User Chat Color",
    "resource": "Chat",
    "description": "Updates the color used for the user’s name in chat.",
    "descriptionFull": [
      "Updates the color used for the user’s name in chat."
    ],
    "authentication": [],
    "authorization": [
      "Requires a user access token that includes the **user:manage:chat\\_color** scope."
    ],
    "url": "https://api.twitch.tv/helix/chat/color",
    "method": "PUT",
    "requestBody": {
      "description": [],
      "parameters": []
    },
    "requestQueryParams": {
      "description": [],
      "parameters": [
        {
          "name": "user_id",
          "type": "String",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "The ID of the user whose chat color you want to update. This ID must match the user ID in the access token.",
          "children": []
        },
        {
          "name": "color",
          "type": "String",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "The color to use for the user’s name in chat. All users may specify one of the following named color values.  \n  \n* blue\n* blue\\_violet\n* cadet\\_blue\n* chocolate\n* coral\n* dodger\\_blue\n* firebrick\n* golden\\_rod\n* green\n* hot\\_pink\n* orange\\_red\n* red\n* sea\\_green\n* spring\\_green\n* yellow\\_green\n  \nTurbo and Prime users may specify a named color or a Hex color code like #9146FF. If you use a Hex color code, remember to URL encode it.",
          "children": []
        }
      ]
    },
    "responseBody": {
      "description": [
        "None"
      ],
      "parameters": []
    },
    "responseCodes": [
      [
        "204No Content",
        "Successfully updated the user’s chat color."
      ],
      [
        "400Bad Request",
        "* The ID in the _user\\_id_ query parameter is not valid.\n* The _color_ query parameter is required.\n* The named color in the _color_ query parameter is not valid.\n* To specify a Hex color code, the user must be a Turbo or Prime user."
      ],
      [
        "401Unauthorized",
        "* The Authorization header is required and must contain a user access token.\n* The user access token must include the **user:manage:chat\\_color** scope.\n* The OAuth token is not valid.\n* The ID in the _user\\_id_ query parameter must match the user ID in the access token.\n* The client ID specified in the Client-Id header does not match the client ID specified in the OAuth token."
      ]
    ],
    "examples": "### Example Request\n\nUses a named color to change the color that the user uses for their name in chat.\n\n```\ncurl -X PUT 'https://api.twitch.tv/helix/chat/color?user_id=123&color=blue' \\\n-H 'Authorization: Bearer kpvy3cjboyptmdkiacwr0c19hotn5s' \\\n-H 'Client-Id: hof5gwx0su6owfnys0nyan9c87zr6t' \n\n```\n\nUses a color Hex code to change the color that the user uses for their name in chat.\n\n```\ncurl -X PUT 'https://api.twitch.tv/helix/chat/color?user_id=123&color=%239146FF' \\\n-H 'Authorization: Bearer kpvy3cjboyptmdkiacwr0c19hotn5s' \\\n-H 'Client-Id: hof5gwx0su6owfnys0nyan9c87zr6t' \n\n```"
  },
  {
    "id": "create-clip",
    "name": "Create Clip",
    "resource": "Clips",
    "description": "Creates a clip from the broadcaster’s stream.",
    "descriptionFull": [
      "Creates a clip from the broadcaster’s stream.",
      "This API captures up to 90 seconds of the broadcaster’s stream. The 90 seconds spans the point in the stream from when you called the API. For example, if you call the API at the 4:00 minute mark, the API captures from approximately the 3:35 mark to approximately the 4:05 minute mark. Twitch tries its best to capture 90 seconds of the stream, but the actual length may be less. This may occur if you begin capturing the clip near the beginning or end of the stream.",
      "By default, Twitch publishes up to the last 30 seconds of the 90 seconds window and provides a default title for the clip. To specify the title and the portion of the 90 seconds window that’s used for the clip, use the URL in the response’s `edit_url` field. You can specify a clip that’s from 5 seconds to 60 seconds in length. The URL is valid for up to 24 hours or until the clip is published, whichever comes first.",
      "Creating a clip is an asynchronous process that can take a short amount of time to complete. To determine whether the clip was successfully created, call [Get Clips](https://dev.twitch.tv/docs/api/reference#get-clips) using the clip ID that this request returned. If Get Clips returns the clip, the clip was successfully created. If after 15 seconds Get Clips hasn’t returned the clip, assume it failed."
    ],
    "authentication": [
      "Requires a user access token that includes the **clips:edit** scope."
    ],
    "authorization": [],
    "url": "https://api.twitch.tv/helix/clips",
    "method": "POST",
    "requestBody": {
      "description": [],
      "parameters": []
    },
    "requestQueryParams": {
      "description": [],
      "parameters": [
        {
          "name": "broadcaster_id",
          "type": "String",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "The ID of the broadcaster whose stream you want to create a clip from.",
          "children": []
        },
        {
          "name": "has_delay",
          "type": "Boolean",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "A Boolean value that determines whether the API captures the clip at the moment the viewer requests it or after a delay. If **false** (default), Twitch captures the clip at the moment the viewer requests it (this is the same clip experience as the Twitch UX). If **true**, Twitch adds a delay before capturing the clip (this basically shifts the capture window to the right slightly).",
          "children": []
        }
      ]
    },
    "responseBody": {
      "description": [],
      "parameters": [
        {
          "name": "edit_url",
          "type": "String",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "A URL that you can use to edit the clip’s title, identify the part of the clip to publish, and publish the clip. [Learn More](https://help.twitch.tv/s/article/how-to-use-clips)  \n  \nThe URL is valid for up to 24 hours or until the clip is published, whichever comes first.",
          "children": []
        },
        {
          "name": "id",
          "type": "String",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "An ID that uniquely identifies the clip.",
          "children": []
        }
      ]
    },
    "responseCodes": [
      [
        "202 Accepted",
        "Successfully started the clip process."
      ],
      [
        "400 Bad Request",
        "* The _broadcaster\\_id_ query parameter is required.\n* The ID in the _broadcaster\\_id_ query parameter was not found."
      ],
      [
        "401 Unauthorized",
        "* The Authorization header is required and must specify user access token.\n* The user access token must include the **clips:edit** scope.\n* The OAuth token is not valid.\n* The ID in the Client-Id header must match the Client ID in the OAuth token."
      ],
      [
        "403 Forbidden",
        "* The broadcaster has restricted the ability to capture clips to followers and/or subscribers only.\n* The specified broadcaster has not enabled clips on their channel."
      ],
      [
        "404 Not Found",
        "* The broadcaster in the _broadcaster\\_id_ query parameter must be broadcasting live."
      ]
    ],
    "examples": "### Example Request\n\n```\ncurl -X POST 'https://api.twitch.tv/helix/clips?broadcaster_id=44322889' \\\n-H 'Authorization: Bearer cfabdegwdoklmawdzdo98xt2fo512y' \\\n-H 'Client-Id: uo6dggojyb8d6soh92zknwmi5ej1q2'\n\n```\n\n### Example Response\n\n```\n{\n   \"data\":\n   [{\n      \"id\": \"FiveWordsForClipSlug\",\n      \"edit_url\": \"http://clips.twitch.tv/FiveWordsForClipSlug/edit\"\n   }]\n}\n\n```"
  },
  {
    "id": "get-clips",
    "name": "Get Clips",
    "resource": "Clips",
    "description": "Gets one or more video clips.",
    "descriptionFull": [
      "Gets one or more video clips that were captured from streams. For information about clips, see [How to use clips](https://help.twitch.tv/s/article/how-to-use-clips)."
    ],
    "authentication": [
      "Requires an app access token or user access token."
    ],
    "authorization": [],
    "url": "https://api.twitch.tv/helix/clips",
    "method": "GET",
    "requestBody": {
      "description": [],
      "parameters": []
    },
    "requestQueryParams": {
      "description": [
        "The _id_, _game\\_id_, and _broadcaster\\_id_ query parameters are mutually exclusive."
      ],
      "parameters": [
        {
          "name": "broadcaster_id",
          "type": "String",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "An ID that identifies the broadcaster whose video clips you want to get. Use this parameter to get clips that were captured from the broadcaster’s streams.",
          "children": []
        },
        {
          "name": "game_id",
          "type": "String",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "An ID that identifies the game whose clips you want to get. Use this parameter to get clips that were captured from streams that were playing this game.",
          "children": []
        },
        {
          "name": "id",
          "type": "String",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "An ID that identifies the clip to get. To specify more than one ID, include this parameter for each clip you want to get. For example, `id=foo&id=bar`. You may specify a maximum of 100 IDs. The API ignores duplicate IDs and IDs that aren’t found.",
          "children": []
        },
        {
          "name": "started_at",
          "type": "String",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "The start date used to filter clips. The API returns only clips within the start and end date window. Specify the date and time in RFC3339 format.",
          "children": []
        },
        {
          "name": "ended_at",
          "type": "String",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "The end date used to filter clips. If not specified, the time window is the start date plus one week. Specify the date and time in RFC3339 format.",
          "children": []
        },
        {
          "name": "first",
          "type": "Integer",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "The maximum number of clips to return per page in the response. The minimum page size is 1 clip per page and the maximum is 100\\. The default is 20.",
          "children": []
        },
        {
          "name": "before",
          "type": "String",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "The cursor used to get the previous page of results. The **Pagination** object in the response contains the cursor’s value. [Read More](https://dev.twitch.tv/docs/api/guide#pagination)",
          "children": []
        },
        {
          "name": "after",
          "type": "String",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "The cursor used to get the next page of results. The **Pagination** object in the response contains the cursor’s value. [Read More](https://dev.twitch.tv/docs/api/guide#pagination)",
          "children": []
        }
      ]
    },
    "responseBody": {
      "description": [],
      "parameters": [
        {
          "name": "data",
          "type": "Object[]",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "The list of video clips. For clips returned by _game\\_id_ or _broadcaster\\_id_, the list is in descending order by view count. For lists returned by _id_, the list is in the same order as the input IDs.",
          "children": [
            {
              "name": "id",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "An ID that uniquely identifies the clip.",
              "children": []
            },
            {
              "name": "url",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "A URL to the clip.",
              "children": []
            },
            {
              "name": "embed_url",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "A URL that you can use in an iframe to embed the clip (see [Embedding Video and Clips](https://dev.twitch.tv/docs/embed/video-and-clips)).",
              "children": []
            },
            {
              "name": "broadcaster_id",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "An ID that identifies the broadcaster that the video was clipped from.",
              "children": []
            },
            {
              "name": "broadcaster_name",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The broadcaster’s display name.",
              "children": []
            },
            {
              "name": "creator_id",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "An ID that identifies the user that created the clip.",
              "children": []
            },
            {
              "name": "creator_name",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The user’s display name.",
              "children": []
            },
            {
              "name": "video_id",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "An ID that identifies the video that the clip came from. This field contains an empty string if the video is not available.",
              "children": []
            },
            {
              "name": "game_id",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The ID of the game that was being played when the clip was created.",
              "children": []
            },
            {
              "name": "language",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The ISO 639-1 two-letter language code that the broadcaster broadcasts in. For example, _en_ for English. The value is _other_ if the broadcaster uses a language that Twitch doesn’t support.",
              "children": []
            },
            {
              "name": "title",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The title of the clip.",
              "children": []
            },
            {
              "name": "view_count",
              "type": "Integer",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The number of times the clip has been viewed.",
              "children": []
            },
            {
              "name": "created_at",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The date and time of when the clip was created. The date and time is in RFC3339 format.",
              "children": []
            },
            {
              "name": "thumbnail_url",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "A URL to a thumbnail image of the clip.",
              "children": []
            },
            {
              "name": "duration",
              "type": "float",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The length of the clip, in seconds. Precision is 0.1.",
              "children": []
            },
            {
              "name": "vod_offset",
              "type": "Integer",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The zero-based offset, in seconds, to where the clip starts in the video (VOD). Is **null** if the video is not available or hasn’t been created yet from the live stream (see `video_id`).  \n  \nNote that there’s a delay between when a clip is created during a broadcast and when the offset is set. During the delay period, `vod_offset` is **null**. The delay is indeterminant but is typically minutes long.",
              "children": []
            }
          ]
        },
        {
          "name": "pagination",
          "type": "Object",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "The information used to page through the list of results. The object is empty if there are no more pages left to page through. [Read More](https://dev.twitch.tv/docs/api/guide#pagination)",
          "children": [
            {
              "name": "cursor",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The cursor used to get the next page of results. Set the request’s _after_ or _before_ query parameter to this value depending on whether you’re paging forwards or backwards.",
              "children": []
            }
          ]
        }
      ]
    },
    "responseCodes": [
      [
        "200 OK",
        "Successfully retrieved the list of video clips."
      ],
      [
        "400 Bad Request",
        "* The _id_ or _game\\_id_ or _broadcaster\\_id_ query parameter is required.\n* The _id_, _game\\_id_, and _broadcaster\\_id_ query parameters are mutually exclusive; you may specify only one of them."
      ],
      [
        "401 Unauthorized",
        "* The Authorization header is required and must contain an app access token or user access token.\n* The OAuth token is not valid.\n* The client ID specified in the Client-Id header does not match the client ID specified in the OAuth token."
      ],
      [
        "404 Not Found",
        "* The ID in _game\\_id_ was not found."
      ]
    ],
    "examples": "### Example Request\n\nGets a clip by ID.\n\n```\ncurl -X GET 'https://api.twitch.tv/helix/clips?id=AwkwardHelplessSalamanderSwiftRage' \\\n-H 'Authorization: Bearer 2gbdx6oar67tqtcmt49t3wpcgycthx' \\\n-H 'Client-Id: uo6dggojyb8d6soh92zknwmi5ej1q2'\n\n```\n\n### Example Response\n\n```\n{\n  \"data\": [\n    {\n      \"id\": \"AwkwardHelplessSalamanderSwiftRage\",\n      \"url\": \"https://clips.twitch.tv/AwkwardHelplessSalamanderSwiftRage\",\n      \"embed_url\": \"https://clips.twitch.tv/embed?clip=AwkwardHelplessSalamanderSwiftRage\",\n      \"broadcaster_id\": \"67955580\",\n      \"broadcaster_name\": \"ChewieMelodies\",\n      \"creator_id\": \"53834192\",\n      \"creator_name\": \"BlackNova03\",\n      \"video_id\": \"205586603\",\n      \"game_id\": \"488191\",\n      \"language\": \"en\",\n      \"title\": \"babymetal\",\n      \"view_count\": 10,\n      \"created_at\": \"2017-11-30T22:34:18Z\",\n      \"thumbnail_url\": \"https://clips-media-assets.twitch.tv/157589949-preview-480x272.jpg\",\n      \"duration\": 60,\n      \"vod_offset\": 480\n    }\n  ]\n}\n\n```\n\n### Example Request\n\nGets the broadcaster’s top 5 clips based on views.\n\n```\ncurl -X GET 'https://api.twitch.tv/helix/clips?broadcaster_id=1234&first=5' \\\n-H 'Authorization: Bearer 2gbdx6oar67tqtcmt49t3wpcgycthx' \\\n-H 'Client-Id: uo6dggojyb8d6soh92zknwmi5ej1q2'\n\n```\n\n### Example Response\n\n```\n{\n  \"data\": [\n    {\n      \"id\": \"RandomClip1\",\n      \"url\": \"https://clips.twitch.tv/AwkwardHelplessSalamanderSwiftRage\",\n      \"embed_url\": \"https://clips.twitch.tv/embed?clip=RandomClip1\",\n      \"broadcaster_id\": \"1234\",\n      \"broadcaster_name\": \"JJ\",\n      \"creator_id\": \"123456\",\n      \"creator_name\": \"MrMarshall\",\n      \"video_id\": \"\",\n      \"game_id\": \"33103\",\n      \"language\": \"en\",\n      \"title\": \"random1\",\n      \"view_count\": 10,\n      \"created_at\": \"2017-11-30T22:34:18Z\",\n      \"thumbnail_url\": \"https://clips-media-assets.twitch.tv/157589949-preview-480x272.jpg\",\n      \"duration\": 12.9,\n      \"vod_offset\": 1957\n    },\n    ...\n  ],\n  \"pagination\": {\n    \"cursor\": \"eyJiIjpudWxsLCJhIjoiIn0\"\n  }\n}\n\n```"
  },
  {
    "id": "get-code-status",
    "name": "Get Code Status",
    "resource": "Entitlements",
    "description": "Gets the status of one or more redemption codes for a Bits reward.",
    "descriptionFull": [
      "Gets the status of one or more redemption codes for a Bits reward. Only client IDs approved by Twitch may request a redemption code’s status.",
      "Rate limit: You may send at most one request per second per user."
    ],
    "authentication": [
      "Requires an app access token. The client ID in the access token must match a client ID that Twitch has approved to provide entitlements."
    ],
    "authorization": [],
    "url": "https://api.twitch.tv/helix/entitlements/codes",
    "method": "GET",
    "requestBody": {
      "description": [],
      "parameters": []
    },
    "requestQueryParams": {
      "description": [],
      "parameters": [
        {
          "name": "code",
          "type": "String",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "The redemption code to check. Include this parameter for each redemption code whose status you want to check. For example, `code=1234&code=5678`. You may specify a maximum of 20 codes.",
          "children": []
        },
        {
          "name": "user_id",
          "type": "Integer",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "The ID of the user that owns the redemption code.",
          "children": []
        }
      ]
    },
    "responseBody": {
      "description": [],
      "parameters": [
        {
          "name": "data",
          "type": "Object[]",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "The list of redemption codes and their status values.",
          "children": [
            {
              "name": "code",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The redemption code.",
              "children": []
            },
            {
              "name": "status",
              "type": "String",
              "possibleValues": [
                "ALREADY_CLAIMED",
                "EXPIRED",
                "INACTIVE",
                "INCORRECT_FORMAT",
                "INTERNAL_ERROR",
                "NOT_FOUND",
                "UNUSED",
                "USER_NOT_ELIGIBLE"
              ],
              "required": null,
              "depth": 1,
              "description": "The redemption code’s status. Possible values are:   \n  \n* ALREADY\\_CLAIMED — The code has already been claimed. All codes are single-use.\n* EXPIRED — The code has expired and can no longer be claimed.\n* INACTIVE — The code has not been activated.\n* INCORRECT\\_FORMAT — The code is not properly formatted.\n* INTERNAL\\_ERROR — An internal or unknown error occurred when checking the code. Retry later.\n* NOT\\_FOUND — The code was not found.\n* UNUSED — The code has not been claimed.\n* USER\\_NOT\\_ELIGIBLE — The user is not eligible to redeem this code.",
              "children": []
            }
          ]
        }
      ]
    },
    "responseCodes": [
      [
        "200 OK",
        "Successfully retrieved the statuses of the specified codes."
      ],
      [
        "400 Bad Request",
        "* The _user\\_id_ query parameter is required.\n* The _code_ query parameter is required.\n* The _code_ query parameter may not contain a comma-delimited list of codes. Instead, repeat the parameter for each code. For example, `code=1234&code=5678`.\n* The _code_ query parameter may not contain an empty string."
      ],
      [
        "401 Unauthorized",
        "* The Authorization header is required and must specify an app access token.\n* The access token is not valid.\n* The ID in the Client-Id header must match the Client ID in the access token."
      ],
      [
        "403 Forbidden",
        "* The API accepts only app access tokens.\n* The client ID specified in the access token is not approved for getting the statuses of the redemption codes."
      ]
    ],
    "examples": "### Example Request\n\n```\ncurl -X GET 'https://api.twitch.tv/helix/entitlements/codes?code=KUHXV-4GXYP-AKAKK&code=XZDDZ-5SIQR-RT5M3&user_id=156900877' \\\n-H 'Authorization: Bearer cfabdegwdoklmawdzdo98xt2fo512y' \\\n-H 'Client-Id: uo6dggojyb8d6soh92zknwmi5ej1q2'\n\n```\n\n### Example Response\n\n```\n{\n  \"data\":[\n    {\n      \"code\":\"KUHXV-4GXYP-AKAKK\",\n      \"status\":\"UNUSED\"\n    },\n    {\n      \"code\":\"XZDDZ-5SIQR-RT5M3\",\n      \"status\":\"ALREADY_CLAIMED\"\n    }\n  ]\n}\n\n```"
  },
  {
    "id": "get-drops-entitlements",
    "name": "Get Drops Entitlements",
    "resource": "Entitlements",
    "description": "Gets an organization’s list of entitlements that have been granted to a game, a user, or both.",
    "descriptionFull": [
      "Gets an organization’s list of entitlements that have been granted to a game, a user, or both.",
      "The following table identifies the request parameters that you may specify based on the type of access token used.",
      "| Access token type | Parameter | Description |\n| - | - | - |\n| App | None | If you don’t specify request parameters, the request returns all entitlements that your organization owns. |\n| App | user_id | The request returns all entitlements for any game that the organization granted to the specified user. |\n| App | user_id, game_id | The request returns all entitlements that the specified game granted to the specified user. |\n| App | game_id | The request returns all entitlements that the specified game granted to all entitled users. |\n| User | None | If you don’t specify request parameters, the request returns all entitlements for any game that the organization granted to the user identified in the access token. |\n| User | user_id | Invalid. |\n| User | user_id, game_id | Invalid. |\n| User | game_id | The request returns all entitlements that the specified game granted to the user identified in the access token. |\n"
    ],
    "authentication": [
      "Requires an app access token or user access token. The client ID in the access token must own the game."
    ],
    "authorization": [],
    "url": "https://api.twitch.tv/helix/entitlements/drops",
    "method": "GET",
    "requestBody": {
      "description": [],
      "parameters": []
    },
    "requestQueryParams": {
      "description": [],
      "parameters": [
        {
          "name": "id",
          "type": "String",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "An ID that identifies the entitlement to get. Include this parameter for each entitlement you want to get. For example, `id=1234&id=5678`. You may specify a maximum of 100 IDs.",
          "children": []
        },
        {
          "name": "user_id",
          "type": "String",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "An ID that identifies a user that was granted entitlements.",
          "children": []
        },
        {
          "name": "game_id",
          "type": "String",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "An ID that identifies a game that offered entitlements.",
          "children": []
        },
        {
          "name": "fulfillment_status",
          "type": "String",
          "possibleValues": [
            "CLAIMED",
            "FULFILLED"
          ],
          "required": false,
          "depth": 0,
          "description": "The entitlement’s fulfillment status. Used to filter the list to only those with the specified status. Possible values are:   \n  \n* CLAIMED\n* FULFILLED",
          "children": []
        },
        {
          "name": "after",
          "type": "String",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "The cursor used to get the next page of results. The **Pagination** object in the response contains the cursor’s value. [Read More](https://dev.twitch.tv/docs/api/guide#pagination)",
          "children": []
        },
        {
          "name": "first",
          "type": "Integer",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "The maximum number of entitlements to return per page in the response. The minimum page size is 1 entitlement per page and the maximum is 1000\\. The default is 20.",
          "children": []
        }
      ]
    },
    "responseBody": {
      "description": [],
      "parameters": [
        {
          "name": "data",
          "type": "Object[]",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "The list of entitlements.",
          "children": [
            {
              "name": "id",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "An ID that identifies the entitlement.",
              "children": []
            },
            {
              "name": "benefit_id",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "An ID that identifies the benefit (reward).",
              "children": []
            },
            {
              "name": "timestamp",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The UTC date and time (in RFC3339 format) of when the entitlement was granted.",
              "children": []
            },
            {
              "name": "user_id",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "An ID that identifies the user who was granted the entitlement.",
              "children": []
            },
            {
              "name": "game_id",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "An ID that identifies the game the user was playing when the reward was entitled.",
              "children": []
            },
            {
              "name": "fulfillment_status",
              "type": "String",
              "possibleValues": [
                "CLAIMED",
                "FULFILLED"
              ],
              "required": null,
              "depth": 1,
              "description": "The entitlement’s fulfillment status. Possible values are:   \n  \n* CLAIMED\n* FULFILLED",
              "children": []
            },
            {
              "name": "last_updated",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The UTC date and time (in RFC3339 format) of when the entitlement was last updated.",
              "children": []
            }
          ]
        },
        {
          "name": "pagination",
          "type": "Object",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "The information used to page through the list of results. The object is empty if there are no more pages left to page through. [Read More](https://dev.twitch.tv/docs/api/guide#pagination)",
          "children": [
            {
              "name": "cursor",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The cursor used to get the next page of results. Set the request’s _after_ query parameter to this value to page forward through the results.",
              "children": []
            }
          ]
        }
      ]
    },
    "responseCodes": [
      [
        "200 OK",
        "Successfully retrieved the entitlements."
      ],
      [
        "400 Bad Request",
        "* The value in the _fulfillment\\_status_ query parameter is not valid.\n* The ID in the _user\\_id_ query parameter must match the user ID in the user access token.\n* The client in the access token is not associated with a known organization.\n* The owner of the client in the access token is not a member of the organization."
      ],
      [
        "401 Unauthorized",
        "* The ID in the Client-Id header must match the Client ID in the access token.\n* The Authorization header is required and must specify an app access token or user access token.\n* The access token is not valid."
      ],
      [
        "403 Fobidden",
        "* The organization associated with the client in the access token must own the game specified in the _game\\_id_ query parameter.\n* The organization associated with the client in the access token must own the entitlements specified in the _id_ query parameter."
      ],
      [
        "500 Internal server error",
        ""
      ]
    ],
    "examples": "### Example Request\n\n```\ncurl -H GET 'helix/entitlements/drops?user_id=25009227&game_id=33214' \\\n-H 'Authorization: Bearer cfabdegwdoklmawdzdo98xt2fo512y' \\\n-H 'Client-Id: uo6dggojyb8d6soh92zknwmi5ej1q2'\n\n```\n\n### Example Response\n\n```\n{\n  \"data\": [\n    {\n      \"id\": \"fb78259e-fb81-4d1b-8333-34a06ffc24c0\",\n      \"benefit_id\": \"74c52265-e214-48a6-91b9-23b6014e8041\",\n      \"timestamp\": \"2019-01-28T04:17:53.325Z\",\n      \"user_id\": \"25009227\",\n      \"game_id\": \"33214\",\n      \"fulfillment_status\": \"CLAIMED\",\n      \"updated_at\": \"2019-01-28T04:17:53.325Z\"\n    },\n    {\n      \"id\": \"862750a5-265e-4ab6-9f0a-c64df3d54dd0\",\n      \"benefit_id\": \"74c52265-e214-48a6-91b9-23b6014e8041\",\n      \"timestamp\": \"2019-01-28T04:16:53.325Z\",\n      \"user_id\": \"25009227\",\n      \"game_id\": \"33214\",\n      \"fulfillment_status\": \"CLAIMED\",\n      \"updated_at\": \"2021-06-15T04:16:53.325Z\"\n    },\n    {\n      \"id\": \"d8879baa-3966-4d10-8856-15fdd62cce02\",\n      \"benefit_id\": \"cdfdc5c3-65a2-43bc-8767-fde06eb4ab2c\",\n      \"timestamp\": \"2019-01-28T04:15:53.325Z\",\n      \"user_id\": \"25009227\",\n      \"game_id\": \"33214\",\n      \"fulfillment_status\": \"FULFILLED\",\n      \"updated_at\": \"2019-01-28T04:17:53.325Z\"\n    },\n    ...\n  ],\n  \"pagination\": {\n    \"cursor\": \"eyJiIjpudW...\"\n  }\n}\n\n```"
  },
  {
    "id": "update-drops-entitlements",
    "name": "Update Drops Entitlements",
    "resource": "Entitlements",
    "description": "Updates the Drop entitlement’s fulfillment status.",
    "descriptionFull": [
      "Updates the Drop entitlement’s fulfillment status.",
      "The following table identifies which entitlements are updated based on the type of access token used.",
      "| Access token type | Data that’s updated |\n| - | - |\n| App | Updates all entitlements with benefits owned by the organization in the access token. |\n| User | Updates all entitlements owned by the user in the access token and where the benefits are owned by the organization in the access token. |\n"
    ],
    "authentication": [
      "Requires an app access token or user access token. The client ID in the access token must own the game."
    ],
    "authorization": [],
    "url": "https://api.twitch.tv/helix/entitlements/drops",
    "method": "PATCH",
    "requestBody": {
      "description": [],
      "parameters": []
    },
    "requestQueryParams": {
      "description": [],
      "parameters": []
    },
    "responseBody": {
      "description": [],
      "parameters": [
        {
          "name": "data",
          "type": "Object[]",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "A list that indicates which entitlements were successfully updated and those that weren’t.",
          "children": [
            {
              "name": "status",
              "type": "String",
              "possibleValues": [
                "INVALID_ID",
                "NOT_FOUND",
                "SUCCESS",
                "UNAUTHORIZED",
                "UPDATE_FAILED"
              ],
              "required": null,
              "depth": 1,
              "description": "A string that indicates whether the status of the entitlements in the `ids` field were successfully updated. Possible values are:  \n  \n* INVALID\\_ID — The entitlement IDs in the `ids` field are not valid.\n* NOT\\_FOUND — The entitlement IDs in the `ids` field were not found.\n* SUCCESS — The status of the entitlements in the `ids` field were successfully updated.\n* UNAUTHORIZED — The user or organization identified by the user access token is not authorized to update the entitlements.\n* UPDATE\\_FAILED — The update failed. These are considered transient errors and the request should be retried later.",
              "children": []
            },
            {
              "name": "ids",
              "type": "String[]",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The list of entitlements that the status in the `status` field applies to.",
              "children": []
            }
          ]
        }
      ]
    },
    "responseCodes": [
      [
        "200 OK",
        "Successfully requested the updates. Check the response to determine which updates succeeded."
      ],
      [
        "400 Bad Request",
        "* The value in the `fulfillment_status` field is not valid.\n* The client in the access token is not associated with a known organization.\n* The owner of the client in the access token is not a member of the organization."
      ],
      [
        "401 Unauthorized",
        "* The Authorization header is required and must specify an app access token or user access token.\n* The access token is not valid.\n* The ID in the Client-Id header must match the Client ID in the access token."
      ],
      [
        "500 Internal server error",
        ""
      ]
    ],
    "examples": "### Example Request\n\n```\ncurl -H PATCH 'helix/entitlements/drops' \\\n-H 'Authorization: Bearer cfabdegwdoklmawdzdo98xt2fo512y' \\\n-H 'Client-Id: uo6dggojyb8d6soh92zknwmi5ej1q2' \\\n-H 'Content-Type: application/json' \\\n-d '{\n  \"fulfillment_status\": \"FULFILLED\",\n  \"entitlement_ids\": [\n    \"fb78259e-fb81-4d1b-8333-34a06ffc24c0\",\n    \"862750a5-265e-4ab6-9f0a-c64df3d54dd0\",\n    \"d8879baa-3966-4d10-8856-15fdd62cce02\",\n    \"9a290126-7e3b-4f66-a9ae-551537893b65\"\n  ]\n}'\n\n```\n\n### Example Response\n\n```\n{\n  \"data\": [\n    {\n      \"status\": \"SUCCESS\",\n      \"ids\": [\n        \"fb78259e-fb81-4d1b-8333-34a06ffc24c0\", \"862750a5-265e-4ab6-9f0a-c64df3d54dd0\"\n      ]\n    },\n    {\n      \"status\": \"UNAUTHORIZED\",\n      \"ids\": [\n        \"d8879baa-3966-4d10-8856-15fdd62cce02\"\n      ]\n    },\n    {\n      \"status\": \"UPDATE_FAILED\",\n      \"ids\": [\n        \"9a290126-7e3b-4f66-a9ae-551537893b65\"\n      ]\n    }\n  ]\n}\n\n```"
  },
  {
    "id": "redeem-code",
    "name": "Redeem Code",
    "resource": "Entitlements",
    "description": "Redeems one or more redemption codes.",
    "descriptionFull": [
      "Redeems one or more redemption codes. Redeeming a code credits the user’s account with the entitlement; for example, a Bits reward earned by playing a game.",
      "Rate limit: You may send at most one request per second per user."
    ],
    "authentication": [
      "Requires an app access token. Only client IDs approved by Twitch may redeem codes on behalf of any Twitch user account."
    ],
    "authorization": [],
    "url": "https://api.twitch.tv/helix/entitlements/codes",
    "method": "POST",
    "requestBody": {
      "description": [],
      "parameters": []
    },
    "requestQueryParams": {
      "description": [],
      "parameters": [
        {
          "name": "code",
          "type": "String",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "The redemption code to redeem. To redeem multiple codes, include this parameter for each redemption code. For example, `code=1234&code=5678`. You may specify a maximum of 20 codes.",
          "children": []
        },
        {
          "name": "user_id",
          "type": "String",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "An ID of the user that owns the redemption code to redeem.",
          "children": []
        }
      ]
    },
    "responseBody": {
      "description": [],
      "parameters": [
        {
          "name": "data",
          "type": "Object[]",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "The list of redeemed codes.",
          "children": [
            {
              "name": "code",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The redemption code.",
              "children": []
            },
            {
              "name": "status",
              "type": "String",
              "possibleValues": [
                "ALREADY_CLAIMED",
                "EXPIRED",
                "INACTIVE",
                "INCORRECT_FORMAT",
                "INTERNAL_ERROR",
                "NOT_FOUND",
                "SUCCESSFULLY_REDEEMED",
                "UNUSED",
                "USER_NOT_ELIGIBLE"
              ],
              "required": null,
              "depth": 1,
              "description": "The redemption code’s status. Possible values are:  \n  \n* ALREADY\\_CLAIMED — The code has already been claimed. All codes are single-use.\n* EXPIRED — The code has expired and can no longer be claimed.\n* INACTIVE — The code has not been activated.\n* INCORRECT\\_FORMAT — The code is not properly formatted.\n* INTERNAL\\_ERROR — An internal or unknown error occurred when accessing the code. Retry later.\n* NOT\\_FOUND — The code was not found.\n* SUCCESSFULLY\\_REDEEMED — Successfully redeemed the code and credited the user's account with the entitlement.\n* UNUSED — The code has not been claimed.\n* USER\\_NOT\\_ELIGIBLE — The user is not eligible to redeem this code.",
              "children": []
            }
          ]
        }
      ]
    },
    "responseCodes": [
      [
        "200 OK",
        "Successfully redeemed the code."
      ],
      [
        "400 Bad Request",
        "* The _user\\_id_ query parameter is required.\n* The _code_ query parameter is required.\n* The _code_ query parameter may not contain a comma-delimited list of codes. Instead, repeat the parameter for each code. For example, `code=1234&code=5678`.\n* The _code_ query parameter may not contain an empty string."
      ],
      [
        "401 Unauthorized",
        "* The Authorization header is required and must specify an app access token.\n* The access token is not valid.\n* The ID in the Client-Id header must match the Client ID in the access token."
      ],
      [
        "403 Forbidden",
        "* The API accepts only app access tokens.\n* The client specified in the access token is not approved to redeem codes."
      ],
      [
        "500 Internal server error",
        ""
      ]
    ],
    "examples": "### Example Request\n\n```\ncurl -X POST 'https://api.twitch.tv/helix/entitlements/codes?user_id=12345&code=8CD5P-V3J92-2S6JY&code=PUN4G-HYFVP-MMFET' \\\n-H 'Authorization: Bearer cfabdegwdoklmawdzdo98xt2fo512y' \\\n-H 'Client-Id: uo6dggojyb8d6soh92zknwmi5ej1q2'\n\n```\n\n### Example Response\n\n```\n{\n  \"data\":[\n    {\n      \"code\":\"8CD5P-V3J92-2S6JY\",\n      \"status\":\"SUCCESSFULLY_REDEEMED\"\n    },\n    {\n      \"code\":\"PUN4G-HYFVP-MMFET\",\n      \"status\":\"ALREADY_CLAIMED\"\n    }\n  ]\n}\n\n```"
  },
  {
    "id": "get-extension-configuration-segment",
    "name": "Get Extension Configuration Segment",
    "resource": "Extensions",
    "description": "Gets the specified configuration segment from the specified extension.",
    "descriptionFull": [
      "Gets the specified configuration segment from the specified extension.",
      "**Rate Limits**: You may retrieve each segment a maximum of 20 times per minute."
    ],
    "authentication": [],
    "authorization": [
      "Requires a signed JSON Web Token (JWT) created by an Extension Backend Service (EBS). For signing requirements, see [Signing the JWT](https://dev.twitch.tv/docs/extensions/building/#signing-the-jwt). The signed JWT must include the `role`, `user_id`, and `exp` fields (see [JWT Schema](https://dev.twitch.tv/docs/extensions/reference/#jwt-schema)). The `role` field must be set to _external_."
    ],
    "url": "https://api.twitch.tv/helix/extensions/configurations",
    "method": "GET",
    "requestBody": {
      "description": [],
      "parameters": []
    },
    "requestQueryParams": {
      "description": [],
      "parameters": [
        {
          "name": "broadcaster_id",
          "type": "String",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "The ID of the broadcaster that installed the extension. This parameter is required if you set the _segment_ parameter to broadcaster or developer. Do not specify this parameter if you set _segment_ to global.",
          "children": []
        },
        {
          "name": "extension_id",
          "type": "String",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "The ID of the extension that contains the configuration segment you want to get.",
          "children": []
        },
        {
          "name": "segment",
          "type": "String",
          "possibleValues": [
            "broadcaster",
            "developer",
            "global"
          ],
          "required": true,
          "depth": 0,
          "description": "The type of configuration segment to get. Possible case-sensitive values are:   \n  \n* broadcaster\n* developer\n* global\n  \nYou may specify one or more segments. To specify multiple segments, include the `segment` parameter for each segment to get. For example, `segment=broadcaster&segment=developer`. Ignores duplicate segments.",
          "children": []
        }
      ]
    },
    "responseBody": {
      "description": [],
      "parameters": [
        {
          "name": "data",
          "type": "Object[]",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "The list of requested configuration segments. The list is returned in the same order that you specified the list of segments in the request.",
          "children": [
            {
              "name": "segment",
              "type": "String",
              "possibleValues": [
                "broadcaster",
                "developer",
                "global"
              ],
              "required": null,
              "depth": 1,
              "description": "The type of segment. Possible values are:   \n  \n* broadcaster\n* developer\n* global",
              "children": []
            },
            {
              "name": "broadcaster_id",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The ID of the broadcaster that installed the extension. The object includes this field only if the `segment` query parameter is set to developer or broadcaster.",
              "children": []
            },
            {
              "name": "content",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The contents of the segment. This string may be a plain-text string or a string-encoded JSON object.",
              "children": []
            },
            {
              "name": "version",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The version number that identifies this definition of the segment’s data.",
              "children": []
            }
          ]
        }
      ]
    },
    "responseCodes": [
      [
        "200 OK",
        "Successfully retrieved the configurations."
      ],
      [
        "400 Bad Request",
        "* The _extension\\_id_ query parameter is required.\n* The value in the _segment_ query parameter is not valid.\n* The _broadcaster\\_id_ query parameter is required if the _segment_ query parameter is set to broadcaster or developer."
      ],
      [
        "401 Unauthorized",
        "* The Authorization header is required and must specify a JWT token.\n* The JWT token is not valid.\n* The Client-Id header is required."
      ],
      [
        "429 Too many requests",
        "* The app exceeded the number of requests that it may make per minute. See Rate Limits above."
      ]
    ],
    "examples": "### Example Request\n\nGets the global configuration segment from the specified extension. Because the request gets the global segment, it must not include the _broadcaster\\_id_ query parameter.\n\n```\n\ncurl -X GET 'https://api.twitch.tv/helix/extensions/configurations?extension_id=<your extension id>&segment=global' \\\n-H 'Authorization: Bearer <your JWT token>' \\\n-H 'Client-Id: <your client ID>'\n\n\n```\n\n### Example Response\n\nThe following example shows a global segment that contains a plain-text string in the `content` field.\n\n```\n\n{\n  \"data\": [\n    {\n      \"segment\": \"global\",\n      \"content\": \"hello config!\",\n      \"version\": \"0.0.1\"\n    }\n  ]\n}\n\n\n```\n\nThe following example shows a global segment that contains a string-encoded JSON object in the `content` field.\n\n```\n\n{\n  \"data\": [\n    {\n      \"segment\": \"global\",\n      \"content\": \"{\\\"foo\\\":\\\"bar\\\"}\",\n      \"version\": \"0.0.1\"\n    }\n  ]\n}\n\n\n```"
  },
  {
    "id": "set-extension-configuration-segment",
    "name": "Set Extension Configuration Segment",
    "resource": "Extensions",
    "description": "Updates a configuration segment.",
    "descriptionFull": [
      "Updates a configuration segment. The segment is limited to 5 KB. Extensions that are active on a channel do not receive the updated configuration.",
      "**Rate Limits**: You may update the configuration a maximum of 20 times per minute."
    ],
    "authentication": [],
    "authorization": [
      "Requires a signed JSON Web Token (JWT) created by an Extension Backend Service (EBS). For signing requirements, see [Signing the JWT](https://dev.twitch.tv/docs/extensions/building/#signing-the-jwt). The signed JWT must include the `role`, `user_id`, and `exp` fields (see [JWT Schema](https://dev.twitch.tv/docs/extensions/reference/#jwt-schema)). The `role` field must be set to _external_."
    ],
    "url": "https://api.twitch.tv/helix/extensions/configurations",
    "method": "PUT",
    "requestBody": {
      "description": [],
      "parameters": [
        {
          "name": "extension_id",
          "type": "String",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "The ID of the extension to update.",
          "children": []
        },
        {
          "name": "segment",
          "type": "String",
          "possibleValues": [
            "broadcaster",
            "developer",
            "global"
          ],
          "required": true,
          "depth": 0,
          "description": "The configuration segment to update. Possible case-sensitive values are:  \n  \n* broadcaster\n* developer\n* global",
          "children": []
        },
        {
          "name": "broadcaster_id",
          "type": "String",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "The ID of the broadcaster that installed the extension. Include this field only if the `segment` is set to developer or broadcaster.",
          "children": []
        },
        {
          "name": "content",
          "type": "String",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "The contents of the segment. This string may be a plain-text string or a string-encoded JSON object.",
          "children": []
        },
        {
          "name": "version",
          "type": "String",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "The version number that identifies this definition of the segment’s data. If not specified, the latest definition is updated.",
          "children": []
        }
      ]
    },
    "requestQueryParams": {
      "description": [],
      "parameters": []
    },
    "responseBody": {
      "description": [],
      "parameters": []
    },
    "responseCodes": [
      [
        "204 No Content",
        "Successfully updated the configuration."
      ],
      [
        "400 Bad Request",
        "* The `broadcaster_id` field is required if `segment` is set to developer or broadcaster."
      ],
      [
        "401 Unauthorized",
        "* The Authorization header is required and must specify a JWT token.\n* The JWT token is not valid.\n* The Client-Id header is required."
      ]
    ],
    "examples": "### Example Request\n\n```\ncurl -X PUT 'https://api.twitch.tv/helix/extensions/configurations' \\\n-H 'Authorization: Bearer cfabdegwdoklmawdzdo98xt2fo512y' \\\n-H 'Client-Id: uo6dggojyb8d6soh92zknwmi5ej1q2' \\\n-H 'Content-Type: application/json' \\\n-d '{\n  \"extension_id\": \"uo6dggojyb8d6soh92zknwmi5ej1q2\",\n  \"segment\": \"global\",\n  \"version\": \"0.0.1\",\n  \"content\": \"hello config!\"\n}'\n\n```"
  },
  {
    "id": "set-extension-required-configuration",
    "name": "Set Extension Required Configuration",
    "resource": "Extensions",
    "description": "Updates the extension’s required_configuration string.",
    "descriptionFull": [
      "Updates the extension’s required\\_configuration string. Use this endpoint if your extension requires the broadcaster to configure the extension before activating it (to require configuration, you must select **Custom/My Own Service** in Extension [Capabilities](https://dev.twitch.tv/docs/extensions/life-cycle/#capabilities)). For more information, see [Required Configurations](https://dev.twitch.tv/docs/extensions/building#required-configurations) and [Setting Required Configuration](https://dev.twitch.tv/docs/extensions/building#setting-required-configuration-with-the-configuration-service-optional)."
    ],
    "authentication": [],
    "authorization": [
      "Requires a signed JSON Web Token (JWT) created by an EBS. For signing requirements, see [Signing the JWT](https://dev.twitch.tv/docs/extensions/building/#signing-the-jwt). The signed JWT must include the `role`, `user_id`, and `exp` fields (see [JWT Schema](https://dev.twitch.tv/docs/extensions/reference/#jwt-schema)). Set the `role` field to _external_ and the `user_id` field to the ID of the user that owns the extension."
    ],
    "url": "https://api.twitch.tv/helix/extensions/required_configuration",
    "method": "PUT",
    "requestBody": {
      "description": [],
      "parameters": [
        {
          "name": "extension_id",
          "type": "String",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "The ID of the extension to update.",
          "children": []
        },
        {
          "name": "extension_version",
          "type": "String",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "The version of the extension to update.",
          "children": []
        },
        {
          "name": "required_configuration",
          "type": "String",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "The required\\_configuration string to use with the extension.",
          "children": []
        }
      ]
    },
    "requestQueryParams": {
      "description": [],
      "parameters": [
        {
          "name": "broadcaster_id",
          "type": "String",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "The ID of the broadcaster that installed the extension on their channel.",
          "children": []
        }
      ]
    },
    "responseBody": {
      "description": [],
      "parameters": []
    },
    "responseCodes": [
      [
        "204 Not Found",
        "Successfully updated the extension’s required\\_configuration string."
      ],
      [
        "400 Bad Request",
        "* The _broadcaster\\_id_ query parameter is required.\n* The `extension_id` field is required.\n* The `extension_version` field is required.\n* The `required_configuration` field is required."
      ],
      [
        "401 Unauthorized",
        "* The Authorization header is required and must specify a JWT token.\n* The JWT token is not valid.\n* The Client-Id header is required."
      ]
    ],
    "examples": "### Example Request\n\n```\ncurl -X PUT 'https://api.twitch.tv/helix/extensions/required_configuration?broadcaster_id=274637212' \\\n-H 'Authorization: Bearer cfabdegwdoklmawdzdo98xt2fo512y' \\\n-H 'Client-Id: uo6dggojyb8d6soh92zknwmi5ej1q2' \\\n-H 'Content-Type: application/json' \\\n-d '{\n  \"required_configuration\": \"RCS\",\n  \"extension_id\": \"uo6dggojyb8d6soh92zknwmi5ej1q2\",\n  \"extension_version\": \"0.0.1\"\n}'\n\n```"
  },
  {
    "id": "send-extension-pubsub-message",
    "name": "Send Extension PubSub Message",
    "resource": "Extensions",
    "description": "Sends a message to one or more viewers.",
    "descriptionFull": [
      "Sends a message to one or more viewers. You can send messages to a specific channel or to all channels where your extension is active. This endpoint uses the same mechanism as the [send](https://dev.twitch.tv/docs/extensions/reference#send) JavaScript helper function used to send messages.",
      "**Rate Limits**: You may send a maximum of 100 messages per minute per combination of extension client ID and broadcaster ID."
    ],
    "authentication": [],
    "authorization": [
      "Requires a signed JSON Web Token (JWT) created by an Extension Backend Service (EBS). For signing requirements, see [Signing the JWT](https://dev.twitch.tv/docs/extensions/building/#signing-the-jwt). The signed JWT must include the `role`, `user_id`, and `exp` fields (see [JWT Schema](https://dev.twitch.tv/docs/extensions/reference/#jwt-schema)) along with the `channel_id` and `pubsub_perms` fields. The `role` field must be set to _external_.",
      "To send the message to a specific channel, set the `channel_id` field in the JWT to the channel’s ID and set the `pubsub_perms.send` array to _broadcast_.",
      "```\n{\n  \"exp\": 1503343947,\n  \"user_id\": \"27419011\",\n  \"role\": \"external\",\n  \"channel_id\": \"27419011\",\n  \"pubsub_perms\": {\n    \"send\":[\n      \"broadcast\"\n    ]\n  }\n}\n\n```",
      "To send the message to all channels on which your extension is active, set the `channel_id` field to _all_ and set the `pubsub_perms.send` array to _global_.",
      "```\n{\n  \"exp\": 1503343947,\n  \"user_id\": \"27419011\",\n  \"role\": \"external\",\n  \"channel_id\": \"all\",\n  \"pubsub_perms\": {\n    \"send\":[\n      \"global\"\n    ]\n  }\n}\n\n```"
    ],
    "url": "https://api.twitch.tv/helix/extensions/pubsub",
    "method": "POST",
    "requestBody": {
      "description": [],
      "parameters": [
        {
          "name": "target",
          "type": "String[]",
          "possibleValues": [
            "broadcast",
            "global",
            "whisper-<user-id>"
          ],
          "required": true,
          "depth": 0,
          "description": "The target of the message. Possible values are:  \n  \n* broadcast\n* global\n* whisper-<user-id>\n  \nIf `is_global_broadcast` is **true**, you must set this field to global. The broadcast and global values are mutually exclusive; specify only one of them.",
          "children": []
        },
        {
          "name": "broadcaster_id",
          "type": "string",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "The ID of the broadcaster to send the message to. Don’t include this field if `is_global_broadcast` is set to **true**.",
          "children": []
        },
        {
          "name": "is_global_broadcast",
          "type": "Boolean",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "A Boolean value that determines whether the message should be sent to all channels where your extension is active. Set to **true** if the message should be sent to all channels. The default is **false**.",
          "children": []
        },
        {
          "name": "message",
          "type": "String",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "The message to send. The message can be a plain-text string or a string-encoded JSON object. The message is limited to a maximum of 5 KB.",
          "children": []
        }
      ]
    },
    "requestQueryParams": {
      "description": [],
      "parameters": []
    },
    "responseBody": {
      "description": [],
      "parameters": []
    },
    "responseCodes": [
      [
        "204 No Content",
        "Successfully sent the message."
      ],
      [
        "400 Bad Request",
        "* The `broadcaster_id` field in the request's body may only be set if the `is_global_broadcast` field is set to **false**."
      ],
      [
        "401 Unauthorized",
        "* The Authorization header is required and must specify a JWT token.\n* The JWT token is not valid.\n* The Client-Id header is required."
      ],
      [
        "422 Unprocessable Entity",
        "* The message is too large."
      ]
    ],
    "examples": "### Example Request\n\n```\ncurl -X POST 'https://api.twitch.tv/helix/extensions/pubsub' \\\n-H 'Authorization: Bearer cfabdegwdoklmawdzdo98xt2fo512y' \\\n-H 'Client-Id: uo6dggojyb8d6soh92zknwmi5ej1q2' \\\n-H 'Content-Type: application/json' \\\n-d '{\n  \"message\": \"hello world!\",\n  \"broadcaster_id\": \"141981764\",\n  \"target\": [\"broadcast\"]\n}'\n\n```"
  },
  {
    "id": "get-extension-live-channels",
    "name": "Get Extension Live Channels",
    "resource": "Extensions",
    "description": "Gets a list of broadcasters that are streaming live and have installed or activated the extension.",
    "descriptionFull": [
      "Gets a list of broadcasters that are streaming live and have installed or activated the extension.",
      "It may take a few minutes for the list to include or remove broadcasters that have recently gone live or stopped broadcasting."
    ],
    "authentication": [],
    "authorization": [
      "Requires an app access token or user access token."
    ],
    "url": "https://api.twitch.tv/helix/extensions/live",
    "method": "GET",
    "requestBody": {
      "description": [],
      "parameters": []
    },
    "requestQueryParams": {
      "description": [],
      "parameters": [
        {
          "name": "extension_id",
          "type": "String",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "The ID of the extension to get. Returns the list of broadcasters that are live and that have installed or activated this extension.",
          "children": []
        },
        {
          "name": "first",
          "type": "Integer",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "The maximum number of items to return per page in the response. The minimum page size is 1 item per page and the maximum is 100 items per page. The default is 20.",
          "children": []
        },
        {
          "name": "after",
          "type": "String",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "The cursor used to get the next page of results. The `pagination` field in the response contains the cursor’s value. [Read More](https://dev.twitch.tv/docs/api/guide#pagination)",
          "children": []
        }
      ]
    },
    "responseBody": {
      "description": [],
      "parameters": [
        {
          "name": "data",
          "type": "Object[]",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "The list of broadcasters that are streaming live and that have installed or activated the extension.",
          "children": [
            {
              "name": "broadcaster_id",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The ID of the broadcaster that is streaming live and has installed or activated the extension.",
              "children": []
            },
            {
              "name": "broadcaster_name",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The broadcaster’s display name.",
              "children": []
            },
            {
              "name": "game_name",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The name of the category or game being streamed.",
              "children": []
            },
            {
              "name": "game_id",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The ID of the category or game being streamed.",
              "children": []
            },
            {
              "name": "title",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The title of the broadcaster’s stream. May be an empty string if not specified.",
              "children": []
            }
          ]
        },
        {
          "name": "pagination",
          "type": "String",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "This field contains the cursor used to page through the results. The field is empty if there are no more pages left to page through. Note that this field is a string compared to other endpoints that use a **Pagination** object. [Read More](https://dev.twitch.tv/docs/api/guide#pagination)",
          "children": []
        }
      ]
    },
    "responseCodes": [
      [
        "200 OK",
        "Successfully retrieved the list of broadcasters."
      ],
      [
        "400 Bad Request",
        "* The _extension\\_id_ query parameter is required.\n* The pagination cursor is not valid."
      ],
      [
        "401 Unauthorized",
        "* The Authorization header is required and must specify an app access token or user access token.\n* The access token is not valid.\n* The ID in the Client-Id header must match the client ID in the access token."
      ],
      [
        "404 Not Found",
        "* The extension specified in the _extension\\_id_ query parameter was not found or it's not being used in a live stream."
      ]
    ],
    "examples": "### Example Request\n\n```\ncurl -X GET 'https://api.twitch.tv/helix/extensions/live?extension_id=uo6dggojyb8d6soh92zknwmi5ej1q2' \\\n-H 'Authorization: Bearer cfabdegwdoklmawdzdo98xt2fo512y' \\\n-H 'Client-Id: uo6dggojyb8d6soh92zknwmi5ej1q2'\n\n```\n\n### Example Response\n\n```\n{\n  \"data\": [\n    {\n      \"broadcaster_id\": \"252766116\",\n      \"broadcaster_name\": \"swoosh_xii\",\n      \"game_name\": \"Tom Clancy's Rainbow Six Siege\",\n      \"game_id\": \"460630\",\n      \"title\": \"[PS4] ITA/ENG UNRANKED CHILLIN' (SUB 1/15) - !instagram !donation !sens !team !youtube\"\n    },\n    {\n      \"broadcaster_id\": \"264525686\",\n      \"broadcaster_name\": \"gaddem_\",\n      \"game_name\": \"For Honor\",\n      \"game_id\": \"490382\",\n      \"title\": \"any Kätzchen ? - 680 Rep + > Kompetitive Kitten\"\n    },\n    {\n      \"broadcaster_id\": \"264787895\",\n      \"broadcaster_name\": \"LenhadorGameplay\",\n      \"game_name\": \"For Honor\",\n      \"game_id\": \"490382\",\n      \"title\": \"Vazou o novo personagem! *Triste*\"\n    }\n  ],\n  \"pagination\": \"YVc1emRHRnNiQ015TmpJek5qazVOVHBoYWpKbGRIZDFaR0Z5YjNCMGN6UTJNMkZ1TUdwM2FHWnBZbm8yYW5rNjoy\"\n}\n\n```"
  },
  {
    "id": "get-extension-secrets",
    "name": "Get Extension Secrets",
    "resource": "Extensions",
    "description": "Gets an extension’s list of shared secrets.",
    "descriptionFull": [
      "Gets an extension’s list of shared secrets."
    ],
    "authentication": [],
    "authorization": [
      "Requires a signed JSON Web Token (JWT) created by an Extension Backend Service (EBS). For signing requirements, see [Signing the JWT](https://dev.twitch.tv/docs/extensions/building/#signing-the-jwt). The signed JWT must include the `role`, `user_id`, and `exp` fields (see [JWT Schema](https://dev.twitch.tv/docs/extensions/reference/#jwt-schema)). The `role` field must be set to _external_."
    ],
    "url": "https://api.twitch.tv/helix/extensions/jwt/secrets",
    "method": "GET",
    "requestBody": {
      "description": [],
      "parameters": []
    },
    "requestQueryParams": {
      "description": [],
      "parameters": []
    },
    "responseBody": {
      "description": [],
      "parameters": [
        {
          "name": "data",
          "type": "Object[]",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "The list of shared secrets that the extension created.",
          "children": [
            {
              "name": "format_version",
              "type": "Integer",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The version number that identifies this definition of the secret’s data.",
              "children": []
            },
            {
              "name": "secrets",
              "type": "Object[]",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The list of secrets.",
              "children": [
                {
                  "name": "content",
                  "type": "String",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "The raw secret that you use with JWT encoding.",
                  "children": []
                },
                {
                  "name": "active_at",
                  "type": "String",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "The UTC date and time (in RFC3339 format) that you may begin using this secret to sign a JWT.",
                  "children": []
                },
                {
                  "name": "expires_at",
                  "type": "String",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "The UTC date and time (in RFC3339 format) that you must stop using this secret to decode a JWT.",
                  "children": []
                }
              ]
            }
          ]
        }
      ]
    },
    "responseCodes": [
      [
        "200 OK",
        "Successfully retrieved the list of secrets."
      ],
      [
        "400 Bad Request",
        "* The _extension\\_id_ query parameter is required."
      ],
      [
        "401 Unauthorized",
        "* The Authorization header is required and must specify a JWT token.\n* The JWT token is not valid.\n* The Client-Id header is required."
      ]
    ],
    "examples": "### Example Request\n\n```\ncurl -X GET 'https://api.twitch.tv/helix/extensions/jwt/secrets?extension_id=uo6dggojyb8d6soh92zknwmi5ej1q2' \\\n-H 'Authorization: Bearer cfabdegwdoklmawdzdo98xt2fo512y' \\\n-H 'Client-Id: uo6dggojyb8d6soh92zknwmi5ej1q2'\n\n```\n\n### Example Response\n\n```\n{\n  \"data\": [\n    {\n      \"format_version\": 1,\n      \"secrets\": [\n        {\n          \"content\": \"secret\",\n          \"active_at\": \"2021-03-29T06:58:40.858343036Z\",\n          \"expires_at\": \"2121-03-05T06:58:40.858343036Z\"\n        }\n      ]\n    }\n  ]\n}\n\n```"
  },
  {
    "id": "create-extension-secret",
    "name": "Create Extension Secret",
    "resource": "Extensions",
    "description": "Creates a shared secret used to sign and verify JWT tokens.",
    "descriptionFull": [
      "Creates a shared secret used to sign and verify JWT tokens. Creating a new secret removes the current secrets from service. Use this function only when you are ready to use the new secret it returns."
    ],
    "authentication": [],
    "authorization": [
      "Requires a signed JSON Web Token (JWT) created by an Extension Backend Service (EBS). For signing requirements, see [Signing the JWT](https://dev.twitch.tv/docs/extensions/building/#signing-the-jwt). The signed JWT must include the `role`, `user_id`, and `exp` fields (see [JWT Schema](https://dev.twitch.tv/docs/extensions/reference/#jwt-schema)). The `role` field must be set to _external_."
    ],
    "url": "https://api.twitch.tv/helix/extensions/jwt/secrets",
    "method": "POST",
    "requestBody": {
      "description": [],
      "parameters": []
    },
    "requestQueryParams": {
      "description": [],
      "parameters": [
        {
          "name": "extension_id",
          "type": "String",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "The ID of the extension to apply the shared secret to.",
          "children": []
        },
        {
          "name": "delay",
          "type": "Integer",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "The amount of time, in seconds, to delay activating the secret. The delay should provide enough time for instances of the extension to gracefully switch over to the new secret. The minimum delay is 300 seconds (5 minutes). The default is 300 seconds.",
          "children": []
        }
      ]
    },
    "responseBody": {
      "description": [],
      "parameters": [
        {
          "name": "data",
          "type": "Object[]",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "A list that contains the newly added secrets.",
          "children": [
            {
              "name": "format_version",
              "type": "Integer",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The version number that identifies this definition of the secret’s data.",
              "children": []
            },
            {
              "name": "secrets",
              "type": "Object[]",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The list of secrets.",
              "children": [
                {
                  "name": "content",
                  "type": "String",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "The raw secret that you use with JWT encoding.",
                  "children": []
                },
                {
                  "name": "active_at",
                  "type": "String",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "The UTC date and time (in RFC3339 format) that you may begin using this secret to sign a JWT.",
                  "children": []
                },
                {
                  "name": "expires_at",
                  "type": "String",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "The UTC date and time (in RFC3339 format) that you must stop using this secret to decode a JWT.",
                  "children": []
                }
              ]
            }
          ]
        }
      ]
    },
    "responseCodes": [
      [
        "200 OK",
        "Successfully created the new secret."
      ],
      [
        "400 Bad Request",
        "* The _extension\\_id_ query parameter is required.\n* The delay specified in the _delay_ query parameter is too short."
      ],
      [
        "401 Unauthorized",
        "* The Authorization header is required and must specify a JWT token.\n* The JWT token is not valid.\n* The Client-Id header is required."
      ]
    ],
    "examples": "### Example Request\n\n```\ncurl -X POST 'https://api.twitch.tv/helix/extensions/jwt/secrets?extension_id=uo6dggojyb8d6soh92zknwmi5ej1q2&delay=600' \\\n-H 'Authorization: Bearer cfabdegwdoklmawdzdo98xt2fo512y' \\\n-H 'Client-Id: uo6dggojyb8d6soh92zknwmi5ej1q2'\n\n```\n\n### Example Response\n\n```\n{\n  \"data\": [\n    {\n      \"format_version\": 1,\n      \"secrets\": [\n        {\n          \"content\": \"old-secret\",\n          \"active_at\": \"2021-03-29T06:58:40.858343036Z\",\n          \"expires_at\": \"2021-04-22T05:21:54.99261682Z\"\n        },\n        {\n          \"content\": \"new-secret\",\n          \"active_at\": \"2021-04-22T04:16:54.996365329Z\",\n          \"expires_at\": \"2121-03-29T04:16:54.996365329Z\"\n        }\n      ]\n    }\n  ]\n}\n\n```"
  },
  {
    "id": "send-extension-chat-message",
    "name": "Send Extension Chat Message",
    "resource": "Extensions",
    "description": "Sends a message to the specified broadcaster’s chat room.",
    "descriptionFull": [
      "Sends a message to the specified broadcaster’s chat room. The extension’s name is used as the username for the message in the chat room. To send a chat message, your extension must enable **Chat Capabilities** (under your extension’s **Capabilities** tab).",
      "**Rate Limits**: You may send a maximum of 12 messages per minute per channel."
    ],
    "authentication": [],
    "authorization": [
      "Requires a signed JSON Web Token (JWT) created by an Extension Backend Service (EBS). For signing requirements, see [Signing the JWT](https://dev.twitch.tv/docs/extensions/building/#signing-the-jwt). The signed JWT must include the `role` and `user_id` fields (see [JWT Schema](https://dev.twitch.tv/docs/extensions/reference/#jwt-schema)). The `role` field must be set to _external_."
    ],
    "url": "https://api.twitch.tv/helix/extensions/chat",
    "method": "POST",
    "requestBody": {
      "description": [],
      "parameters": [
        {
          "name": "text",
          "type": "String",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "The message. The message may contain a maximum of 280 characters.",
          "children": []
        },
        {
          "name": "extension_id",
          "type": "String",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "The ID of the extension that’s sending the chat message.",
          "children": []
        },
        {
          "name": "extension_version",
          "type": "String",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "The extension’s version number.",
          "children": []
        }
      ]
    },
    "requestQueryParams": {
      "description": [],
      "parameters": [
        {
          "name": "broadcaster_id",
          "type": "String",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "The ID of the broadcaster that has activated the extension.",
          "children": []
        }
      ]
    },
    "responseBody": {
      "description": [],
      "parameters": []
    },
    "responseCodes": [
      [
        "204 No Content",
        "Successfully sent the chat message."
      ],
      [
        "400 Bad Request",
        "* The _broadcaster\\_id_ query parameter is required.\n* The `extension_id` field in the request's body is required.\n* The `extension_version` field in the request's body is required.\n* The `text` field in the request's body is required.\n* The message is too long."
      ],
      [
        "401 Unauthorized",
        "* The Authorization header is required and must specify a JWT token.\n* The ID in the _broadcaster\\_id_ query parameter must match the `channel_id` claim in the JWT.\n* The JWT token is not valid.\n* The Client-Id header is required."
      ]
    ],
    "examples": "### Example Request\n\n```\ncurl -X POST 'https://api.twitch.tv/helix/extensions/chat?broadcaster_id=237757755' \\\n-H 'Authorization: Bearer cfabdegwdoklmawdzdo98xt2fo512y' \\\n-H 'Client-Id: uo6dggojyb8d6soh92zknwmi5ej1q2' \\\n-H 'Content-Type: application/json' \\\n-d '{\n  \"text\": \"Hello\",\n  \"extension_id\": \"uo6dggojyb8d6soh92zknwmi5ej1q2\",\n  \"extension_version\": \"0.0.9\"\n}\n\n```"
  },
  {
    "id": "get-extensions",
    "name": "Get Extensions",
    "resource": "Extensions",
    "description": "Gets information about an extension.",
    "descriptionFull": [
      "Gets information about an extension."
    ],
    "authentication": [],
    "authorization": [
      "Requires a signed JSON Web Token (JWT) created by an Extension Backend Service (EBS). For signing requirements, see [Signing the JWT](https://dev.twitch.tv/docs/extensions/building/#signing-the-jwt). The signed JWT must include the `role` field (see [JWT Schema](https://dev.twitch.tv/docs/extensions/reference/#jwt-schema)), and the `role` field must be set to _external_."
    ],
    "url": "https://api.twitch.tv/helix/extensions",
    "method": "GET",
    "requestBody": {
      "description": [],
      "parameters": []
    },
    "requestQueryParams": {
      "description": [],
      "parameters": [
        {
          "name": "extension_id",
          "type": "String",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "The ID of the extension to get.",
          "children": []
        },
        {
          "name": "extension_version",
          "type": "String",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "The version of the extension to get. If not specified, it returns the latest, released version. If you don’t have a released version, you must specify a version; otherwise, the list is empty.",
          "children": []
        }
      ]
    },
    "responseBody": {
      "description": [],
      "parameters": [
        {
          "name": "data",
          "type": "Object[]",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "A list that contains the specified extension.",
          "children": [
            {
              "name": "author_name",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The name of the user or organization that owns the extension.",
              "children": []
            },
            {
              "name": "bits_enabled",
              "type": "Boolean",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "A Boolean value that determines whether the extension has features that use Bits. Is **true** if the extension has features that use Bits.",
              "children": []
            },
            {
              "name": "can_install",
              "type": "Boolean",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "A Boolean value that determines whether a user can install the extension on their channel. Is **true** if a user can install the extension.  \n  \nTypically, this is set to **false** if the extension is currently in testing mode and requires users to be allowlisted (the allowlist is configured on Twitch’s [developer site](https://dev.twitch.tv/console/extensions) under the **Extensions** \\-> **Extension** \\-> **Version** \\-> **Access**).",
              "children": []
            },
            {
              "name": "configuration_location",
              "type": "String",
              "possibleValues": [
                "hosted",
                "custom",
                "none"
              ],
              "required": null,
              "depth": 1,
              "description": "The location of where the extension’s configuration is stored. Possible values are:  \n  \n* hosted — The Extensions Configuration Service hosts the configuration.\n* custom — The Extension Backend Service (EBS) hosts the configuration.\n* none — The extension doesn't require configuration.",
              "children": []
            },
            {
              "name": "description",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "A longer description of the extension. It appears on the details page.",
              "children": []
            },
            {
              "name": "eula_tos_url",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "A URL to the extension’s Terms of Service.",
              "children": []
            },
            {
              "name": "has_chat_support",
              "type": "Boolean",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "A Boolean value that determines whether the extension can communicate with the installed channel’s chat. Is **true** if the extension can communicate with the channel’s chat room.",
              "children": []
            },
            {
              "name": "icon_url",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "A URL to the default icon that’s displayed in the Extensions directory.",
              "children": []
            },
            {
              "name": "icon_urls",
              "type": "map[string]string",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "A dictionary that contains URLs to different sizes of the default icon. The dictionary’s key identifies the icon’s size (for example, 24x24), and the dictionary’s value contains the URL to the icon.",
              "children": []
            },
            {
              "name": "id",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The extension’s ID.",
              "children": []
            },
            {
              "name": "name",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The extension’s name.",
              "children": []
            },
            {
              "name": "privacy_policy_url",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "A URL to the extension’s privacy policy.",
              "children": []
            },
            {
              "name": "request_identity_link",
              "type": "Boolean",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "A Boolean value that determines whether the extension wants to explicitly ask viewers to link their Twitch identity.",
              "children": []
            },
            {
              "name": "screenshot_urls",
              "type": "String[]",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "A list of URLs to screenshots that are shown in the Extensions marketplace.",
              "children": []
            },
            {
              "name": "state",
              "type": "String",
              "possibleValues": [
                "Approved",
                "AssetsUploaded",
                "Deleted",
                "Deprecated",
                "InReview",
                "InTest",
                "PendingAction",
                "Rejected",
                "Released"
              ],
              "required": null,
              "depth": 1,
              "description": "The extension’s state. Possible values are:  \n  \n* Approved\n* AssetsUploaded\n* Deleted\n* Deprecated\n* InReview\n* InTest\n* PendingAction\n* Rejected\n* Released",
              "children": []
            },
            {
              "name": "subscriptions_support_level",
              "type": "String",
              "possibleValues": [
                "none",
                "optional"
              ],
              "required": null,
              "depth": 1,
              "description": "Indicates whether the extension can view the user’s subscription level on the channel that the extension is installed on. Possible values are:  \n  \n* none — The extension can't view the user’s subscription level.\n* optional — The extension can view the user’s subscription level.",
              "children": []
            },
            {
              "name": "summary",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "A short description of the extension that streamers see when hovering over the discovery splash screen in the Extensions manager.",
              "children": []
            },
            {
              "name": "support_email",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The email address that users use to get support for the extension.",
              "children": []
            },
            {
              "name": "version",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The extension’s version number.",
              "children": []
            },
            {
              "name": "viewer_summary",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "A brief description displayed on the channel to explain how the extension works.",
              "children": []
            },
            {
              "name": "views",
              "type": "Object",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "Describes all views-related information such as how the extension is displayed on mobile devices.",
              "children": [
                {
                  "name": "mobile",
                  "type": "Object",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "Describes how the extension is displayed on mobile devices.",
                  "children": []
                },
                {
                  "name": "panel",
                  "type": "Object",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "Describes how the extension is rendered if the extension may be activated as a panel extension.",
                  "children": []
                },
                {
                  "name": "video_overlay",
                  "type": "Object",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "Describes how the extension is rendered if the extension may be activated as a video-overlay extension.",
                  "children": []
                },
                {
                  "name": "component",
                  "type": "Object",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "Describes how the extension is rendered if the extension may be activated as a video-component extension.",
                  "children": []
                },
                {
                  "name": "config",
                  "type": "Object",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "Describes the view that is shown to broadcasters while they are configuring your extension within the Extension Manager.",
                  "children": []
                }
              ]
            },
            {
              "name": "allowlisted_config_urls",
              "type": "String[]",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "Allowlisted configuration URLs for displaying the extension (the allowlist is configured on Twitch’s [developer site](https://dev.twitch.tv/console/extensions) under the **Extensions** \\-> **Extension** \\-> **Version** \\-> **Capabilities**).",
              "children": []
            },
            {
              "name": "allowlisted_panel_urls",
              "type": "String[]",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "Allowlisted panel URLs for displaying the extension (the allowlist is configured on Twitch’s [developer site](https://dev.twitch.tv/console/extensions) under the **Extensions** \\-> **Extension** \\-> **Version** \\-> **Capabilities**).",
              "children": []
            }
          ]
        }
      ]
    },
    "responseCodes": [
      [
        "200 OK",
        "Sccessfully retrieved the list of extensions."
      ],
      [
        "400 Bad Request",
        "* The _extension\\_id_ query parameter is required."
      ],
      [
        "401 Unauthorized",
        "* The request must specify the Authorization header.\n* The Authorization header is required and must specify a JWT token.\n* The JWT token is not valid.\n* The request must specify the Client-Id header."
      ],
      [
        "404 Not Found",
        "* The extension in the _extension\\_id_ query parameter was not found."
      ]
    ],
    "examples": "### Example Request\n\n```\ncurl -X GET 'https://api.twitch.tv/helix/extensions?extension_id=uo6dggojyb8d6soh92zknwmi5ej1q2&extension_version=0.0.9' \\\n-H 'Authorization: Bearer cfabdegwdoklmawdzdo98xt2fo512y' \\\n-H 'Client-Id: uo6dggojyb8d6soh92zknwmi5ej1q2'\n\n```\n\n### Example Response\n\n```\n{\n  \"data\": [\n    {\n      \"author_name\": \"Twitch Developers\",\n      \"bits_enabled\": true,\n      \"can_install\": false,\n      \"configuration_location\": \"hosted\",\n      \"description\": \"An extension for testing all the features that we add to extensions\",\n      \"eula_tos_url\": \"\",\n      \"has_chat_support\": true,\n      \"icon_url\": \"https://extensions-discovery-images.twitch.tv/pgn0bjv51epi7eaekt53tovjnc82qo/0.0.8/logob6c995d8-8b45-48cc-a748-b256e92ac1cd\",\n      \"icon_urls\": {\n        \"100x100\": \"https://extensions-discovery-images.twitch.tv/pgn0bjv51epi7eaekt53tovjnc82qo/0.0.8/logob6c995d8-8b45-48cc-a748-b256e92ac1cd\",\n        \"24x24\": \"https://extensions-discovery-images.twitch.tv/pgn0bjv51epi7eaekt53tovjnc82qo/0.0.8/taskbar905b19da-e7e5-4d8f-beb7-f543a861ac1e\",\n        \"300x200\": \"https://extensions-discovery-images.twitch.tv/pgn0bjv51epi7eaekt53tovjnc82qo/0.0.8/discoveryd9545b2c-5474-46d7-a523-1c3835d862ce\"\n      },\n      \"id\": \"pgn0bjv51epi7eaekt53tovjnc82qo\",\n      \"name\": \"Official Developers Demo\",\n      \"privacy_policy_url\": \"\",\n      \"request_identity_link\": true,\n      \"screenshot_urls\": [\n        \"https://extensions-discovery-images.twitch.tv/pgn0bjv51epi7eaekt53tovjnc82qo/0.0.8/screenshotbdec475d-3d2f-4378-b334-941dfddc897a\"\n      ],\n      \"state\": \"Released\",\n      \"subscriptions_support_level\": \"optional\",\n      \"summary\": \"Test ALL the extensions features!\",\n      \"support_email\": \"dx-extensions-test-dev@justin.tv\",\n      \"version\": \"0.0.9\",\n      \"viewer_summary\": \"Test ALL the extensions features!\",\n      \"views\": {\n        \"mobile\": {\n          \"viewer_url\": \"https://pgn0bjv51epi7eaekt53tovjnc82qo.ext-twitch.tv/pgn0bjv51epi7eaekt53tovjnc82qo/0.0.9/f9a0d8aae0f9dd0b2d6ef3416b96bc79/index.html\"\n        },\n        \"panel\": {\n          \"viewer_url\": \"https://pgn0bjv51epi7eaekt53tovjnc82qo.ext-twitch.tv/pgn0bjv51epi7eaekt53tovjnc82qo/0.0.9/f9a0d8aae0f9dd0b2d6ef3416b96bc79/index.html\",\n          \"height\": 300,\n          \"can_link_external_content\": false\n        },\n        \"video_overlay\": {\n          \"viewer_url\": \"https://pgn0bjv51epi7eaekt53tovjnc82qo.ext-twitch.tv/pgn0bjv51epi7eaekt53tovjnc82qo/0.0.9/f9a0d8aae0f9dd0b2d6ef3416b96bc79/index.html\",\n          \"can_link_external_content\": false\n        },\n        \"component\": {\n          \"viewer_url\": \"https://pgn0bjv51epi7eaekt53tovjnc82qo.ext-twitch.tv/pgn0bjv51epi7eaekt53tovjnc82qo/0.0.9/f9a0d8aae0f9dd0b2d6ef3416b96bc79/index.html\",\n          \"aspect_width\": 0,\n          \"aspect_height\": 0,\n          \"aspect_ratio_x\": 48000,\n          \"aspect_ratio_y\": 36000,\n          \"autoscale\": true,\n          \"scale_pixels\": 1024,\n          \"target_height\": 5333,\n          \"size\": 0,\n          \"zoom\": false,\n          \"zoom_pixels\": 0,\n          \"can_link_external_content\": false\n        }\n      },\n      \"allowlisted_config_urls\": [],\n      \"allowlisted_panel_urls\": []\n    }\n  ]\n}\n\n```"
  },
  {
    "id": "get-released-extensions",
    "name": "Get Released Extensions",
    "resource": "Extensions",
    "description": "Gets information about a released extension.",
    "descriptionFull": [
      "Gets information about a released extension. Returns extensions whose `state` is Released."
    ],
    "authentication": [],
    "authorization": [
      "Requires an app access token or user access token."
    ],
    "url": "https://api.twitch.tv/helix/extensions/released",
    "method": "GET",
    "requestBody": {
      "description": [],
      "parameters": []
    },
    "requestQueryParams": {
      "description": [],
      "parameters": [
        {
          "name": "extension_id",
          "type": "String",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "The ID of the extension to get.",
          "children": []
        },
        {
          "name": "extension_version",
          "type": "String",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "The version of the extension to get. If not specified, it returns the latest version.",
          "children": []
        }
      ]
    },
    "responseBody": {
      "description": [],
      "parameters": [
        {
          "name": "data",
          "type": "Object[]",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "A list that contains the specified extension.",
          "children": [
            {
              "name": "author_name",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The name of the user or organization that owns the extension.",
              "children": []
            },
            {
              "name": "bits_enabled",
              "type": "Boolean",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "A Boolean value that determines whether the extension has features that use Bits. Is **true** if the extension has features that use Bits.",
              "children": []
            },
            {
              "name": "can_install",
              "type": "Boolean",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "A Boolean value that determines whether a user can install the extension on their channel. Is **true** if a user can install the extension.  \n  \nTypically, this is set to **false** if the extension is currently in testing mode and requires users to be allowlisted (the allowlist is configured on Twitch’s [developer site](https://dev.twitch.tv/console/extensions) under the **Extensions** \\-> **Extension** \\-> **Version** \\-> **Access**).",
              "children": []
            },
            {
              "name": "configuration_location",
              "type": "String",
              "possibleValues": [
                "hosted",
                "custom",
                "none"
              ],
              "required": null,
              "depth": 1,
              "description": "The location of where the extension’s configuration is stored. Possible values are:  \n  \n* hosted — The Extensions Configuration Service hosts the configuration.\n* custom — The Extension Backend Service (EBS) hosts the configuration.\n* none — The extension doesn't require configuration.",
              "children": []
            },
            {
              "name": "description",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "A longer description of the extension. It appears on the details page.",
              "children": []
            },
            {
              "name": "eula_tos_url",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "A URL to the extension’s Terms of Service.",
              "children": []
            },
            {
              "name": "has_chat_support",
              "type": "Boolean",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "A Boolean value that determines whether the extension can communicate with the installed channel’s chat. Is **true** if the extension can communicate with the channel’s chat room.",
              "children": []
            },
            {
              "name": "icon_url",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "A URL to the default icon that’s displayed in the Extensions directory.",
              "children": []
            },
            {
              "name": "icon_urls",
              "type": "map[string]string",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "A dictionary that contains URLs to different sizes of the default icon. The dictionary’s key identifies the icon’s size (for example, 24x24), and the dictionary’s value contains the URL to the icon.",
              "children": []
            },
            {
              "name": "id",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The extension’s ID.",
              "children": []
            },
            {
              "name": "name",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The extension’s name.",
              "children": []
            },
            {
              "name": "privacy_policy_url",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "A URL to the extension’s privacy policy.",
              "children": []
            },
            {
              "name": "request_identity_link",
              "type": "Boolean",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "A Boolean value that determines whether the extension wants to explicitly ask viewers to link their Twitch identity.",
              "children": []
            },
            {
              "name": "screenshot_urls",
              "type": "String[]",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "A list of URLs to screenshots that are shown in the Extensions marketplace.",
              "children": []
            },
            {
              "name": "state",
              "type": "String",
              "possibleValues": [
                "Approved",
                "AssetsUploaded",
                "Deleted",
                "Deprecated",
                "InReview",
                "InTest",
                "PendingAction",
                "Rejected",
                "Released"
              ],
              "required": null,
              "depth": 1,
              "description": "The extension’s state. Possible values are:  \n  \n* Approved\n* AssetsUploaded\n* Deleted\n* Deprecated\n* InReview\n* InTest\n* PendingAction\n* Rejected\n* Released",
              "children": []
            },
            {
              "name": "subscriptions_support_level",
              "type": "String",
              "possibleValues": [
                "none",
                "optional"
              ],
              "required": null,
              "depth": 1,
              "description": "Indicates whether the extension can view the user’s subscription level on the channel that the extension is installed on. Possible values are:  \n  \n* none — The extension can't view the user’s subscription level.\n* optional — The extension can view the user’s subscription level.",
              "children": []
            },
            {
              "name": "summary",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "A short description of the extension that streamers see when hovering over the discovery splash screen in the Extensions manager.",
              "children": []
            },
            {
              "name": "support_email",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The email address that users use to get support for the extension.",
              "children": []
            },
            {
              "name": "version",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The extension’s version number.",
              "children": []
            },
            {
              "name": "viewer_summary",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "A brief description displayed on the channel to explain how the extension works.",
              "children": []
            },
            {
              "name": "views",
              "type": "Object",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "Describes all views-related information such as how the extension is displayed on mobile devices.",
              "children": [
                {
                  "name": "mobile",
                  "type": "Object",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "Describes how the extension is displayed on mobile devices.",
                  "children": []
                },
                {
                  "name": "panel",
                  "type": "Object",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "Describes how the extension is rendered if the extension may be activated as a panel extension.",
                  "children": []
                },
                {
                  "name": "video_overlay",
                  "type": "Object",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "Describes how the extension is rendered if the extension may be activated as a video-overlay extension.",
                  "children": []
                },
                {
                  "name": "component",
                  "type": "Object",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "Describes how the extension is rendered if the extension may be activated as a video-component extension.",
                  "children": []
                },
                {
                  "name": "config",
                  "type": "Object",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "Describes the view that is shown to broadcasters while they are configuring your extension within the Extension Manager.",
                  "children": []
                }
              ]
            },
            {
              "name": "allowlisted_config_urls",
              "type": "String[]",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "Allowlisted configuration URLs for displaying the extension (the allowlist is configured on Twitch’s [developer site](https://dev.twitch.tv/console/extensions) under the **Extensions** \\-> **Extension** \\-> **Version** \\-> **Capabilities**).",
              "children": []
            },
            {
              "name": "allowlisted_panel_urls",
              "type": "String[]",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "Allowlisted panel URLs for displaying the extension (the allowlist is configured on Twitch’s [developer site](https://dev.twitch.tv/console/extensions) under the **Extensions** \\-> **Extension** \\-> **Version** \\-> **Capabilities**).",
              "children": []
            }
          ]
        }
      ]
    },
    "responseCodes": [
      [
        "200 OK",
        "Successfully retrieved the extension."
      ],
      [
        "400 Bad Request",
        "* The _extension\\_id_ query parameter is required."
      ],
      [
        "401 Unauthorized",
        "* The Authorization header must specify an app access token or user access token.\n* The access token is not valid.\n* The ID in the Client-Id header must match the client ID in the access token."
      ],
      [
        "404 Not Found",
        "* The extension specified in the _extension\\_id_ query parameter was not found or is not released."
      ]
    ],
    "examples": "### Example Request\n\n```\ncurl -X GET 'https://api.twitch.tv/helix/extensions/released?extension_version=0.0.9&extension_id=uo6dggojyb8d6soh92zknwmi5ej1q2' \\\n-H 'Authorization: Bearer cfabdegwdoklmawdzdo98xt2fo512y' \\\n-H 'Client-Id: uo6dggojyb8d6soh92zknwmi5ej1q2'\n\n```\n\n### Example Response\n\n```\n{\n  \"data\": [\n    {\n      \"author_name\": \"Twitch Developer Experience\",\n      \"bits_enabled\": true,\n      \"can_install\": false,\n      \"configuration_location\": \"hosted\",\n      \"description\": \"An extension for testing all the features that we add to extensions\",\n      \"eula_tos_url\": \"\",\n      \"has_chat_support\": true,\n      \"icon_url\": \"https://extensions-discovery-images.twitch.tv/pgn0bjv51epi7eaekt53tovjnc82qo/0.0.8/logob6c995d8-8b45-48cc-a748-b256e92ac1cd\",\n      \"icon_urls\": {\n        \"100x100\": \"https://extensions-discovery-images.twitch.tv/pgn0bjv51epi7eaekt53tovjnc82qo/0.0.8/logob6c995d8-8b45-48cc-a748-b256e92ac1cd\",\n        \"24x24\": \"https://extensions-discovery-images.twitch.tv/pgn0bjv51epi7eaekt53tovjnc82qo/0.0.8/taskbar905b19da-e7e5-4d8f-beb7-f543a861ac1e\",\n        \"300x200\": \"https://extensions-discovery-images.twitch.tv/pgn0bjv51epi7eaekt53tovjnc82qo/0.0.8/discoveryd9545b2c-5474-46d7-a523-1c3835d862ce\"\n      },\n      \"id\": \"pgn0bjv51epi7eaekt53tovjnc82qo\",\n      \"name\": \"Official Developer Experience Demo\",\n      \"privacy_policy_url\": \"\",\n      \"request_identity_link\": true,\n      \"screenshot_urls\": [\n        \"https://extensions-discovery-images.twitch.tv/pgn0bjv51epi7eaekt53tovjnc82qo/0.0.8/screenshotbdec475d-3d2f-4378-b334-941dfddc897a\"\n      ],\n      \"state\": \"Released\",\n      \"subscriptions_support_level\": \"optional\",\n      \"summary\": \"Test ALL the extensions features!\",\n      \"support_email\": \"dx-extensions-test-dev@justin.tv\",\n      \"version\": \"0.0.9\",\n      \"viewer_summary\": \"Test ALL the extensions features!\",\n      \"views\": {\n        \"mobile\": {\n          \"viewer_url\": \"https://pgn0bjv51epi7eaekt53tovjnc82qo.ext-twitch.tv/pgn0bjv51epi7eaekt53tovjnc82qo/0.0.9/f9a0d8aae0f9dd0b2d6ef3416b96bc79/index.html\"\n        },\n        \"panel\": {\n          \"viewer_url\": \"https://pgn0bjv51epi7eaekt53tovjnc82qo.ext-twitch.tv/pgn0bjv51epi7eaekt53tovjnc82qo/0.0.9/f9a0d8aae0f9dd0b2d6ef3416b96bc79/index.html\",\n          \"height\": 300,\n          \"can_link_external_content\": false\n        },\n        \"video_overlay\": {\n          \"viewer_url\": \"https://pgn0bjv51epi7eaekt53tovjnc82qo.ext-twitch.tv/pgn0bjv51epi7eaekt53tovjnc82qo/0.0.9/f9a0d8aae0f9dd0b2d6ef3416b96bc79/index.html\",\n          \"can_link_external_content\": false\n        },\n        \"component\": {\n          \"viewer_url\": \"https://pgn0bjv51epi7eaekt53tovjnc82qo.ext-twitch.tv/pgn0bjv51epi7eaekt53tovjnc82qo/0.0.9/f9a0d8aae0f9dd0b2d6ef3416b96bc79/index.html\",\n          \"aspect_width\": 0,\n          \"aspect_height\": 0,\n          \"aspect_ratio_x\": 48000,\n          \"aspect_ratio_y\": 36000,\n          \"autoscale\": true,\n          \"scale_pixels\": 1024,\n          \"target_height\": 5333,\n          \"size\": 0,\n          \"zoom\": false,\n          \"zoom_pixels\": 0,\n          \"can_link_external_content\": false\n        }\n      },\n      \"allowlisted_config_urls\": [],\n      \"allowlisted_panel_urls\": []\n    }\n  ]\n}\n\n```"
  },
  {
    "id": "get-extension-bits-products",
    "name": "Get Extension Bits Products",
    "resource": "Extensions",
    "description": "Gets the list of Bits products that belongs to the extension.",
    "descriptionFull": [
      "Gets the list of Bits products that belongs to the extension. The client ID in the app access token identifies the extension."
    ],
    "authentication": [],
    "authorization": [
      "Requires an app access token. The client ID in the app access token must be the extension’s client ID."
    ],
    "url": "https://api.twitch.tv/helix/bits/extensions",
    "method": "GET",
    "requestBody": {
      "description": [],
      "parameters": []
    },
    "requestQueryParams": {
      "description": [],
      "parameters": [
        {
          "name": "should_include_all",
          "type": "Boolean",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "A Boolean value that determines whether to include disabled or expired Bits products in the response. The default is **false**.",
          "children": []
        }
      ]
    },
    "responseBody": {
      "description": [],
      "parameters": [
        {
          "name": "data",
          "type": "Object[]",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "A list of Bits products that the extension created. The list is in ascending SKU order. The list is empty if the extension hasn’t created any products or they’re all expired or disabled.",
          "children": [
            {
              "name": "sku",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The product’s SKU. The SKU is unique across an extension’s products.",
              "children": []
            },
            {
              "name": "cost",
              "type": "Object",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "An object that contains the product’s cost information.",
              "children": [
                {
                  "name": "amount",
                  "type": "Integer",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "The product’s price.",
                  "children": []
                },
                {
                  "name": "type",
                  "type": "String",
                  "possibleValues": [
                    "bits"
                  ],
                  "required": null,
                  "depth": 2,
                  "description": "The type of currency. Possible values are:  \n  \n* bits",
                  "children": []
                }
              ]
            },
            {
              "name": "in_development",
              "type": "Boolean",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "A Boolean value that indicates whether the product is in development. If **true**, the product is not available for public use.",
              "children": []
            },
            {
              "name": "display_name",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The product’s name as displayed in the extension.",
              "children": []
            },
            {
              "name": "expiration",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The date and time, in RFC3339 format, when the product expires.",
              "children": []
            },
            {
              "name": "is_broadcast",
              "type": "Boolean",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "A Boolean value that determines whether Bits product purchase events are broadcast to all instances of an extension on a channel. The events are broadcast via the `onTransactionComplete` helper callback. Is **true** if the event is broadcast to all instances.",
              "children": []
            }
          ]
        }
      ]
    },
    "responseCodes": [
      [
        "200 OK",
        "Successfully retrieved the list of products."
      ],
      [
        "400 Bad Request",
        "* The ID in the Client-Id header must belong to an extension."
      ],
      [
        "401 Unauthorized",
        "* The Authorization header is required and must specify an app access token; you may not specify a user access token.\n* The OAuth token is not valid.\n* The ID in the Client-Id header must match the Client ID in the OAuth token."
      ]
    ],
    "examples": "### Example Request\n\nGets the extension’s products including its disabled and expired products.\n\n```\ncurl -X GET 'https://api.twitch.tv/helix/bits/extensions?should_include_all=true' \\\n-H 'Authorization: Bearer cfabdegwdoklmawdzdo98xt2fo512y' \\\n-H 'Client-Id: uo6dggojyb8d6soh92zknwmi5ej1q2'\n\n```\n\n### Example Response\n\n```\n{\n  \"data\": [\n    {\n      \"sku\": \"1010\",\n      \"cost\": {\n        \"amount\": 990,\n        \"type\": \"bits\"\n      },\n      \"in_development\": true,\n      \"display_name\": \"Rusty Crate 2\",\n      \"expiration\": \"2021-05-18T09:10:13.397Z\",\n      \"is_broadcast\": false\n    }\n  ]\n}\n\n```"
  },
  {
    "id": "update-extension-bits-product",
    "name": "Update Extension Bits Product",
    "resource": "Extensions",
    "description": "Adds or updates a Bits product that the extension created.",
    "descriptionFull": [
      "Adds or updates a Bits product that the extension created. If the SKU doesn’t exist, the product is added. You may update all fields except the `sku` field."
    ],
    "authentication": [],
    "authorization": [
      "Requires an app access token. The client ID in the app access token must be the extension’s client ID."
    ],
    "url": "https://api.twitch.tv/helix/bits/extensions",
    "method": "PUT",
    "requestBody": {
      "description": [],
      "parameters": []
    },
    "requestQueryParams": {
      "description": [],
      "parameters": []
    },
    "responseBody": {
      "description": [],
      "parameters": [
        {
          "name": "data",
          "type": "Object[]",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "A list of Bits products that the extension created. The list is in ascending SKU order. The list is empty if the extension hasn’t created any products or they’re all expired or disabled.",
          "children": [
            {
              "name": "sku",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The product’s SKU. The SKU is unique across an extension’s products.",
              "children": []
            },
            {
              "name": "cost",
              "type": "Object",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "An object that contains the product’s cost information.",
              "children": [
                {
                  "name": "amount",
                  "type": "Integer",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "The product’s price.",
                  "children": []
                },
                {
                  "name": "type",
                  "type": "String",
                  "possibleValues": [
                    "bits"
                  ],
                  "required": null,
                  "depth": 2,
                  "description": "The type of currency. Possible values are:  \n  \n* bits",
                  "children": []
                }
              ]
            },
            {
              "name": "in_development",
              "type": "Boolean",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "A Boolean value that indicates whether the product is in development. If **true**, the product is not available for public use.",
              "children": []
            },
            {
              "name": "display_name",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The product’s name as displayed in the extension.",
              "children": []
            },
            {
              "name": "expiration",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The date and time, in RFC3339 format, when the product expires.",
              "children": []
            },
            {
              "name": "is_broadcast",
              "type": "Boolean",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "A Boolean value that determines whether Bits product purchase events are broadcast to all instances of an extension on a channel. The events are broadcast via the `onTransactionComplete` helper callback. Is **true** if the event is broadcast to all instances.",
              "children": []
            }
          ]
        }
      ]
    },
    "responseCodes": [
      [
        "200 OK",
        "Successfully created the product."
      ],
      [
        "400 Bad Request",
        "* The `sku` field is required.\n* The value in the `sku` field is not valid. The SKU may contain only alphanumeric characters, dashes (-), underscores (\\_), and periods (.).\n* The `cost` object's `amount` field is required.\n* The value in the `cost` object's `amount` field is not valid.\n* The cost object's `type` field is required.\n* The value in the `cost` object's `type` field is not valid.\n* The `display_name` field is required.\n* The ID in the Client-Id header must belong to the extension."
      ],
      [
        "401 Unauthorized",
        "* The Authorization header is required and must specify an app access token; you may not specify a user access token.\n* The OAuth token is not valid.\n* The ID in the Client-Id header must match the Client ID in the OAuth token."
      ]
    ],
    "examples": "### Example Request\n\n```\ncurl -X PUT 'https://api.twitch.tv/helix/bits/extensions' \\\n-H 'Authorization: Bearer cfabdegwdoklmawdzdo98xt2fo512y' \\\n-H 'Client-Id: uo6dggojyb8d6soh92zknwmi5ej1q2' \\\n-H 'Content-Type: application/json' \\\n-d {\n  \"sku\": \"1010\",\n  \"cost\": {\n    \"amount\": 990,\n    \"type\": \"bits\"\n  },\n  \"in_development\": true,\n  \"display_name\": \"Rusty Crate 2\",\n  \"is_broadcast\": true,\n  \"expiration\": \"2021-05-18T09:10:13.397Z\"\n}\n\n```\n\n### Example Response\n\n```\n{\n  \"data\": [\n    {\n      \"sku\": \"1010\",\n      \"cost\": {\n        \"amount\": 990,\n        \"type\": \"bits\"\n      },\n      \"in_development\": true,\n      \"display_name\": \"Rusty Crate 2\",\n      \"expiration\": \"2021-05-18T09:10:13.397Z\",\n      \"is_broadcast\": true\n    }\n  ]\n}\n\n```"
  },
  {
    "id": "create-eventsub-subscription",
    "name": "Create EventSub Subscription",
    "resource": "EventSub",
    "description": "Creates an EventSub subscription.",
    "descriptionFull": [
      "Creates an EventSub subscription."
    ],
    "authentication": [
      "If you use [webhooks to receive events](https://dev.twitch.tv/docs/eventsub/handling-webhook-events), the request must specify an app access token. The request will fail if you use a user access token. If the subscription type requires user authorization, the user must have granted your app (client ID) permissions to receive those events before you subscribe to them. For example, to subscribe to [channel.subscribe](https://dev.twitch.tv/docs/eventsub/eventsub-subscription-types/#channelsubscribe) events, your app must get a user access token that includes the `channel:read:subscriptions` scope, which adds the required permission to your app access token’s client ID.",
      "If you use [WebSockets to receive events](https://dev.twitch.tv/docs/eventsub/handling-websocket-events), the request must specify a user access token. The request will fail if you use an app access token. If the subscription type requires user authorization, the token must include the required scope. However, if the subscription type doesn’t include user authorization, the token may include any scopes or no scopes."
    ],
    "authorization": [],
    "url": "https://api.twitch.tv/helix/eventsub/subscriptions",
    "method": "POST",
    "requestBody": {
      "description": [],
      "parameters": [
        {
          "name": "type",
          "type": "String",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "The type of subscription to create. For a list of subscriptions that you can create, see [Subscription Types](https://dev.twitch.tv/docs/eventsub/eventsub-subscription-types#subscription-types). Set this field to the value in the **Name** column of the Subscription Types table.",
          "children": []
        },
        {
          "name": "version",
          "type": "String",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "The version number that identifies the definition of the subscription type that you want the response to use.",
          "children": []
        },
        {
          "name": "condition",
          "type": "Object",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "A JSON object that contains the parameter values that are specific to the specified subscription type. For the object’s required and optional fields, see the subscription type’s documentation.",
          "children": []
        },
        {
          "name": "transport",
          "type": "Object",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "The transport details that you want Twitch to use when sending you notifications.",
          "children": [
            {
              "name": "method",
              "type": "String",
              "possibleValues": [
                "webhook",
                "websocket"
              ],
              "required": true,
              "depth": 1,
              "description": "The transport method. Possible values are:  \n  \n* webhook\n* websocket",
              "children": []
            },
            {
              "name": "callback",
              "type": "String",
              "possibleValues": [],
              "required": false,
              "depth": 1,
              "description": "The callback URL where the notifications are sent. The URL must use the HTTPS protocol and port 443\\. See [Processing an event](https://dev.twitch.tv/docs/eventsub/handling-webhook-events#processing-an-event).  \n  \nSpecify this field only if `method` is set to **webhook**.  \n  \n**NOTE**: Redirects are not followed.",
              "children": []
            },
            {
              "name": "secret",
              "type": "String",
              "possibleValues": [],
              "required": false,
              "depth": 1,
              "description": "The secret used to verify the signature. The secret must be an ASCII string that’s a minimum of 10 characters long and a maximum of 100 characters long. For information about how the secret is used, see [Verifying the event message](https://dev.twitch.tv/docs/eventsub/handling-webhook-events#verifying-the-event-message).  \n  \nSpecify this field only if `method` is set to **webhook**.",
              "children": []
            },
            {
              "name": "session_id",
              "type": "String",
              "possibleValues": [],
              "required": false,
              "depth": 1,
              "description": "An ID that identifies the WebSocket to send notifications to. When you connect to EventSub using WebSockets, the server returns the ID in the [Welcome message](https://dev.twitch.tv/docs/eventsub/handling-websocket-events#welcome-message).  \n  \nSpecify this field only if `method` is set to **websocket**.",
              "children": []
            }
          ]
        }
      ]
    },
    "requestQueryParams": {
      "description": [],
      "parameters": []
    },
    "responseBody": {
      "description": [],
      "parameters": [
        {
          "name": "data",
          "type": "Object[]",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "A list that contains the single subscription that you created.",
          "children": [
            {
              "name": "id",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "An ID that identifies the subscription.",
              "children": []
            },
            {
              "name": "status",
              "type": "String",
              "possibleValues": [
                "enabled",
                "webhook_callback_verification_pending",
                "webhook_callback_verification_failed",
                "notification_failures_exceeded",
                "authorization_revoked",
                "user_removed"
              ],
              "required": null,
              "depth": 1,
              "description": "The subscription’s status. Possible values are:   \n  \n* enabled — The subscription is enabled.\n* webhook\\_callback\\_verification\\_pending — The subscription is pending verification of the specified callback URL.\n* webhook\\_callback\\_verification\\_failed — The specified callback URL failed verification.\n* notification\\_failures\\_exceeded — The notification delivery failure rate was too high.\n* authorization\\_revoked — The authorization was revoked for one or more users specified in the **Condition** object.\n* user\\_removed — One of the users specified in the **Condition** object was removed.",
              "children": []
            },
            {
              "name": "type",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The subscription’s type. See [Subscription Types](https://dev.twitch.tv/docs/eventsub/eventsub-subscription-types#subscription-types).",
              "children": []
            },
            {
              "name": "version",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The version number that identifies this definition of the subscription’s data.",
              "children": []
            },
            {
              "name": "condition",
              "type": "Object",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The subscription’s parameter values. This is a string-encoded JSON object whose contents are determined by the subscription type.",
              "children": []
            },
            {
              "name": "created_at",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The date and time (in RFC3339 format) of when the subscription was created.",
              "children": []
            },
            {
              "name": "transport",
              "type": "Object",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The transport details used to send the notifications.",
              "children": [
                {
                  "name": "method",
                  "type": "String",
                  "possibleValues": [
                    "webhook",
                    "websocket"
                  ],
                  "required": null,
                  "depth": 2,
                  "description": "The transport method. Possible values are:   \n  \n* webhook\n* websocket",
                  "children": []
                },
                {
                  "name": "callback",
                  "type": "String",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "The callback URL where the notifications are sent. Included only if `method` is set to **webhook**.",
                  "children": []
                },
                {
                  "name": "session_id",
                  "type": "String",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "An ID that identifies the WebSocket that notifications are sent to. Included only if `method` is set to **websocket**.",
                  "children": []
                },
                {
                  "name": "connected_at",
                  "type": "String",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "The UTC date and time that the WebSocket connection was established. Included only if `method` is set to **websocket**.",
                  "children": []
                }
              ]
            },
            {
              "name": "cost",
              "type": "Integer",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The amount that the subscription counts against your limit. [Learn More](https://dev.twitch.tv/docs/eventsub/manage-subscriptions/#subscription-limits)",
              "children": []
            }
          ]
        },
        {
          "name": "total",
          "type": "Integer",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "The total number of subscriptions you’ve created.",
          "children": []
        },
        {
          "name": "total_cost",
          "type": "Integer",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "The sum of all of your subscription costs. [Learn More](https://dev.twitch.tv/docs/eventsub/manage-subscriptions/#subscription-limits)",
          "children": []
        },
        {
          "name": "max_total_cost",
          "type": "Integer",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "The maximum total cost that you’re allowed to incur for all subscriptions you create.",
          "children": []
        }
      ]
    },
    "responseCodes": [
      [
        "202 Accepted",
        "Successfully accepted the subscription request."
      ],
      [
        "400 Bad Request",
        "* The `condition` field is required.\n* The user specified in the `condition` object does not exist.\n* The `condition` object is missing one or more required fields.\n* The combination of values in the `version` and `type` fields is not valid.\n* The length of the string in the `secret` field is not valid.\n* The URL in the transport's `callback` field is not valid. The URL must use the HTTPS protocol and the 443 port number.\n* The value specified in the `method` field is not valid.\n* The `callback` field is required if you specify the webhook transport method."
      ],
      [
        "401 Unauthorized",
        "* The Authorization header is required and must specify an app access token.\n* The access token is not valid.\n* The ID in the Client-Id header must match the client ID in the access token."
      ],
      [
        "403 Forbidden",
        "* The subscription requires scopes that were not found in the client ID of the access token."
      ],
      [
        "409 Conflict",
        "* A subscription already exists for the specified event type and condition combination."
      ],
      [
        "429 Too Many Requests",
        "* The request exceeds the number of subscriptions that you may create with the same combination of `type` and `condition` values."
      ]
    ],
    "examples": "### Example Request\n\nAdds a user.update subscription.\n\n```\ncurl -X POST 'https://api.twitch.tv/helix/eventsub/subscriptions' \\\n-H 'Authorization: Bearer 2gbdx6oar67tqtcmt49t3wpcgycthx' \\\n-H 'Client-Id: wbmytr93xzw8zbg0p1izqyzzc5mbiz' \\\n-H 'Content-Type: application/json' \\\n-d '{\"type\":\"user.update\",\"version\":\"1\",\"condition\":{\"user_id\":\"1234\"},\"transport\":{\"method\":\"webhook\",\"callback\":\"https://this-is-a-callback.com\",\"secret\":\"s3cre7\"}}' \n\n```\n\n```\n# Twitch CLI example that adds a user.update subscription.\n\ntwitch api post /eventsub/subscriptions -b '{\"type\":\"user.update\",\"version\":\"1\",\"condition\":{\"user_id\":\"1234\"},\"transport\":{\"method\":\"webhook\",\"callback\":\"https://this-is-a-callback.com\",\"secret\":\"s3cre7\"}}'\n\n```\n\n### Example Response\n\n```\n\n{\n  \"data\": [\n    {\n      \"id\": \"26b1c993-bfcf-44d9-b876-379dacafe75a\",\n      \"status\": \"webhook_callback_verification_pending\",\n      \"type\": \"user.update\",\n      \"version\": \"1\",\n      \"condition\": {\n        \"user_id\": \"1234\"\n      },\n      \"created_at\": \"2020-11-10T14:32:18.730260295Z\",\n      \"transport\": {\n        \"method\": \"webhook\",\n        \"callback\": \"https://this-is-a-callback.com\"\n      },\n      \"cost\": 1\n    }\n  ],\n  \"total\": 1,\n  \"total_cost\": 1,\n  \"max_total_cost\": 10000\n}\n\n\n```"
  },
  {
    "id": "delete-eventsub-subscription",
    "name": "Delete EventSub Subscription",
    "resource": "EventSub",
    "description": "Deletes an EventSub subscription.",
    "descriptionFull": [
      "Deletes an EventSub subscription."
    ],
    "authentication": [
      "If you use [webhooks to receive events](https://dev.twitch.tv/docs/eventsub/handling-webhook-events), the request must specify an app access token. The request will fail if you use a user access token.",
      "If you use [WebSockets to receive events](https://dev.twitch.tv/docs/eventsub/handling-websocket-events), the request must specify a user access token. The request will fail if you use an app access token. The token may include any scopes."
    ],
    "authorization": [],
    "url": "https://api.twitch.tv/helix/eventsub/subscriptions",
    "method": "DELETE",
    "requestBody": {
      "description": [],
      "parameters": []
    },
    "requestQueryParams": {
      "description": [],
      "parameters": [
        {
          "name": "id",
          "type": "String",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "The ID of the subscription to delete.",
          "children": []
        }
      ]
    },
    "responseBody": {
      "description": [],
      "parameters": []
    },
    "responseCodes": [
      [
        "204 No Content",
        "Successfully deleted the subscription."
      ],
      [
        "400 Bad Request",
        "* The _id_ query parameter is required."
      ],
      [
        "401 Unauthorized",
        "* The Authorization header is required and must specify an app access token.\n* The access token is not valid.\n* The ID in the Client-Id header must match the client ID in the access token."
      ],
      [
        "404 Not Found",
        "* The subscription was not found."
      ]
    ],
    "examples": "### Example Request\n\nDeletes the specified EventSub subscription.\n\n```\ncurl -X DELETE\n'https://api.twitch.tv/helix/eventsub/subscriptions?id=26b1c993-bfcf-44d9-b876-379dacafe75a' \\\n-H 'Authorization: Bearer 2gbdx6oar67tqtcmt49t3wpcgycthx' \\\n-H 'Client-Id: wbmytr93xzw8zbg0p1izqyzzc5mbiz' \n\n```\n\n```\n# Twitch CLI example that deletes the specified subscription.\n\ntwitch api delete /eventsub/subscriptions -q id=c839a466-034a-4d77-8d4d-c9a751516e7\n\n```\n\n### Example Response\n\nThe response body is empty."
  },
  {
    "id": "get-eventsub-subscriptions",
    "name": "Get EventSub Subscriptions",
    "resource": "EventSub",
    "description": "Gets a list of EventSub subscriptions that the client in the access token created.",
    "descriptionFull": [
      "Gets a list of EventSub subscriptions that the client in the access token created."
    ],
    "authentication": [
      "If you use [webhooks to receive events](https://dev.twitch.tv/docs/eventsub/handling-webhook-events), the request must specify an app access token. The request will fail if you use a user access token.",
      "If you use [WebSockets to receive events](https://dev.twitch.tv/docs/eventsub/handling-websocket-events), the request must specify a user access token. The request will fail if you use an app access token. The token may include any scopes."
    ],
    "authorization": [],
    "url": "https://api.twitch.tv/helix/eventsub/subscriptions",
    "method": "GET",
    "requestBody": {
      "description": [],
      "parameters": []
    },
    "requestQueryParams": {
      "description": [
        "Use the _status_, _type_, and _user\\_id_ query parameters to filter the list of subscriptions that are returned. The filters are mutually exclusive; the request fails if you specify more than one filter."
      ],
      "parameters": [
        {
          "name": "status",
          "type": "String",
          "possibleValues": [
            "enabled",
            "webhook_callback_verification_pending",
            "webhook_callback_verification_failed",
            "notification_failures_exceeded",
            "authorization_revoked",
            "user_removed"
          ],
          "required": false,
          "depth": 0,
          "description": "Filter subscriptions by its status. Possible values are:   \n  \n* enabled — The subscription is enabled.\n* webhook\\_callback\\_verification\\_pending — The subscription is pending verification of the specified callback URL.\n* webhook\\_callback\\_verification\\_failed — The specified callback URL failed verification.\n* notification\\_failures\\_exceeded — The notification delivery failure rate was too high.\n* authorization\\_revoked — The authorization was revoked for one or more users specified in the **Condition** object.\n* user\\_removed — One of the users specified in the **Condition** object was removed.",
          "children": []
        },
        {
          "name": "type",
          "type": "String",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "Filter subscriptions by subscription type. For a list of subscription types, see [Subscription Types](https://dev.twitch.tv/docs/eventsub/eventsub-subscription-types#subscription-types).",
          "children": []
        },
        {
          "name": "user_id",
          "type": "String",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "Filter subscriptions by user ID. The response contains subscriptions where this ID matches a user ID that you specified in the **Condition** object when you [created the subscription](https://dev.twitch.tv/docs/api/reference#create-eventsub-subscription).",
          "children": []
        },
        {
          "name": "after",
          "type": "String",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "The cursor used to get the next page of results. The `pagination` object in the response contains the cursor’s value.",
          "children": []
        }
      ]
    },
    "responseBody": {
      "description": [],
      "parameters": [
        {
          "name": "data",
          "type": "Object[]",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "The list of subscriptions. The list is ordered by the oldest subscription first. The list is empty if the client hasn’t created subscriptions or there are no subscriptions that match the specified filter criteria.",
          "children": [
            {
              "name": "id",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "An ID that identifies the subscription.",
              "children": []
            },
            {
              "name": "status",
              "type": "String",
              "possibleValues": [
                "enabled",
                "webhook_callback_verification_pending",
                "webhook_callback_verification_failed",
                "notification_failures_exceeded",
                "authorization_revoked",
                "user_removed"
              ],
              "required": null,
              "depth": 1,
              "description": "The subscription’s status. Possible values are:   \n  \n* enabled — The subscription is enabled.\n* webhook\\_callback\\_verification\\_pending — The subscription is pending verification of the specified callback URL.\n* webhook\\_callback\\_verification\\_failed — The specified callback URL failed verification.\n* notification\\_failures\\_exceeded — The notification delivery failure rate was too high.\n* authorization\\_revoked — The authorization was revoked for one or more users specified in the **Condition** object.\n* user\\_removed — One of the users specified in the **Condition** object was removed.",
              "children": []
            },
            {
              "name": "type",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The subscription’s type. See [Subscription Types](https://dev.twitch.tv/docs/eventsub/eventsub-subscription-types#subscription-types).",
              "children": []
            },
            {
              "name": "version",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The version number that identifies this definition of the subscription’s data.",
              "children": []
            },
            {
              "name": "condition",
              "type": "Object",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The subscription’s parameter values. This is a string-encoded JSON object whose contents are determined by the subscription type.",
              "children": []
            },
            {
              "name": "created_at",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The date and time (in RFC3339 format) of when the subscription was created.",
              "children": []
            },
            {
              "name": "transport",
              "type": "Object",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The transport details used to send the notifications.",
              "children": [
                {
                  "name": "method",
                  "type": "String",
                  "possibleValues": [
                    "webhook",
                    "websocket"
                  ],
                  "required": null,
                  "depth": 2,
                  "description": "The transport method. Possible values are:   \n  \n* webhook\n* websocket",
                  "children": []
                },
                {
                  "name": "callback",
                  "type": "String",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "The callback URL where the notifications are sent. Included only if `method` is set to **webhook**.",
                  "children": []
                },
                {
                  "name": "session_id",
                  "type": "String",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "An ID that identifies the WebSocket that notifications are sent to. Included only if `method` is set to **websocket**.",
                  "children": []
                },
                {
                  "name": "connected_at",
                  "type": "String",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "The UTC date and time that the WebSocket connection was established. Included only if `method` is set to **websocket**.",
                  "children": []
                },
                {
                  "name": "disconnected_at",
                  "type": "String",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "The UTC date and time that the WebSocket connection was lost. Included only if `method` is set to **websocket**.",
                  "children": []
                }
              ]
            },
            {
              "name": "cost",
              "type": "Integer",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The amount that the subscription counts against your limit. [Learn More](https://dev.twitch.tv/docs/eventsub/manage-subscriptions/#subscription-limits)",
              "children": []
            }
          ]
        },
        {
          "name": "total",
          "type": "Integer",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "The total number of subscriptions that you’ve created.",
          "children": []
        },
        {
          "name": "total_cost",
          "type": "Integer",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "The sum of all of your subscription costs. [Learn More](https://dev.twitch.tv/docs/eventsub/manage-subscriptions/#subscription-limits)",
          "children": []
        },
        {
          "name": "max_total_cost",
          "type": "Integer",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "The maximum total cost that you’re allowed to incur for all subscriptions that you create.",
          "children": []
        },
        {
          "name": "pagination",
          "type": "Object",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "An object that contains the cursor used to get the next page of subscriptions. The object is empty if there are no more pages to get. The number of subscriptions returned per page is undertermined.",
          "children": [
            {
              "name": "cursor",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The cursor value that you set the _after_ query parameter to.",
              "children": []
            }
          ]
        }
      ]
    },
    "responseCodes": [
      [
        "200 OK",
        "Successfully retrieved the subscriptions."
      ],
      [
        "400 Bad Request",
        "* The request may specify only one filter query parameter. For example, either _type_ or _status_ or _user\\_id_.\n* The value in the _type_ query parameter is not valid.\n* The value in the _status_ query parameter is not valid.\n* The cursor specified in the _after_ query parameter is not valid."
      ],
      [
        "401 Unauthorized",
        "* The Authorization header is required and must specify an app access token.\n* The access token is not valid.\n* The ID in the Client-Id header must match the client ID in the access token."
      ]
    ],
    "examples": "### Example Request\n\nGets a list of EventSub subscriptions that you created. The list is ordered by the oldest subscription first.\n\n```\ncurl -X GET 'https://api.twitch.tv/helix/eventsub/subscriptions' \\\n-H 'Authorization: Bearer 2gbdx6oar67tqtcmt49t3wpcgycthx' \\\n-H 'Client-Id: wbmytr93xzw8zbg0p1izqyzzc5mbiz' \n\n```\n\n```\n# Twitch CLI example that gets a list of EventSub subscriptions that you created.\n\ntwitch api get /eventsub/subscriptions \n\n```\n\n### Example Response\n\n```\n{\n  \"total\": 2,\n  \"data\": [\n    {\n      \"id\": \"26b1c993-bfcf-44d9-b876-379dacafe75a\",\n      \"status\": \"enabled\",\n      \"type\": \"stream.online\",\n      \"version\": \"1\",\n      \"condition\": {\n        \"broadcaster_user_id\": \"1234\"\n      },\n      \"created_at\": \"2020-11-10T20:08:33.12345678Z\",\n      \"transport\": {\n        \"method\": \"webhook\",\n        \"callback\": \"https://this-is-a-callback.com\"\n      },\n      \"cost\": 1\n    },\n    {\n      \"id\": \"35016908-41ff-33ce-7879-61b8dfc2ee16\",\n      \"status\": \"webhook_callback_verification_pending\",\n      \"type\": \"user.update\",\n      \"version\": \"1\",\n      \"condition\": {\n        \"user_id\": \"1234\"\n      },\n      \"created_at\": \"2020-11-10T14:32:18.730260295Z\",\n      \"transport\": {\n        \"method\": \"webhook\",\n        \"callback\": \"https://this-is-a-callback.com\"\n      },\n      \"cost\": 0\n    }\n  ],\n  \"total_cost\": 1,\n  \"max_total_cost\": 10000,\n  \"pagination\": {}\n}\n\n```"
  },
  {
    "id": "get-top-games",
    "name": "Get Top Games",
    "resource": "Games",
    "description": "Gets information about all broadcasts on Twitch.",
    "descriptionFull": [
      "Gets information about all broadcasts on Twitch."
    ],
    "authentication": [
      "Requires an app access token or user access token."
    ],
    "authorization": [],
    "url": "https://api.twitch.tv/helix/games/top",
    "method": "GET",
    "requestBody": {
      "description": [],
      "parameters": []
    },
    "requestQueryParams": {
      "description": [],
      "parameters": [
        {
          "name": "first",
          "type": "Integer",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "The maximum number of items to return per page in the response. The minimum page size is 1 item per page and the maximum is 100 items per page. The default is 20.",
          "children": []
        },
        {
          "name": "after",
          "type": "String",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "The cursor used to get the next page of results. The **Pagination** object in the response contains the cursor’s value. [Read More](https://dev.twitch.tv/docs/api/guide#pagination)",
          "children": []
        },
        {
          "name": "before",
          "type": "String",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "The cursor used to get the previous page of results. The **Pagination** object in the response contains the cursor’s value. [Read More](https://dev.twitch.tv/docs/api/guide#pagination)",
          "children": []
        }
      ]
    },
    "responseBody": {
      "description": [],
      "parameters": [
        {
          "name": "data",
          "type": "Object[]",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "The list of broadcasts. The broadcasts are sorted by the number of viewers, with the most popular first.",
          "children": [
            {
              "name": "id",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "An ID that identifies the category or game.",
              "children": []
            },
            {
              "name": "name",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The category’s or game’s name.",
              "children": []
            },
            {
              "name": "box_art_url",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "A URL to the category’s or game’s box art. You must replace the `{width}x{height}` placeholder with the size of image you want.",
              "children": []
            }
          ]
        },
        {
          "name": "pagination",
          "type": "Object",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "Contains the information used to page through the list of results. The object is empty if there are no more pages left to page through. [Read More](https://dev.twitch.tv/docs/api/guide#pagination)",
          "children": [
            {
              "name": "cursor",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The cursor used to get the next page of results. Use the cursor to set the request’s _after_ or _before_ query parameter to get the next or previous page of results.",
              "children": []
            }
          ]
        }
      ]
    },
    "responseCodes": [
      [
        "200 OK",
        "Successfully retrieved the list of broadcasts."
      ],
      [
        "400 Bad Request",
        "* The value in the _first_ query parameter is not valid.\n* The cursor in the _after_ or _before_ query parameter is not valid."
      ],
      [
        "401 Unauthorized",
        "* The Authorization header is required and must specify an app access token or user access token.\n* The access token is not valid.\n* The ID in the Client-Id header must match the client ID in the access token."
      ]
    ],
    "examples": "### Example Request\n\n```\ncurl -X GET 'https://api.twitch.tv/helix/games/top' \\\n-H 'Authorization: Bearer cfabdegwdoklmawdzdo98xt2fo512y' \\\n-H 'Client-Id: uo6dggojyb8d6soh92zknwmi5ej1q2'\n\n```\n\n### Example Response\n\n```\n{\n  \"data\": [\n    {\n      \"id\": \"493057\",\n      \"name\": \"PLAYERUNKNOWN'S BATTLEGROUNDS\",\n      \"box_art_url\": \"https://static-cdn.jtvnw.net/ttv-boxart/PLAYERUNKNOWN%27S%20BATTLEGROUNDS-{width}x{height}.jpg\"\n    },\n    ...\n  ],\n  \"pagination\":{\"cursor\":\"eyJiIjpudWxsLCJhIjp7Ik9mZnNldCI6MjB9fQ==\"}\n}\n\n```"
  },
  {
    "id": "get-games",
    "name": "Get Games",
    "resource": "Games",
    "description": "Gets information about specified games.",
    "descriptionFull": [
      "Gets information about specified categories or games.",
      "You may get up to 100 categories or games by specifying their ID or name. You may specify all IDs, all names, or a combination of IDs and names. If you specify a combination of IDs and names, the total number of IDs and names must not exceed 100."
    ],
    "authentication": [
      "Requires an app access token or user access token."
    ],
    "authorization": [],
    "url": "https://api.twitch.tv/helix/games",
    "method": "GET",
    "requestBody": {
      "description": [],
      "parameters": []
    },
    "requestQueryParams": {
      "description": [],
      "parameters": [
        {
          "name": "id",
          "type": "String",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "The ID of the category or game to get. Include this parameter for each category or game you want to get. For example, `&id=1234&id=5678`. You may specify a maximum of 100 IDs. The endpoint ignores duplicate and invalid IDs or IDs that weren’t found.",
          "children": []
        },
        {
          "name": "name",
          "type": "String",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "The name of the category or game to get. The name must exactly match the category’s or game’s title. Include this parameter for each category or game you want to get. For example, `&name=foo&name=bar`. You may specify a maximum of 100 names. The endpoint ignores duplicate names and names that weren’t found.",
          "children": []
        }
      ]
    },
    "responseBody": {
      "description": [],
      "parameters": [
        {
          "name": "data",
          "type": "Object[]",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "The list of categories and games. The list is empty if the specified categories and games weren’t found.",
          "children": [
            {
              "name": "id",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "An ID that identifies the category or game.",
              "children": []
            },
            {
              "name": "name",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The category’s or game’s name.",
              "children": []
            },
            {
              "name": "box_art_url",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "A URL to the category’s or game’s box art. You must replace the `{width}x{height}` placeholder with the size of image you want.",
              "children": []
            }
          ]
        }
      ]
    },
    "responseCodes": [
      [
        "200 OK",
        "Successfully retrieved the specified games."
      ],
      [
        "400 Bad Request",
        "* The request must specify the _id_ and/or _name_ query parameter.\n* The combined number of game IDs and game names that you specify in the request must not exceed 100."
      ],
      [
        "401 Unauthorized",
        "* The Authorization header is required and must specify an app access token or user access token.\n* The access token is not valid.\n* The ID in the Client-Id header must match the client ID in the access token."
      ]
    ],
    "examples": "### Example Request\n\n```\ncurl -X GET 'https://api.twitch.tv/helix/games?id=33214' \\\n-H 'Authorization: Bearer cfabdegwdoklmawdzdo98xt2fo512y' \\\n-H 'Client-Id: uo6dggojyb8d6soh92zknwmi5ej1q2'\n\n```\n\n### Example Response\n\n```\n{\n  \"data\": [\n    {\n      \"id\": \"33214\",\n      \"name\": \"Fortnite\",\n      \"box_art_url\": \"https://static-cdn.jtvnw.net/ttv-boxart/33214-{width}x{height}.jpg\"\n    }\n    ...\n  ],\n  \"pagination\": {\n    \"cursor\": \"eyJiIjpudWxsLCJhIjp7IkN\"\n  }\n}\n\n```"
  },
  {
    "id": "get-creator-goals",
    "name": "Get Creator Goals",
    "resource": "Goals",
    "description": "Gets the broadcaster’s list of active goals.",
    "descriptionFull": [
      "Gets the broadcaster’s list of active goals. Use this endpoint to get the current progress of each goal.",
      "Instead of polling for the progress of a goal, consider [subscribing](https://dev.twitch.tv/docs/eventsub/manage-subscriptions) to receive notifications when a goal makes progress using the [channel.goal.progress](https://dev.twitch.tv/docs/eventsub/eventsub-subscription-types#channelgoalprogress) subscription type. [Read More](https://dev.twitch.tv/docs/api/goals#requesting-event-notifications)"
    ],
    "authentication": [],
    "authorization": [
      "Requires a user access token that includes the **channel:read:goals** scope."
    ],
    "url": "https://api.twitch.tv/helix/goals",
    "method": "GET",
    "requestBody": {
      "description": [],
      "parameters": []
    },
    "requestQueryParams": {
      "description": [],
      "parameters": [
        {
          "name": "broadcaster_id",
          "type": "String",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "The ID of the broadcaster that created the goals. This ID must match the user ID in the user access token.",
          "children": []
        }
      ]
    },
    "responseBody": {
      "description": [],
      "parameters": [
        {
          "name": "data",
          "type": "Object[]",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "The list of goals. The list is empty if the broadcaster hasn’t created goals.",
          "children": [
            {
              "name": "id",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "An ID that identifies this goal.",
              "children": []
            },
            {
              "name": "broadcaster_id",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "An ID that identifies the broadcaster that created the goal.",
              "children": []
            },
            {
              "name": "broadcaster_name",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The broadcaster’s display name.",
              "children": []
            },
            {
              "name": "broadcaster_login",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The broadcaster’s login name.",
              "children": []
            },
            {
              "name": "type",
              "type": "String",
              "possibleValues": [
                "follower",
                "subscription",
                "subscription_count",
                "new_subscription",
                "new_subscription_count"
              ],
              "required": null,
              "depth": 1,
              "description": "The type of goal. Possible values are:   \n  \n* follower — The goal is to increase followers.\n* subscription — The goal is to increase subscriptions. This type shows the net increase or decrease in tier points associated with the subscriptions.\n* subscription\\_count — The goal is to increase subscriptions. This type shows the net increase or decrease in the number of subscriptions.\n* new\\_subscription — The goal is to increase subscriptions. This type shows only the net increase in tier points associated with the subscriptions (it does not account for users that unsubscribed since the goal started).\n* new\\_subscription\\_count — The goal is to increase subscriptions. This type shows only the net increase in the number of subscriptions (it does not account for users that unsubscribed since the goal started).",
              "children": []
            },
            {
              "name": "description",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "A description of the goal. Is an empty string if not specified.",
              "children": []
            },
            {
              "name": "current_amount",
              "type": "Integer",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The goal’s current value.  \n  \nThe goal’s `type` determines how this value is increased or decreased.   \n  \n* If `type` is follower, this field is set to the broadcaster's current number of followers. This number increases with new followers and decreases when users unfollow the broadcaster.\n* If `type` is subscription, this field is increased and decreased by the points value associated with the subscription tier. For example, if a tier-two subscription is worth 2 points, this field is increased or decreased by 2, not 1.\n* If `type` is subscription\\_count, this field is increased by 1 for each new subscription and decreased by 1 for each user that unsubscribes.\n* If `type` is new\\_subscription, this field is increased by the points value associated with the subscription tier. For example, if a tier-two subscription is worth 2 points, this field is increased by 2, not 1.\n* If `type` is new\\_subscription\\_count, this field is increased by 1 for each new subscription.",
              "children": []
            },
            {
              "name": "target_amount",
              "type": "Integer",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The goal’s target value. For example, if the broadcaster has 200 followers before creating the goal, and their goal is to double that number, this field is set to 400.",
              "children": []
            },
            {
              "name": "created_at",
              "type": "string",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The UTC date and time (in RFC3339 format) that the broadcaster created the goal.",
              "children": []
            }
          ]
        }
      ]
    },
    "responseCodes": [
      [
        "200 OK",
        "Successfully retrieved the broadcaster’s goals."
      ],
      [
        "400 Bad Request",
        "* The _broadcaster\\_id_ query parameter is required."
      ],
      [
        "401 Unauthorized",
        "* The Authorization header is required and must contain a user access token.\n* The user access token must include the **channel:read:goals** scope.\n* The ID in _broadcaster\\_id_ must match the user ID in the user access token.\n* The access token is not valid.\n* The client ID specified in the Client-Id header does not match the client ID specified in the access token."
      ]
    ],
    "examples": "### Example Request\n\n```\ncurl -X GET 'https://api.twitch.tv/helix/goals?broadcaster_id=141981764' \\\n-H 'Authorization: Bearer cfabdegwdoklmawdzdo98xt2fo512y' \\\n-H 'Client-Id: uo6dggojyb8d6soh92zknwmi5ej1q2' \n\n```\n\n```\n# Twitch CLI example that gets the broadcaster's goals.\n\ntwitch api get /goals -q broadcaster_id=141981764 \n\n```\n\n### Example Response\n\n```\n{\n  \"data\": [\n    {\n      \"id\": \"1woowvbkiNv8BRxEWSqmQz6Zk92\",\n      \"broadcaster_id\": \"141981764\",\n      \"broadcaster_name\": \"TwitchDev\",\n      \"broadcaster_login\": \"twitchdev\",\n      \"type\": \"follower\",\n      \"description\": \"Follow goal for Helix testing\",\n      \"current_amount\": 27062,\n      \"target_amount\": 30000,\n      \"created_at\": \"2021-08-16T17:22:23Z\"\n    }\n  ]\n}\n\n```"
  },
  {
    "id": "get-hype-train-events",
    "name": "Get Hype Train Events",
    "resource": "Hype Train",
    "description": "Gets information about the broadcaster’s current or most recent Hype Train event.",
    "descriptionFull": [
      "Gets information about the broadcaster’s current or most recent Hype Train event.",
      "Instead of polling for events, consider [subscribing](https://dev.twitch.tv/docs/eventsub/manage-subscriptions) to Hype Train events ([Begin](https://dev.twitch.tv/docs/eventsub/eventsub-subscription-types#channelhype%5Ftrainbegin), [Progress](https://dev.twitch.tv/docs/eventsub/eventsub-subscription-types#channelhype%5Ftrainprogress), [End](https://dev.twitch.tv/docs/eventsub/eventsub-subscription-types#channelhype%5Ftrainend))."
    ],
    "authentication": [
      "Requires a user access token that includes the **channel:read:hype\\_train** scope."
    ],
    "authorization": [],
    "url": "https://api.twitch.tv/helix/hypetrain/events",
    "method": "GET",
    "requestBody": {
      "description": [],
      "parameters": []
    },
    "requestQueryParams": {
      "description": [],
      "parameters": [
        {
          "name": "broadcaster_id",
          "type": "String",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "The ID of the broadcaster that’s running the Hype Train. This ID must match the User ID in the user access token.",
          "children": []
        },
        {
          "name": "first",
          "type": "Integer",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "The maximum number of items to return per page in the response. The minimum page size is 1 item per page and the maximum is 100 items per page. The default is 1.",
          "children": []
        },
        {
          "name": "after",
          "type": "String",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "The cursor used to get the next page of results. The **Pagination** object in the response contains the cursor’s value. [Read More](https://dev.twitch.tv/docs/api/guide#pagination)",
          "children": []
        }
      ]
    },
    "responseBody": {
      "description": [],
      "parameters": [
        {
          "name": "data",
          "type": "Object[]",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "The list of Hype Train events. The list is empty if the broadcaster hasn’t run a Hype Train within the last 5 days.",
          "children": [
            {
              "name": "id",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "An ID that identifies this event.",
              "children": []
            },
            {
              "name": "event_type",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The type of event. The string is in the form, hypetrain.{event\\_name}. The request returns only progress event types (i.e., hypetrain.progression).",
              "children": []
            },
            {
              "name": "event_timestamp",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The UTC date and time (in RFC3339 format) that the event occurred.",
              "children": []
            },
            {
              "name": "version",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The version number of the definition of the event’s data. For example, the value is 1 if the data in `event_data` uses the first definition of the event’s data.",
              "children": []
            },
            {
              "name": "event_data",
              "type": "Object",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The event’s data.",
              "children": [
                {
                  "name": "broadcaster_id",
                  "type": "String",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "The ID of the broadcaster that’s running the Hype Train.",
                  "children": []
                },
                {
                  "name": "cooldown_end_time",
                  "type": "string",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "The UTC date and time (in RFC3339 format) that another Hype Train can start.",
                  "children": []
                },
                {
                  "name": "expires_at",
                  "type": "String",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "The UTC date and time (in RFC3339 format) that the Hype Train ends.",
                  "children": []
                },
                {
                  "name": "goal",
                  "type": "Integer",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "The value needed to reach the next level.",
                  "children": []
                },
                {
                  "name": "id",
                  "type": "String",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "An ID that identifies this Hype Train.",
                  "children": []
                },
                {
                  "name": "last_contribution",
                  "type": "Object",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "The most recent contribution towards the Hype Train’s goal.",
                  "children": []
                },
                {
                  "name": "level",
                  "type": "Integer",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "The highest level that the Hype Train reached (the levels are 1 through 5).",
                  "children": []
                },
                {
                  "name": "started_at",
                  "type": "String",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "The UTC date and time (in RFC3339 format) that this Hype Train started.",
                  "children": []
                },
                {
                  "name": "top_contributions",
                  "type": "Object[]",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "The top contributors for each contribution type. For example, the top contributor using BITS (by aggregate) and the top contributor using SUBS (by count).",
                  "children": []
                },
                {
                  "name": "total",
                  "type": "Integer",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "The current total amount raised.",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "name": "pagination",
          "type": "Object",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "Contains the information used to page through the list of results. The object is empty if there are no more pages left to page through. [Read More](https://dev.twitch.tv/docs/api/guide#pagination)",
          "children": [
            {
              "name": "cursor",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The cursor used to get the next page of results. Use the cursor to set the request’s _after_ query parameter.",
              "children": []
            }
          ]
        }
      ]
    },
    "responseCodes": [
      [
        "200 OK",
        "Successfully retrieved the broadcaster’s Hype Train events."
      ],
      [
        "401 Unauthorized",
        "* The ID in _broadcaster\\_id_ must match the user ID in the user access token.\n* The Authorization header is required and must contain a user access token.\n* The user access token must include the **channel:read:hype\\_train** scope.\n* The access token is not valid.\n* The client ID specified in the Client-Id header does not match the client ID specified in the access token."
      ]
    ],
    "examples": "### Example Request\n\n```\ncurl -X GET\n'https://api.twitch.tv/helix/hypetrain/events?broadcaster_id=270954519&first=1' \\\n-H 'Authorization: Bearer cfabdegwdoklmawdzdo98xt2fo512y' \\\n-H 'Client-Id: uo6dggojyb8d6soh92zknwmi5ej1q2'\n\n```\n\n### Example Response\n\n```\n{\n  \"data\": [\n    {\n      \"id\": \"1b0AsbInCHZW2SQFQkCzqN07Ib2\",\n      \"event_type\": \"hypetrain.progression\",\n      \"event_timestamp\": \"2020-04-24T20:07:24Z\",\n      \"version\": \"1.0\",\n      \"event_data\": {\n        \"broadcaster_id\": \"270954519\",\n        \"cooldown_end_time\": \"2020-04-24T20:13:21.003802269Z\",\n        \"expires_at\": \"2020-04-24T20:12:21.003802269Z\",\n        \"goal\": 1800,\n        \"id\": \"70f0c7d8-ff60-4c50-b138-f3a352833b50\",\n        \"last_contribution\": {\n          \"total\": 200,\n          \"type\": \"BITS\",\n          \"user\": \"134247454\"\n        },\n        \"level\": 2,\n        \"started_at\": \"2020-04-24T20:05:47.30473127Z\",\n        \"top_contributions\": [\n          {\n            \"total\": 600,\n            \"type\": \"BITS\",\n            \"user\": \"134247450\"\n          }\n        ],\n        \"total\": 600\n      }\n    }\n  ],\n  \"pagination\": {\n    \"cursor\": \"eyJiIjpudWxsLCJhIjp7IkN1cnNvciI6IjI3MDk1NDUxOToxNTg3NzU4ODQ0OjFiMEFzYkluQ0haVzJTUUZRa0N6cU4wN0liMiJ9fQ\"\n  }\n}\n\n```"
  },
  {
    "id": "check-automod-status",
    "name": "Check AutoMod Status",
    "resource": "Moderation",
    "description": "Checks whether AutoMod would flag the specified message for review.",
    "descriptionFull": [
      "Checks whether AutoMod would flag the specified message for review.",
      "AutoMod is a moderation tool that holds inappropriate or harassing chat messages for moderators to review. Moderators approve or deny the messages that AutoMod flags; only approved messages are released to chat. AutoMod detects misspellings and evasive language automatically. For information about AutoMod, see [How to Use AutoMod](https://help.twitch.tv/s/article/how-to-use-automod).",
      "**Rate Limits**: Rates are limited per channel based on the account type rather than per access token.",
      "| Account type | Limit per minute | Limit per hour |\n| - | - | - |\n| Normal | 5 | 50 |\n| Affiliate | 10 | 100 |\n| Partner | 30 | 300 |\n",
      "The above limits are in addition to the standard [Twitch API rate limits](https://dev.twitch.tv/docs/api/guide#twitch-rate-limits). The rate limit headers in the response represent the Twitch rate limits and not the above limits."
    ],
    "authentication": [],
    "authorization": [
      "Requires a user access token that includes the **moderation:read** scope."
    ],
    "url": "https://api.twitch.tv/helix/moderation/enforcements/status",
    "method": "POST",
    "requestBody": {
      "description": [],
      "parameters": [
        {
          "name": "data",
          "type": "Object[]",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "The list of messages to check. The list must contain at least one message and may contain up to a maximum of 100 messages.",
          "children": [
            {
              "name": "msg_id",
              "type": "String",
              "possibleValues": [],
              "required": true,
              "depth": 1,
              "description": "A caller-defined ID used to correlate this message with the same message in the response.",
              "children": []
            },
            {
              "name": "msg_text",
              "type": "String",
              "possibleValues": [],
              "required": true,
              "depth": 1,
              "description": "The message to check.",
              "children": []
            }
          ]
        }
      ]
    },
    "requestQueryParams": {
      "description": [],
      "parameters": [
        {
          "name": "broadcaster_id",
          "type": "String",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "The ID of the broadcaster whose AutoMod settings and list of blocked terms are used to check the message. This ID must match the user ID in the access token.",
          "children": []
        }
      ]
    },
    "responseBody": {
      "description": [],
      "parameters": [
        {
          "name": "data",
          "type": "Object[]",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "The list of messages and whether Twitch would approve them for chat.",
          "children": [
            {
              "name": "msg_id",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The caller-defined ID passed in the request.",
              "children": []
            },
            {
              "name": "is_permitted",
              "type": "Boolean",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "A Boolean value that indicates whether Twitch would approve the message for chat or hold it for moderator review or block it from chat. Is **true** if Twitch would approve the message; otherwise, **false** if Twitch would hold the message for moderator review or block it from chat.",
              "children": []
            }
          ]
        }
      ]
    },
    "responseCodes": [
      [
        "200 OK",
        "Successfully checked the messages."
      ],
      [
        "400 Bad Request",
        "* The _broadcaster\\_id_ query parameter is required.\n* The `data` field is required and the list must contain one or more messages to check.\n* The `msg_id` field is required.\n* The `msg_text` field is required."
      ],
      [
        "401 Unauthorized",
        "* The Authorization header is required and must contain a user access token.\n* The user access token must include the **moderation:read** scope.\n* The access token is not valid.\n* The client ID specified in the Client-Id header does not match the client ID specified in the access token."
      ],
      [
        "403 Forbidden",
        "* The ID in _broadcaster\\_id_ must match the user ID in the user access token."
      ],
      [
        "429 Too Many Requests",
        "* The broadcaster exceeded the number of chat message checks that they may make. See the endpoint's rate limits."
      ]
    ],
    "examples": "### Example Request\n\n```\ncurl -X POST 'https://api.twitch.tv/helix/moderation/enforcements/status?broadcaster_id=12345' \\\n-H 'Authorization: Bearer cfabdegwdoklmawdzdo98xt2fo512y' \\\n-H 'Client-Id: uo6dggojyb8d6soh92zknwmi5ej1q2' \\\n-H 'Content-Type: application/json' \\\n-d '{\n  \"data\": [\n    {\n      \"msg_id\": \"123\",\n      \"msg_text\": \"Hello World!\"\n    },\n    {\n      \"msg_id\": \"393\",\n      \"msg_text\": \"Boooooo!\"\n    }\n  ]\n}'\n\n```\n\n### Example Response\n\n```\n{\n  \"data\": [\n    {\n      \"msg_id\": \"123\",\n      \"is_permitted\": true\n    },\n    {\n      \"msg_id\": \"393\",\n      \"is_permitted\": false\n    }\n  ]\n}\n\n```"
  },
  {
    "id": "manage-held-automod-messages",
    "name": "Manage Held AutoMod Messages",
    "resource": "Moderation",
    "description": "Allow or deny the message that AutoMod flagged for review.",
    "descriptionFull": [
      "Allow or deny the message that AutoMod flagged for review. For information about AutoMod, see [How to Use AutoMod](https://help.twitch.tv/s/article/how-to-use-automod).",
      "To get messages that AutoMod is holding for review, subscribe to the **automod-queue.<moderator\\_id>.<channel\\_id>** [topic](https://dev.twitch.tv/docs/pubsub#topics) using [PubSub](https://dev.twitch.tv/docs/pubsub). PubSub sends a notification to your app when AutoMod holds a message for review."
    ],
    "authentication": [],
    "authorization": [
      "Requires a user access token that includes the **moderator:manage:automod** scope."
    ],
    "url": "https://api.twitch.tv/helix/moderation/automod/message",
    "method": "POST",
    "requestBody": {
      "description": [],
      "parameters": [
        {
          "name": "user_id",
          "type": "String",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "The moderator who is approving or denying the held message. This ID must match the user ID in the access token.",
          "children": []
        },
        {
          "name": "msg_id",
          "type": "String",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "The ID of the message to allow or deny.",
          "children": []
        },
        {
          "name": "action",
          "type": "String",
          "possibleValues": [
            "ALLOW",
            "DENY"
          ],
          "required": true,
          "depth": 0,
          "description": "The action to take for the message. Possible values are:  \n  \n* ALLOW\n* DENY",
          "children": []
        }
      ]
    },
    "requestQueryParams": {
      "description": [],
      "parameters": []
    },
    "responseBody": {
      "description": [],
      "parameters": []
    },
    "responseCodes": [
      [
        "204 No Content",
        "Successfully approved or denied the message."
      ],
      [
        "400 Bad Request",
        "* The value in the `action` field is not valid.\n* The `user_id` field is required.\n* The `msg_id` field is required.\n* The `action` field is required."
      ],
      [
        "401 Unauthorized",
        "* The ID in `user_id` must match the user ID in the user access token.\n* The Authorization header is required and must contain a user access token.\n* The user access token must include the **moderator:manage:automod** scope.\n* The access token is not valid.\n* The client ID specified in the Client-Id header does not match the client ID specified in the access token."
      ],
      [
        "403 Forbidden",
        "* The user in _user\\_id_ is not one of the broadcaster's moderators."
      ],
      [
        "404 Not Found",
        "* The message specified in the `msg_id` field was not found."
      ]
    ],
    "examples": "### Example Request\n\n```\ncurl -X POST 'https://api.twitch.tv/helix/moderation/automod/message' \\\n-H 'Authorization: Bearer cfabdegwdoklmawdzdo98xt2fo512y' \\\n-H 'Client-Id: uo6dggojyb8d6soh92zknwmi5ej1q2' \\\n-H 'Content-Type: application/json' \\\n-d '{\n  \"user_id\": \"9327994\",\n  \"msg_id\": \"836013710\",\n  \"action\": \"ALLOW\"\n}'\n\n```"
  },
  {
    "id": "get-automod-settings",
    "name": "Get AutoMod Settings",
    "resource": "Moderation",
    "description": "Gets the broadcaster’s AutoMod settings.",
    "descriptionFull": [
      "Gets the broadcaster’s AutoMod settings. The settings are used to automatically block inappropriate or harassing messages from appearing in the broadcaster’s chat room."
    ],
    "authentication": [],
    "authorization": [
      "Requires a user access token that includes the **moderator:read:automod\\_settings** scope."
    ],
    "url": "https://api.twitch.tv/helix/moderation/automod/settings",
    "method": "GET",
    "requestBody": {
      "description": [],
      "parameters": []
    },
    "requestQueryParams": {
      "description": [],
      "parameters": [
        {
          "name": "broadcaster_id",
          "type": "String",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "The ID of the broadcaster whose AutoMod settings you want to get.",
          "children": []
        },
        {
          "name": "moderator_id",
          "type": "String",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "The ID of the broadcaster or a user that has permission to moderate the broadcaster’s chat room. This ID must match the user ID in the user access token.",
          "children": []
        }
      ]
    },
    "responseBody": {
      "description": [],
      "parameters": [
        {
          "name": "data",
          "type": "Object[]",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "The list of AutoMod settings. The list contains a single object that contains all the AutoMod settings.",
          "children": [
            {
              "name": "broadcaster_id",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The broadcaster’s ID.",
              "children": []
            },
            {
              "name": "moderator_id",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The moderator’s ID.",
              "children": []
            },
            {
              "name": "overall_level",
              "type": "Integer",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The default AutoMod level for the broadcaster. This field is **null** if the broadcaster has set one or more of the individual settings.",
              "children": []
            },
            {
              "name": "disability",
              "type": "Integer",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The Automod level for discrimination against disability.",
              "children": []
            },
            {
              "name": "aggression",
              "type": "Integer",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The Automod level for hostility involving aggression.",
              "children": []
            },
            {
              "name": "sexuality_sex_or_gender",
              "type": "Integer",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The AutoMod level for discrimination based on sexuality, sex, or gender.",
              "children": []
            },
            {
              "name": "misogyny",
              "type": "Integer",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The Automod level for discrimination against women.",
              "children": []
            },
            {
              "name": "bullying",
              "type": "Integer",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The Automod level for hostility involving name calling or insults.",
              "children": []
            },
            {
              "name": "swearing",
              "type": "Integer",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The Automod level for profanity.",
              "children": []
            },
            {
              "name": "race_ethnicity_or_religion",
              "type": "Integer",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The Automod level for racial discrimination.",
              "children": []
            },
            {
              "name": "sex_based_terms",
              "type": "Integer",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The Automod level for sexual content.",
              "children": []
            }
          ]
        }
      ]
    },
    "responseCodes": [
      [
        "200 OK",
        "Successfully retrieved the broadcaster’s AutoMod settings."
      ],
      [
        "400 Bad Request",
        "* The _broadcaster\\_id_ query parameter is required.\n* The _moderator\\_id_ query parameter is required."
      ],
      [
        "401 Unauthorized",
        "* The ID in _moderator\\_id_ must match the user ID in the user access token.\n* The Authorization header is required and must contain a user access token.\n* The user access token must include the **moderator:read:automod\\_settings** scope.\n* The access token is not valid.\n* The client ID specified in the Client-Id header does not match the client ID specified in the access token."
      ],
      [
        "403 Forbidden",
        "* The user in _moderator\\_id_ is not one of the broadcaster's moderators."
      ]
    ],
    "examples": "### Example Request\n\nGets the broadcaster’s AutoMod settings.\n\n```\ncurl -X GET 'https://api.twitch.tv/helix/moderation/automod/settings?broadcaster_id=1234&moderator_id=5678' \\\n-H 'Authorization: Bearer 4a4x78f5wqvkybms7mxfist3jmzul' \\\n-H 'Client-Id: t214nt8z1rdtbj69hyarjvh5mi6fh'\n\n```\n\n### Example Response\n\nShows what the response looks like if the broadcaster hasn’t enabled AutoMod (none of the settings are set).\n\n```\n{\n  \"data\": [\n    {\n      \"broadcaster_id\": \"1234\",\n      \"moderator_id\": \"5678\",\n      \"overall_level\": null,\n      \"disability\": 0,\n      \"aggression\": 0,\n      \"sexuality_sex_or_gender\": 0,\n      \"misogyny\": 0,\n      \"bullying\": 0,\n      \"swearing\": 0,\n      \"race_ethnicity_or_religion\": 0,\n      \"sex_based_terms\": 0\n    }\n  ]\n}\n\n```"
  },
  {
    "id": "update-automod-settings",
    "name": "Update AutoMod Settings",
    "resource": "Moderation",
    "description": "Updates the broadcaster’s AutoMod settings.",
    "descriptionFull": [
      "Updates the broadcaster’s AutoMod settings. The settings are used to automatically block inappropriate or harassing messages from appearing in the broadcaster’s chat room."
    ],
    "authentication": [],
    "authorization": [
      "Requires a user access token that includes the **moderator:manage:automod\\_settings** scope."
    ],
    "url": "https://api.twitch.tv/helix/moderation/automod/settings",
    "method": "PUT",
    "requestBody": {
      "description": [
        "Because PUT is an overwrite operation, you must include all the fields that you want set after the operation completes. Typically, you’ll send a GET request, update the fields you want to change, and pass that object in the PUT request.",
        "You may set either `overall_level` or the individual settings like `aggression`, but not both.",
        "Setting `overall_level` applies default values to the individual settings. However, setting `overall_level` to 4 does not necessarily mean that it applies 4 to all the individual settings. Instead, it applies a set of recommended defaults to the rest of the settings. For example, if you set `overall_level` to 2, Twitch provides some filtering on discrimination and sexual content, but more filtering on hostility (see the first example response).",
        "If `overall_level` is currently set and you update `swearing` to 3, `overall_level` will be set to **null** and all settings other than `swearing` will be set to 0\\. The same is true if individual settings are set and you update `overall_level` to 3 — all the individual settings are updated to reflect the default level.",
        "Note that if you set all the individual settings to values that match what `overall_level` would have set them to, Twitch changes AutoMod to use the default AutoMod level instead of using the individual settings.",
        "Valid values for all levels are from 0 (no filtering) through 4 (most aggressive filtering). These levels affect how aggressively AutoMod holds back messages for moderators to review before they appear in chat or are denied (not shown)."
      ],
      "parameters": [
        {
          "name": "aggression",
          "type": "Integer",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "The Automod level for hostility involving aggression.",
          "children": []
        },
        {
          "name": "bullying",
          "type": "Integer",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "The Automod level for hostility involving name calling or insults.",
          "children": []
        },
        {
          "name": "disability",
          "type": "Integer",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "The Automod level for discrimination against disability.",
          "children": []
        },
        {
          "name": "misogyny",
          "type": "Integer",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "The Automod level for discrimination against women.",
          "children": []
        },
        {
          "name": "overall_level",
          "type": "Integer",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "The default AutoMod level for the broadcaster.",
          "children": []
        },
        {
          "name": "race_ethnicity_or_religion",
          "type": "Integer",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "The Automod level for racial discrimination.",
          "children": []
        },
        {
          "name": "sex_based_terms",
          "type": "Integer",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "The Automod level for sexual content.",
          "children": []
        },
        {
          "name": "sexuality_sex_or_gender",
          "type": "Integer",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "The AutoMod level for discrimination based on sexuality, sex, or gender.",
          "children": []
        },
        {
          "name": "swearing",
          "type": "Integer",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "The Automod level for profanity.",
          "children": []
        }
      ]
    },
    "requestQueryParams": {
      "description": [],
      "parameters": [
        {
          "name": "broadcaster_id",
          "type": "String",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "The ID of the broadcaster whose AutoMod settings you want to update.",
          "children": []
        },
        {
          "name": "moderator_id",
          "type": "String",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "The ID of the broadcaster or a user that has permission to moderate the broadcaster’s chat room. This ID must match the user ID in the user access token.",
          "children": []
        }
      ]
    },
    "responseBody": {
      "description": [],
      "parameters": [
        {
          "name": "data",
          "type": "Object[]",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "The list of AutoMod settings. The list contains a single object that contains all the AutoMod settings.",
          "children": [
            {
              "name": "broadcaster_id",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The broadcaster’s ID.",
              "children": []
            },
            {
              "name": "moderator_id",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The moderator’s ID.",
              "children": []
            },
            {
              "name": "overall_level",
              "type": "Integer",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The default AutoMod level for the broadcaster. This field is **null** if the broadcaster has set one or more of the individual settings.",
              "children": []
            },
            {
              "name": "disability",
              "type": "Integer",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The Automod level for discrimination against disability.",
              "children": []
            },
            {
              "name": "aggression",
              "type": "Integer",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The Automod level for hostility involving aggression.",
              "children": []
            },
            {
              "name": "sexuality_sex_or_gender",
              "type": "Integer",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The AutoMod level for discrimination based on sexuality, sex, or gender.",
              "children": []
            },
            {
              "name": "misogyny",
              "type": "Integer",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The Automod level for discrimination against women.",
              "children": []
            },
            {
              "name": "bullying",
              "type": "Integer",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The Automod level for hostility involving name calling or insults.",
              "children": []
            },
            {
              "name": "swearing",
              "type": "Integer",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The Automod level for profanity.",
              "children": []
            },
            {
              "name": "race_ethnicity_or_religion",
              "type": "Integer",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The Automod level for racial discrimination.",
              "children": []
            },
            {
              "name": "sex_based_terms",
              "type": "Integer",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The Automod level for sexual content.",
              "children": []
            }
          ]
        }
      ]
    },
    "responseCodes": [
      [
        "200 Ok",
        "Success."
      ],
      [
        "400 Bad Request",
        "* The _broadcaster\\_id_ is required.\n* The _moderator\\_id_ is required.\n* The `overall_level` setting or one or more individual settings like `aggression` is required; the overall and individual settings are mutually exclusive, so don't set both.\n* The value of one or more AutoMod settings is not valid."
      ],
      [
        "401 Unauthorized",
        "* The ID in _moderator\\_id_ must match the user ID in the user access token.\n* The Authorization header is required and must contain a user access token.\n* The user access token must include the **moderator:manage:automod\\_settings** scope.\n* The access token is not valid.\n* The client ID specified in the Client-Id header does not match the client ID specified in the access token."
      ],
      [
        "403 Forbidden",
        "* The user in _moderator\\_id_ is not one of the broadcaster's moderators."
      ]
    ],
    "examples": "### Example Request 1\n\nThis example updates the `overall_level` setting to 3.\n\n```\ncurl -X PUT 'https://api.twitch.tv/helix/moderation/automod/settings?broadcaster_id=1234&moderator_id=5678' \\\n-H 'Authorization: Bearer 4a4x78f5wqvkybms7mxfist3jmzul' \\\n-H 'Client-Id: t214nt8z1rdtbj69hyarjvh5mi6fh'\n​​-H 'Content-Type: application/json' \\\n-d '{\"overall_level\":3}'\n\n```\n\n### Example Response 1\n\nNotice in the response that not all settings are set to level 3.\n\n```\n{\n  \"data\": [\n    {\n      \"broadcaster_id\": \"1234\",\n      \"moderator_id\": \"5678\",\n      \"overall_level\": 3,\n      \"disability\": 3,\n      \"aggression\": 3,\n      \"sexuality_sex_or_gender\": 3,\n      \"misogyny\": 3,\n      \"bullying\": 2,\n      \"swearing\": 0,\n      \"race_ethnicity_or_religion\": 3,\n      \"sex_based_terms\": 3\n    }\n  ]\n}\n\n```\n\nIf `overall_level` is set to 3 and you try to change `swearing` to 2, all other settings are set to 0\\. If the goal was to change the `swearing` setting and leave all the others unchanged, the request must have included all the other settings as well.\n\n```\n{\n  \"data\": [\n    {\n      \"broadcaster_id\": \"1234\",\n      \"moderator_id\": \"5678\",\n      \"overall_level\": null,\n      \"disability\": 0,\n      \"aggression\": 0,\n      \"sexuality_sex_or_gender\": 0,\n      \"misogyny\": 0,\n      \"bullying\": 0,\n      \"swearing\": 2,\n      \"race_ethnicity_or_religion\": 0,\n      \"sex_based_terms\": 0\n    }\n  ]\n}\n\n```"
  },
  {
    "id": "get-banned-users",
    "name": "Get Banned Users",
    "resource": "Moderation",
    "description": "Gets all users that the broadcaster banned or put in a timeout.",
    "descriptionFull": [
      "Gets all users that the broadcaster banned or put in a timeout."
    ],
    "authentication": [
      "Requires a user access token that includes the **moderation:read** scope."
    ],
    "authorization": [],
    "url": "https://api.twitch.tv/helix/moderation/banned",
    "method": "GET",
    "requestBody": {
      "description": [],
      "parameters": []
    },
    "requestQueryParams": {
      "description": [],
      "parameters": [
        {
          "name": "broadcaster_id",
          "type": "String",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "The ID of the broadcaster whose list of banned users you want to get. This ID must match the user ID in the access token.",
          "children": []
        },
        {
          "name": "user_id",
          "type": "String",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "A list of user IDs used to filter the results. To specify more than one ID, include this parameter for each user you want to get. For example, `user_id=1234&user_id=5678`. You may specify a maximum of 100 IDs.  \n  \nThe returned list includes only those users that were banned or put in a timeout. The list is returned in the same order that you specified the IDs.",
          "children": []
        },
        {
          "name": "first",
          "type": "Integer",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "The maximum number of items to return per page in the response. The minimum page size is 1 item per page and the maximum is 100 items per page. The default is 20.",
          "children": []
        },
        {
          "name": "after",
          "type": "String",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "The cursor used to get the next page of results. The **Pagination** object in the response contains the cursor’s value. [Read More](https://dev.twitch.tv/docs/api/guide#pagination)",
          "children": []
        },
        {
          "name": "before",
          "type": "String",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "The cursor used to get the previous page of results. The **Pagination** object in the response contains the cursor’s value. [Read More](https://dev.twitch.tv/docs/api/guide#pagination)",
          "children": []
        }
      ]
    },
    "responseBody": {
      "description": [],
      "parameters": [
        {
          "name": "data",
          "type": "Object[]",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "The list of users that were banned or put in a timeout.",
          "children": [
            {
              "name": "user_id",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The ID of the banned user.",
              "children": []
            },
            {
              "name": "user_login",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The banned user’s login name.",
              "children": []
            },
            {
              "name": "user_name",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The banned user’s display name.",
              "children": []
            },
            {
              "name": "expires_at",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The UTC date and time (in RFC3339 format) of when the timeout expires, or an empty string if the user is permanently banned.",
              "children": []
            },
            {
              "name": "created_at",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The UTC date and time (in RFC3339 format) of when the user was banned.",
              "children": []
            },
            {
              "name": "reason",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The reason the user was banned or put in a timeout if the moderator provided one.",
              "children": []
            },
            {
              "name": "moderator_id",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The ID of the moderator that banned the user or put them in a timeout.",
              "children": []
            },
            {
              "name": "moderator_login",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The moderator’s login name.",
              "children": []
            },
            {
              "name": "moderator_name",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The moderator’s display name.",
              "children": []
            }
          ]
        },
        {
          "name": "pagination",
          "type": "Object",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "Contains the information used to page through the list of results. The object is empty if there are no more pages left to page through. [Read More](https://dev.twitch.tv/docs/api/guide#pagination)",
          "children": [
            {
              "name": "cursor",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The cursor used to get the next page of results. Use the cursor to set the request’s _after_ query parameter.",
              "children": []
            }
          ]
        }
      ]
    },
    "responseCodes": [
      [
        "200 OK",
        "Successfully retrieved the list of banned users."
      ],
      [
        "400 Bad Request",
        "* The _broadcaster\\_id_ query parameter is required."
      ],
      [
        "401 Unauthorized",
        "* The ID in _broadcaster\\_id_ must match the user ID in the user access token.\n* The Authorization header is required and must contain a user access token.\n* The user access token must include the **moderation:read** scope.\n* The access token is not valid.\n* The client ID specified in the Client-Id header does not match the client ID specified in the access token."
      ]
    ],
    "examples": "### Example Request\n\n```\ncurl -X GET 'https://api.twitch.tv/helix/moderation/banned?broadcaster_id=198704263' \\\n-H 'Authorization: Bearer cfabdegwdoklmawdzdo98xt2fo512y' \\\n-H 'Client-Id: uo6dggojyb8d6soh92zknwmi5ej1q2'\n\n```\n\n### Example Response\n\n```\n{\n  \"data\": [\n    {\n      \"user_id\": \"423374343\",\n      \"user_login\": \"glowillig\",\n      \"user_name\": \"glowillig\",\n      \"expires_at\": \"2022-03-15T02:00:28Z\",\n      \"created_at\": \"2022-03-15T01:30:28Z\",\n      \"reason\": \"Does not like pineapple on pizza.\",\n      \"moderator_id\": \"141981764\",\n      \"moderator_login\": \"twitchdev\",\n      \"moderator_name\": \"TwitchDev\"\n    },\n    {\n      \"user_id\": \"424596340\",\n      \"user_login\": \"quotrok\",\n      \"user_name\": \"quotrok\",\n      \"expires_at\": \"2022-08-07T02:07:55Z\",\n      \"created_at\": \"2022-08-07T02:02:55Z\",\n      \"reason\": \"Inappropriate words.\",\n      \"moderator_id\": \"141981764\",\n      \"moderator_login\": \"twitchdev\",\n      \"moderator_name\": \"TwitchDev\"\n    },\n    ...\n  ],\n  \"pagination\": {\n    \"cursor\": \"eyJiIjpudWxsLCJhIjp7IkN1cnNvciI6IjEwMDQ3MzA2NDo4NjQwNjU3MToxSVZCVDFKMnY5M1BTOXh3d1E0dUdXMkJOMFcifX0\"\n  }\n}\n\n```"
  },
  {
    "id": "ban-user",
    "name": "Ban User",
    "resource": "Moderation",
    "description": "Bans a user from participating in a broadcaster’s chat room or puts them in a timeout.",
    "descriptionFull": [
      "Bans a user from participating in the specified broadcaster’s chat room or puts them in a timeout.",
      "For information about banning or putting users in a timeout, see [Ban a User](https://help.twitch.tv/s/article/how-to-manage-harassment-in-chat#TheBanFeature) and [Timeout a User](https://help.twitch.tv/s/article/how-to-manage-harassment-in-chat#TheTimeoutFeature).",
      "If the user is currently in a timeout, you can call this endpoint to change the duration of the timeout or ban them altogether. If the user is currently banned, you cannot call this method to put them in a timeout instead.",
      "To remove a ban or end a timeout, see [Unban user](https://dev.twitch.tv/docs/api/reference#unban-user)."
    ],
    "authentication": [
      "Requires a user access token that includes the **moderator:manage:banned\\_users** scope."
    ],
    "authorization": [],
    "url": "https://api.twitch.tv/helix/moderation/bans",
    "method": "POST",
    "requestBody": {
      "description": [],
      "parameters": [
        {
          "name": "data",
          "type": "Object",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "Identifies the user and type of ban.",
          "children": [
            {
              "name": "user_id",
              "type": "String",
              "possibleValues": [],
              "required": true,
              "depth": 1,
              "description": "The ID of the user to ban or put in a timeout.",
              "children": []
            },
            {
              "name": "duration",
              "type": "Integer",
              "possibleValues": [],
              "required": false,
              "depth": 1,
              "description": "To ban a user indefinitely, don’t include this field.  \n  \nTo put a user in a timeout, include this field and specify the timeout period, in seconds. The minimum timeout is 1 second and the maximum is 1,209,600 seconds (2 weeks).  \n  \nTo end a user’s timeout early, set this field to 1, or use the [Unban user](https://dev.twitch.tv/docs/api/reference#unban-user) endpoint.",
              "children": []
            },
            {
              "name": "reason",
              "type": "String",
              "possibleValues": [],
              "required": false,
              "depth": 1,
              "description": "The reason the you’re banning the user or putting them in a timeout. The text is user defined and is limited to a maximum of 500 characters.",
              "children": []
            }
          ]
        }
      ]
    },
    "requestQueryParams": {
      "description": [],
      "parameters": [
        {
          "name": "broadcaster_id",
          "type": "String",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "The ID of the broadcaster whose chat room the user is being banned from.",
          "children": []
        },
        {
          "name": "moderator_id",
          "type": "String",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "The ID of the broadcaster or a user that has permission to moderate the broadcaster’s chat room. This ID must match the user ID in the user access token.",
          "children": []
        }
      ]
    },
    "responseBody": {
      "description": [],
      "parameters": [
        {
          "name": "data",
          "type": "Object[]",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "A list that contains the user you successfully banned or put in a timeout.",
          "children": [
            {
              "name": "broadcaster_id",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The broadcaster whose chat room the user was banned from chatting in.",
              "children": []
            },
            {
              "name": "moderator_id",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The moderator that banned or put the user in the timeout.",
              "children": []
            },
            {
              "name": "user_id",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The user that was banned or put in a timeout.",
              "children": []
            },
            {
              "name": "created_at",
              "type": "string",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The UTC date and time (in RFC3339 format) that the ban or timeout was placed.",
              "children": []
            },
            {
              "name": "end_time",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The UTC date and time (in RFC3339 format) that the timeout will end. Is **null** if the user was banned instead of being put in a timeout.",
              "children": []
            }
          ]
        }
      ]
    },
    "responseCodes": [
      [
        "200 OK",
        "Successfully banned the user or placed them in a timeout."
      ],
      [
        "400 Bad Request",
        "* The _broadcaster\\_id_ query parameter is required.\n* The _moderator\\_id_ query parameter is required.\n* The `user_id` field is required.\n* The text in the `reason` field is too long.\n* The value in the `duration` field is not valid.\n* The user specified in the `user_id` field may not be banned.\n* The user specified in the `user_id` field may not be put in a timeout.\n* The user specified in the `user_id` field is already banned."
      ],
      [
        "401 Unauthorized",
        "* The ID in _moderator\\_id_ must match the user ID in the access token.\n* The Authorization header is required and must contain a user access token.\n* The user access token must include the **moderator:manage:banned\\_users** scope.\n* The access token is not valid.\n* The client ID specified in the Client-Id header does not match the client ID specified in the access token."
      ],
      [
        "403 Forbidden",
        "* The user in _moderator\\_id_ is not one of the broadcaster's moderators."
      ],
      [
        "409 Conflict",
        "* You may not update the user's ban state while someone else is updating the state. For example, someone else is currently banning the user or putting them in a timeout, moving the user from a timeout to a ban, or removing the user from a ban or timeout. Please retry your request."
      ],
      [
        "429 Too Many Requests",
        "* The app has exceeded the number of requests it may make per minute for this broadcaster."
      ]
    ],
    "examples": "### Example Request 1\n\nBans a user (it doesn’t include the `duration` field).\n\n```\ncurl -X POST 'https://api.twitch.tv/helix/moderation/bans?broadcaster_id=1234&moderator_id=5678' \\\n-H 'Authorization: Bearer 4a4x78f5wqvkybms7mxfist3jmzul' \\\n-H 'Client-Id: t214nt8z1rdtbj69hyarjvh5mi6fh' \\\n-H 'Content-Type: application/json' \\\n-d '{\"data\": {\"user_id\":\"9876\",\"reason\":\"no reason\"}}'\n\n```\n\n### Example Response 1\n\n```\n{\n  \"data\": [\n    {\n      \"broadcaster_id\": \"1234\",\n      \"moderator_id\": \"5678\",\n      \"user_id\": \"9876\",\n      \"created_at\": \"2021-09-28T18:22:31Z\",\n      \"end_time\": null\n    }\n  ]\n}\n\n```\n\n### Example Request 2\n\nPuts a user in a 5-minute timeout.\n\n```\ncurl -X POST 'https://api.twitch.tv/helix/moderation/bans?broadcaster_id=1234&moderator_id=5678' \\\n-H 'Authorization: Bearer 4a4x78f5wqvkybms7mxfist3jmzul' \\\n-H 'Client-Id: t214nt8z1rdtbj69hyarjvh5mi6fh' \\\n-H 'Content-Type: application/json' \\\n-d '{\"data\": {\"user_id\":\"9876\",\"duration\":300,\"reason\":\"no reason\"}}'\n\n```\n\n### Example Response 2\n\n```\n{\n  \"data\": [\n    {\n      \"broadcaster_id\": \"1234\",\n      \"moderator_id\": \"5678\",\n      \"user_id\": \"9876\",\n      \"created_at\": \"2021-09-28T19:27:31Z\",\n      \"end_time\": \"2021-09-28T19:22:31Z\"\n    }\n  ]\n}\n\n```\n\n### Example Request 3\n\nShows what happens if you try to place a banned user in a timeout. You can ban a user that’s already in a timeout but you can’t move a banned user into a timeout. To do this, you’d have to remove the ban and then place them in a timeout.\n\nYou’ll get the same response if you try to ban a user who is already banned.\n\n```\ncurl -X POST 'https://api.twitch.tv/helix/moderation/bans?broadcaster_id=1234&moderator_id=5678' \\\n-H 'Authorization: Bearer 4a4x78f5wqvkybms7mxfist3jmzul' \\\n-H 'Client-Id: t214nt8z1rdtbj69hyarjvh5mi6fh' \\\n-H 'Content-Type: application/json' \\\n-d '{\"data\": {\"user_id\":\"9876\",\"duration\":300,\"reason\":\"no reason\"}}'\n\n```\n\n### Example Response 3\n\n```\n{ \n  \"error\": \"Bad Request\", \n  \"status\": 400, \n  \"message\": \"user is already banned\" \n}\n\n```"
  },
  {
    "id": "unban-user",
    "name": "Unban User",
    "resource": "Moderation",
    "description": "Removes the ban or timeout that was placed on the specified user.",
    "descriptionFull": [
      "Removes the ban or timeout that was placed on the specified user.",
      "To ban a user, see [Ban user](https://dev.twitch.tv/docs/api/reference#ban-user)."
    ],
    "authentication": [
      "Requires a user access token that includes the **moderator:manage:banned\\_users** scope."
    ],
    "authorization": [],
    "url": "https://api.twitch.tv/helix/moderation/bans",
    "method": "DELETE",
    "requestBody": {
      "description": [],
      "parameters": []
    },
    "requestQueryParams": {
      "description": [],
      "parameters": [
        {
          "name": "broadcaster_id",
          "type": "String",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "The ID of the broadcaster whose chat room the user is banned from chatting in.",
          "children": []
        },
        {
          "name": "moderator_id",
          "type": "String",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "The ID of the broadcaster or a user that has permission to moderate the broadcaster’s chat room. This ID must match the user ID in the user access token.",
          "children": []
        },
        {
          "name": "user_id",
          "type": "String",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "The ID of the user to remove the ban or timeout from.",
          "children": []
        }
      ]
    },
    "responseBody": {
      "description": [],
      "parameters": []
    },
    "responseCodes": [
      [
        "204 No Content",
        "Successfully removed the ban or timeout."
      ],
      [
        "400 Bad Request",
        "* The _broadcaster\\_id_ query parameter is required.\n* The _moderator\\_id_ query parameter is required.\n* The _user\\_id_ query parameter is required.\n* The user specified in the _user\\_id_ query parameter is not banned."
      ],
      [
        "401 Unauthorized",
        "* The ID in _moderator\\_id_ must match the user ID in the access token.\n* The Authorization header is required and must contain a user access token.\n* The user access token must include the **moderator:manage:banned\\_users** scope.\n* The access token is not valid.\n* The client ID specified in the Client-Id header does not match the client ID specified in the access token."
      ],
      [
        "403 Forbidden",
        "* The user in _moderator\\_id_ is not one of the broadcaster's moderators."
      ],
      [
        "409 Conflict",
        "* You may not update the user's ban state while someone else is updating the state. For example, someone else is currently removing the ban or timeout, or they're moving the user from a timeout to a ban. Please retry your request."
      ],
      [
        "429 Too Many Requests",
        "* The app has exceeded the number of requests it may make per minute for this broadcaster."
      ]
    ],
    "examples": "### Example Request 1\n\nRemoves a ban or timeout from a user.\n\n```\ncurl -X DELETE 'https://api.twitch.tv/helix/moderation/bans?broadcaster_id=1234&moderator_id=5678&user_id=9876' \\\n-H 'Authorization: Bearer 4a4x78f5wqvkybms7mxfist3jmzul' \\\n-H 'Client-Id: t214nt8z1rdtbj69hyarjvh5mi6fh'\n\n```\n\n### Example Request 2\n\nTries to remove a ban or timeout from a user that is not currently banned or in a timeout.\n\n```\ncurl -X DELETE 'https://api.twitch.tv/helix/moderation/bans?broadcaster_id=1234&moderator_id=5678&user_id=5432' \\\n-H 'Authorization: Bearer 4a4x78f5wqvkybms7mxfist3jmzul' \\\n-H 'Client-Id: t214nt8z1rdtbj69hyarjvh5mi6fh'\n\n```\n\n### Example Response 2\n\n```\n{ \n  \"error\": \"Bad Request\", \n  \"status\": 400, \n  \"message\": \"user is not banned\" \n}\n\n```"
  },
  {
    "id": "get-blocked-terms",
    "name": "Get Blocked Terms",
    "resource": "Moderation",
    "description": "Gets the broadcaster’s list of non-private, blocked words or phrases.",
    "descriptionFull": [
      "Gets the broadcaster’s list of non-private, blocked words or phrases. These are the terms that the broadcaster or moderator added manually or that were denied by AutoMod."
    ],
    "authentication": [],
    "authorization": [
      "Requires a user access token that includes the **moderator:read:blocked\\_terms** scope."
    ],
    "url": "https://api.twitch.tv/helix/moderation/blocked_terms",
    "method": "GET",
    "requestBody": {
      "description": [],
      "parameters": []
    },
    "requestQueryParams": {
      "description": [],
      "parameters": [
        {
          "name": "broadcaster_id",
          "type": "String",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "The ID of the broadcaster whose blocked terms you’re getting.",
          "children": []
        },
        {
          "name": "moderator_id",
          "type": "String",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "The ID of the broadcaster or a user that has permission to moderate the broadcaster’s chat room. This ID must match the user ID in the user access token.",
          "children": []
        },
        {
          "name": "first",
          "type": "Integer",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "The maximum number of items to return per page in the response. The minimum page size is 1 item per page and the maximum is 100 items per page. The default is 20.",
          "children": []
        },
        {
          "name": "after",
          "type": "String",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "The cursor used to get the next page of results. The **Pagination** object in the response contains the cursor’s value.",
          "children": []
        }
      ]
    },
    "responseBody": {
      "description": [],
      "parameters": [
        {
          "name": "data",
          "type": "Object[]",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "The list of blocked terms. The list is in descending order of when they were created (see the `created_at` timestamp).",
          "children": []
        },
        {
          "name": "pagination",
          "type": "Object",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "Contains the information used to page through the list of results. The object is empty if there are no more pages left to page through. [Read More](https://dev.twitch.tv/docs/api/guide#pagination)",
          "children": [
            {
              "name": "cursor",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The cursor used to get the next page of results. Use the cursor to set the request’s _after_ query parameter.",
              "children": []
            }
          ]
        }
      ]
    },
    "responseCodes": [
      [
        "200 OK",
        "Successfully retrieved the list of blocked terms."
      ],
      [
        "400 Bad Request",
        "* The _broadcaster\\_id_ query parameter is required.\n* The _moderator\\_id_ query parameter is required."
      ],
      [
        "401 Unauthorized",
        "* The ID in _moderator\\_id_ must match the user ID in the user access token.\n* The Authorization header must contain a user access token.\n* The user access token must include the **moderator:read:blocked\\_terms** scope.\n* The access token is not valid.\n* The client ID specified in the Client-Id header does not match the client ID specified in the access token."
      ],
      [
        "403 Forbidden",
        "* The user in _moderator\\_id_ is not one of the broadcaster's moderators."
      ]
    ],
    "examples": "### Example Request\n\nGets the last 10 blocked terms (see the _first_ query parameter) that were added.\n\n```\ncurl -X GET 'https://api.twitch.tv/helix/moderation/blocked_terms?broadcaster_id=1234&moderator_id=5678&first=10' \\\n-H 'Authorization: Bearer f4otqljtpbpg24v41v9gechs4yvwy' \\\n-H 'Client-Id: t214nt8z1rdtbj69hyarjvh5mi6fh'\n\n```\n\n### Example Response\n\n```\n{\n  \"data\": [\n    {\n      \"broadcaster_id\": \"1234\",\n      \"moderator_id\": \"5678\",\n      \"id\": \"520e4d4e-0cda-49c7-821e-e5ef4f88c2f2\",\n      \"text\": \"A phrase I’m not fond of\",\n      \"created_at\": \"2021-09-29T19:45:37Z\",\n      \"updated_at\": \"2021-09-29T19:45:37Z\",\n      \"expires_at\": null\n    },\n\n    . . .\n\n  ],\n  \"pagination\": {\n    \"cursor\": \"eyJiIjpudWxsLCJhIjp7IkN1cnNvciI6I...\"\n  }\n}\n\n```"
  },
  {
    "id": "add-blocked-term",
    "name": "Add Blocked Term",
    "resource": "Moderation",
    "description": "Adds a word or phrase to the broadcaster’s list of blocked terms.",
    "descriptionFull": [
      "Adds a word or phrase to the broadcaster’s list of blocked terms. These are the terms that the broadcaster doesn’t want used in their chat room."
    ],
    "authentication": [
      "Requires a user access token that includes the **moderator:manage:blocked\\_terms** scope."
    ],
    "authorization": [],
    "url": "https://api.twitch.tv/helix/moderation/blocked_terms",
    "method": "POST",
    "requestBody": {
      "description": [],
      "parameters": [
        {
          "name": "text",
          "type": "String",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "The word or phrase to block from being used in the broadcaster’s chat room. The term must contain a minimum of 2 characters and may contain up to a maximum of 500 characters.  \n  \nTerms may include a wildcard character (\\*). The wildcard character must appear at the beginning or end of a word or set of characters. For example, \\*foo or foo\\*.  \n  \nIf the blocked term already exists, the response contains the existing blocked term.",
          "children": []
        }
      ]
    },
    "requestQueryParams": {
      "description": [],
      "parameters": [
        {
          "name": "broadcaster_id",
          "type": "String",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "The ID of the broadcaster that owns the list of blocked terms.",
          "children": []
        },
        {
          "name": "moderator_id",
          "type": "String",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "The ID of the broadcaster or a user that has permission to moderate the broadcaster’s chat room. This ID must match the user ID in the user access token.",
          "children": []
        }
      ]
    },
    "responseBody": {
      "description": [],
      "parameters": [
        {
          "name": "data",
          "type": "Object[]",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "A list that contains the single blocked term that the broadcaster added.",
          "children": [
            {
              "name": "broadcaster_id",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The broadcaster that owns the list of blocked terms.",
              "children": []
            },
            {
              "name": "moderator_id",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The moderator that blocked the word or phrase from being used in the broadcaster’s chat room.",
              "children": []
            },
            {
              "name": "id",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "An ID that identifies this blocked term.",
              "children": []
            },
            {
              "name": "text",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The blocked word or phrase.",
              "children": []
            },
            {
              "name": "created_at",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The UTC date and time (in RFC3339 format) that the term was blocked.",
              "children": []
            },
            {
              "name": "updated_at",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The UTC date and time (in RFC3339 format) that the term was updated.  \n  \nWhen the term is added, this timestamp is the same as `created_at`. The timestamp changes as AutoMod continues to deny the term.",
              "children": []
            },
            {
              "name": "expires_at",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The UTC date and time (in RFC3339 format) that the blocked term is set to expire. After the block expires, users may use the term in the broadcaster’s chat room.  \n  \nThis field is **null** if the term was added manually or was permanently blocked by AutoMod.",
              "children": []
            }
          ]
        }
      ]
    },
    "responseCodes": [
      [
        "200 OK",
        "Successfully retrieved the list of blocked terms."
      ],
      [
        "400 Bad Request",
        "* The _broadcaster\\_id_ query parameter is required.\n* The _moderator\\_id_ query parameter is required.\n* The `text` field is required.\n* The length of the term in the `text` field is either too short or too long."
      ],
      [
        "401 Unauthorized",
        "* The ID in _moderator\\_id_ must match the user ID in the user access token.\n* The Authorization header is required and must contain a user access token.\n* The user access token must include the **moderator:manage:blocked\\_terms** scope.\n* The access token is not valid.\n* The client ID specified in the Client-Id header does not match the client ID specified in the access token."
      ],
      [
        "403 Forbidden",
        "* The user in _moderator\\_id_ is not one of the broadcaster's moderators."
      ]
    ],
    "examples": "### Example Request 1\n\nAdds a blocked term. Adding the same term again will return the previously added term.\n\n```\ncurl -X POST 'https://api.twitch.tv/helix/moderation/blocked_terms?broadcaster_id=1234&moderator_id=5678' \\\n-H 'Authorization: Bearer 789nj68b49pwqs9nh2y2jrlgzju3f' \\\n-H 'Client-Id: t214nt8z1rdtbj69hyarjvh5mi6fh' \\\n-H 'Content-Type: application/json' \\\n-d '{\"text\":\"A phrase I’m not fond of\"}'\n\n```\n\n### Example Response 1\n\n```\n{\n  \"data\": [\n    {\n      \"broadcaster_id\": \"713936733\",\n      \"moderator_id\": \"713936733\",\n      \"id\": \"3bb6e5d3-afb1-416c-ad4e-21af970ccfe7\",\n      \"text\": \"A phrase I’m not fond of\",\n      \"created_at\": \"2021-09-29T15:36:45Z\",\n      \"updated_at\": \"2021-09-29T15:36:45Z\",\n      \"expires_at\": null\n    }\n  ]\n}\n\n```\n\n### Example Request 2\n\nAdds a term that uses the wildcard character (\\*).\n\n```\ncurl -X POST 'https://api.twitch.tv/helix/moderation/blocked_terms?broadcaster_id=1234&moderator_id=5678' \\\n-H 'Authorization: Bearer 789nj68b49pwqs9nh2y2jrlgzju3f' \\\n-H 'Client-Id: t214nt8z1rdtbj69hyarjvh5mi6fh' \\\n-H 'Content-Type: application/json' \\\n-d '{\"text\":\"crac*\"}'\n\n```\n\n### Example Response 2\n\n```\n{\n  \"data\": [\n    {\n      \"broadcaster_id\": \"1234\",\n      \"moderator_id\": \"5678\",\n      \"id\": \"520e4d4e-0cda-49c7-821e-e5ef4f88c2f2\",\n      \"text\": \"crac*\",\n      \"created_at\": \"2021-09-29T19:45:37Z\",\n      \"updated_at\": \"2021-09-29T19:45:37Z\",\n      \"expires_at\": null\n    }\n  ]\n}\n\n```"
  },
  {
    "id": "remove-blocked-term",
    "name": "Remove Blocked Term",
    "resource": "Moderation",
    "description": "Removes the word or phrase from the broadcaster’s list of blocked terms.",
    "descriptionFull": [
      "Removes the word or phrase from the broadcaster’s list of blocked terms."
    ],
    "authentication": [
      "Requires a user access token that includes the **moderator:manage:blocked\\_terms** scope."
    ],
    "authorization": [],
    "url": "https://api.twitch.tv/helix/moderation/blocked_terms",
    "method": "DELETE",
    "requestBody": {
      "description": [],
      "parameters": []
    },
    "requestQueryParams": {
      "description": [],
      "parameters": [
        {
          "name": "broadcaster_id",
          "type": "String",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "The ID of the broadcaster that owns the list of blocked terms.",
          "children": []
        },
        {
          "name": "moderator_id",
          "type": "String",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "The ID of the broadcaster or a user that has permission to moderate the broadcaster’s chat room. This ID must match the user ID in the user access token.",
          "children": []
        },
        {
          "name": "id",
          "type": "String",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "The ID of the blocked term to remove from the broadcaster’s list of blocked terms.",
          "children": []
        }
      ]
    },
    "responseBody": {
      "description": [],
      "parameters": []
    },
    "responseCodes": [
      [
        "204 No Content",
        "Successfully removed the blocked term. Also returned if the ID is not found."
      ],
      [
        "400 Bad Request",
        "* The _broadcaster\\_id_ query parameter is required.\n* The _moderator\\_id_ query parameter is required.\n* The _id_ query parameter is required."
      ],
      [
        "401 Unauthorized",
        "* The ID in _moderator\\_id_ must match the user ID in the user access token.\n* The Authorization header is required and must contain a user access token.\n* The user access token must include the **moderator:manage:blocked\\_terms** scope.\n* The access token is not valid.\n* The client ID specified in the Client-Id header does not match the client ID specified in the access token."
      ],
      [
        "403 Forbidden",
        "* The user in _moderator\\_id_ is not one of the broadcaster's moderators."
      ]
    ],
    "examples": "### Example Request\n\nDeletes the specified blocked term.\n\n```\ncurl -X DELETE 'https://api.twitch.tv/helix/moderation/blocked_terms?broadcaster_id=1234&moderator_id=5678&id=c9fc79b8-0f63-4ef7-9d38-efd811e74ac2' \\ \n-H 'Authorization: Bearer f4otqljtpbpg24v41v9gechs4yvwy' \\\n-H 'Client-Id: t214nt8z1rdtbj69hyarjvh5mi6fh'\n\n```"
  },
  {
    "id": "delete-chat-messages",
    "name": "Delete Chat Messages",
    "resource": "Moderation",
    "description": "Removes a single chat message or all chat messages from the broadcaster’s chat room.",
    "descriptionFull": [
      "Removes a single chat message or all chat messages from the broadcaster’s chat room."
    ],
    "authentication": [
      "Requires a user access token that includes the **moderator:manage:chat\\_messages** scope."
    ],
    "authorization": [],
    "url": "https://api.twitch.tv/helix/moderation/chat",
    "method": "DELETE",
    "requestBody": {
      "description": [],
      "parameters": []
    },
    "requestQueryParams": {
      "description": [],
      "parameters": [
        {
          "name": "broadcaster_id",
          "type": "String",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "The ID of the broadcaster that owns the chat room to remove messages from.",
          "children": []
        },
        {
          "name": "moderator_id",
          "type": "String",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "The ID of the broadcaster or a user that has permission to moderate the broadcaster’s chat room. This ID must match the user ID in the user access token.",
          "children": []
        },
        {
          "name": "message_id",
          "type": "String",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "The ID of the message to remove. The `id` tag in the [PRIVMSG](https://dev.twitch.tv/docs/irc/tags#privmsg-tags) tag contains the message’s ID. Restrictions:  \n  \n* The message must have been created within the last 6 hours.\n* The message must not belong to the broadcaster.\n* The message must not belong to another moderator.\n  \nIf not specified, the request removes all messages in the broadcaster’s chat room.",
          "children": []
        }
      ]
    },
    "responseBody": {
      "description": [],
      "parameters": []
    },
    "responseCodes": [
      [
        "204 No Content",
        "Successfully removed the specified messages."
      ],
      [
        "400 Bad Request",
        "* You may not delete another moderator's messages.\n* You may not delete the broadcaster's messages."
      ],
      [
        "401 Unauthorized",
        "* The Authorization header is required and must contain a user access token.\n* The user access token is missing the **moderator:manage:chat\\_messages** scope.\n* The OAuth token is not valid.\n* The client ID specified in the Client-Id header does not match the client ID specified in the OAuth token."
      ],
      [
        "403 Forbidden",
        "* The user in _moderator\\_id_ is not one of the broadcaster's moderators."
      ],
      [
        "404 Not Found",
        "* The ID in _message\\_id_ was not found.\n* The specified message was created more than 6 hours ago."
      ]
    ],
    "examples": "### Example Request\n\nRemoves all messages from the broadcaster’s chat room (doesn’t include the _message\\_id_ query parameter).\n\n```\ncurl -X DELETE 'https://api.twitch.tv/helix/moderation/chat?broadcaster_id=11111&moderator_id=44444' \\\n-H 'Authorization: Bearer f4otqljtpbpg24v41v9gechs4yvwy' \\\n-H 'Client-Id: t214nt8z1rdtbj69hyarjvh5mi6fh'\n\n```\n\nRemoves the specified message from the broadcaster’s chat room.\n\n```\ncurl -X DELETE 'https://api.twitch.tv/helix/moderation/chat?broadcaster_id=11111&moderator_id=44444&message_id=abc-123-def' \\ \n-H 'Authorization: Bearer f4otqljtpbpg24v41v9gechs4yvwy' \\\n-H 'Client-Id: t214nt8z1rdtbj69hyarjvh5mi6fh'\n\n```"
  },
  {
    "id": "get-moderators",
    "name": "Get Moderators",
    "resource": "Moderation",
    "description": "Gets all users allowed to moderate the broadcaster’s chat room.",
    "descriptionFull": [
      "Gets all users allowed to moderate the broadcaster’s chat room."
    ],
    "authentication": [],
    "authorization": [
      "Requires a user access token that includes the **moderation:read** scope. If your app also adds and removes moderators, you can use the **channel:manage:moderators** scope instead."
    ],
    "url": "https://api.twitch.tv/helix/moderation/moderators",
    "method": "GET",
    "requestBody": {
      "description": [],
      "parameters": []
    },
    "requestQueryParams": {
      "description": [],
      "parameters": [
        {
          "name": "broadcaster_id",
          "type": "String",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "The ID of the broadcaster whose list of moderators you want to get. This ID must match the user ID in the access token.",
          "children": []
        },
        {
          "name": "user_id",
          "type": "String",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "A list of user IDs used to filter the results. To specify more than one ID, include this parameter for each moderator you want to get. For example, `user_id=1234&user_id=5678`. You may specify a maximum of 100 IDs.  \n  \nThe returned list includes only the users from the list who are moderators in the broadcaster’s channel. The list is returned in the same order as you specified the IDs.",
          "children": []
        },
        {
          "name": "first",
          "type": "String",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "The maximum number of items to return per page in the response. The minimum page size is 1 item per page and the maximum is 100 items per page. The default is 20.",
          "children": []
        },
        {
          "name": "after",
          "type": "String",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "The cursor used to get the next page of results. The **Pagination** object in the response contains the cursor’s value. [Read More](https://dev.twitch.tv/docs/api/guide#pagination)",
          "children": []
        }
      ]
    },
    "responseBody": {
      "description": [],
      "parameters": [
        {
          "name": "data",
          "type": "Object[]",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "The list of moderators.",
          "children": [
            {
              "name": "user_id",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The ID of the user that has permission to moderate the broadcaster’s channel.",
              "children": []
            },
            {
              "name": "user_login",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The user’s login name.",
              "children": []
            },
            {
              "name": "user_name",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The user’s display name.",
              "children": []
            }
          ]
        },
        {
          "name": "pagination",
          "type": "Object",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "Contains the information used to page through the list of results. The object is empty if there are no more pages left to page through. [Read More](https://dev.twitch.tv/docs/api/guide#pagination)",
          "children": [
            {
              "name": "cursor",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The cursor used to get the next page of results. Use the cursor to set the request’s _after_ query parameter.",
              "children": []
            }
          ]
        }
      ]
    },
    "responseCodes": [
      [
        "200 OK",
        "Successfully retrieved the list of moderators."
      ],
      [
        "400 Bad Request",
        "* The _broadcaster\\_id_ query parameter is required."
      ],
      [
        "401 Unauthorized",
        "* The ID in _broadcaster\\_id_ must match the user ID found in the access token.\n* The Authorization header is required and must contain a user access token.\n* The user access token must include the **moderation:read** scope.\n* The access token is not valid.\n* The client ID specified in the Client-Id header does not match the client ID specified in the access token."
      ]
    ],
    "examples": "### Example Request\n\n```\ncurl -X GET 'https://api.twitch.tv/helix/moderation/moderators?broadcaster_id=198704263' \\\n-H 'Authorization: Bearer cfabdegwdoklmawdzdo98xt2fo512y' \\\n-H 'Client-Id: uo6dggojyb8d6soh92zknwmi5ej1q2'\n\n```\n\n### Example Response\n\n```\n{\n  \"data\": [\n    {\n      \"user_id\": \"424596340\",\n      \"user_login\": \"quotrok\",\n      \"user_name\": \"quotrok\"\n    },\n    ...\n  ],\n  \"pagination\": {\n    \"cursor\": \"eyJiIjpudWxsLCJhIjp7IkN1cnNvciI6IjEwMDQ3MzA2NDo4NjQwNjU3MToxSVZCVDFKMnY5M1BTOXh3d1E0dUdXMkJOMFcifX0\"\n  }\n}\n\n```"
  },
  {
    "id": "add-channel-moderator",
    "name": "Add Channel Moderator",
    "resource": "Moderation",
    "description": "Adds a moderator to the broadcaster’s chat room.",
    "descriptionFull": [
      "Adds a moderator to the broadcaster’s chat room.",
      "**Rate Limits**: The broadcaster may add a maximum of 10 moderators within a 10-second window."
    ],
    "authentication": [],
    "authorization": [
      "Requires a user access token that includes the **channel:manage:moderators** scope."
    ],
    "url": "https://api.twitch.tv/helix/moderation/moderators",
    "method": "POST",
    "requestBody": {
      "description": [],
      "parameters": []
    },
    "requestQueryParams": {
      "description": [],
      "parameters": [
        {
          "name": "broadcaster_id",
          "type": "String",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "The ID of the broadcaster that owns the chat room. This ID must match the user ID in the access token.",
          "children": []
        },
        {
          "name": "user_id",
          "type": "String",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "The ID of the user to add as a moderator in the broadcaster’s chat room.",
          "children": []
        }
      ]
    },
    "responseBody": {
      "description": [],
      "parameters": []
    },
    "responseCodes": [
      [
        "204 No Content",
        "Successfully added the moderator."
      ],
      [
        "400 Bad Request",
        "* The ID in _broadcaster\\_id_ was not found.\n* The ID in _user\\_id_ was not found.\n* The user in _user\\_id_ is already a moderator in the broadcaster's chat room.\n* The user in _user\\_id_ cannot become a moderator because they're banned from the channel."
      ],
      [
        "401 Unauthorized",
        "* The Authorization header is required and must contain a user access token.\n* The user access token must include the **channel:manage:moderators** scope.\n* The access token is not valid.\n* The ID in the _broadcaster\\_id_ query parameter must match the user ID in the access token.\n* The client ID specified in the Client-Id header does not match the client ID specified in the access token."
      ],
      [
        "422 Unprocessable Entity",
        "* The user in _user\\_id_ is a VIP. To make them a moderator, you must first remove them as a VIP (see [Remove Channel VIP](https://dev.twitch.tv/docs/api/reference#remove-channel-vip))."
      ],
      [
        "429 Too Many Requests",
        "* The broadcaster has exceeded the number of requests allowed within a 10-second window. See this endpoint's rate limits."
      ]
    ],
    "examples": "### Example Request\n\n```\ncurl -X POST 'https://api.twitch.tv/helix/moderation/moderators?broadcaster_id=11111&user_id=44444' \\\n-H 'Authorization: Bearer kpvy3cjboyptmdkiacwr0c19hotn5s' \\\n-H 'Client-Id: hof5gwx0su6owfnys0nyan9c87zr6t'\n\n```"
  },
  {
    "id": "remove-channel-moderator",
    "name": "Remove Channel Moderator",
    "resource": "Moderation",
    "description": "Removes a moderator from the broadcaster’s chat room.",
    "descriptionFull": [
      "Removes a moderator from the broadcaster’s chat room.",
      "**Rate Limits**: The broadcaster may remove a maximum of 10 moderators within a 10-second window."
    ],
    "authentication": [],
    "authorization": [
      "Requires a user access token that includes the **channel:manage:moderators** scope."
    ],
    "url": "https://api.twitch.tv/helix/moderation/moderators",
    "method": "DELETE",
    "requestBody": {
      "description": [],
      "parameters": []
    },
    "requestQueryParams": {
      "description": [],
      "parameters": [
        {
          "name": "broadcaster_id",
          "type": "String",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "The ID of the broadcaster that owns the chat room. This ID must match the user ID in the access token.",
          "children": []
        },
        {
          "name": "user_id",
          "type": "String",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "The ID of the user to remove as a moderator from the broadcaster’s chat room.",
          "children": []
        }
      ]
    },
    "responseBody": {
      "description": [],
      "parameters": []
    },
    "responseCodes": [
      [
        "204 No Content",
        "Successfully removed the moderator."
      ],
      [
        "400 Bad Request",
        "* The ID in _broadcaster\\_id_ was not found.\n* The ID in _user\\_id_ was not found.\n* The user in _user\\_id_ is not a moderator in the broadcaster's chat room."
      ],
      [
        "401 Unauthorized",
        "* The Authorization header is required and must contain a user access token.\n* The user access token must include the **channel:manage:moderators** scope.\n* The access token is not valid.\n* The ID in the _broadcaster\\_id_ query parameter must match the user ID in the access token.\n* The client ID specified in the Client-Id header does not match the client ID specified in the access token."
      ],
      [
        "429 Too Many Requests",
        "* The broadcaster has exceeded the number of requests allowed within a 10-second window. See this endpoint's rate limits."
      ]
    ],
    "examples": "### Example Request\n\n```\ncurl -X DELETE 'https://api.twitch.tv/helix/moderation/moderators?broadcaster_id=11111&user_id=44444' \\\n-H 'Authorization: Bearer kpvy3cjboyptmdkiacwr0c19hotn5s' \\\n-H 'Client-Id: hof5gwx0su6owfnys0nyan9c87zr6t'\n\n```"
  },
  {
    "id": "get-vips",
    "name": "Get VIPs",
    "resource": "Moderation",
    "description": "Gets a list of the broadcaster’s VIPs.",
    "descriptionFull": [
      "Gets a list of the broadcaster’s VIPs."
    ],
    "authentication": [],
    "authorization": [
      "Requires a user access token that includes the **channel:read:vips** scope. If your app also adds and removes VIP status, you can use the **channel:manage:vips** scope instead."
    ],
    "url": "https://api.twitch.tv/helix/channels/vips",
    "method": "GET",
    "requestBody": {
      "description": [],
      "parameters": []
    },
    "requestQueryParams": {
      "description": [],
      "parameters": [
        {
          "name": "user_id",
          "type": "String",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "Filters the list for specific VIPs. To specify more than one user, include the _user\\_id_ parameter for each user to get. For example, `&user_id=1234&user_id=5678`. The maximum number of IDs that you may specify is 100\\. Ignores the ID of those users in the list that aren’t VIPs.",
          "children": []
        },
        {
          "name": "broadcaster_id",
          "type": "String",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "The ID of the broadcaster whose list of VIPs you want to get. This ID must match the user ID in the access token.",
          "children": []
        },
        {
          "name": "first",
          "type": "Integer",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "The maximum number of items to return per page in the response. The minimum page size is 1 item per page and the maximum is 100\\. The default is 20.",
          "children": []
        },
        {
          "name": "after",
          "type": "String",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "The cursor used to get the next page of results. The **Pagination** object in the response contains the cursor’s value. [Read More](https://dev.twitch.tv/docs/api/guide#pagination)",
          "children": []
        }
      ]
    },
    "responseBody": {
      "description": [],
      "parameters": [
        {
          "name": "data",
          "type": "Object[]",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "The list of VIPs. The list is empty if the broadcaster doesn’t have VIP users.",
          "children": [
            {
              "name": "user_id",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "An ID that uniquely identifies the VIP user.",
              "children": []
            },
            {
              "name": "user_name",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The user’s display name.",
              "children": []
            },
            {
              "name": "user_login",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The user’s login name.",
              "children": []
            }
          ]
        },
        {
          "name": "pagination",
          "type": "Object",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "Contains the information used to page through the list of results. The object is empty if there are no more pages left to page through. [Read More](https://dev.twitch.tv/docs/api/guide#pagination)",
          "children": [
            {
              "name": "cursor",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The cursor used to get the next page of results. Use the cursor to set the request’s _after_ query parameter.",
              "children": []
            }
          ]
        }
      ]
    },
    "responseCodes": [
      [
        "204No Content",
        "Successfully retrieved the broadcaster’s list of VIPs."
      ],
      [
        "400Bad Request",
        "* The _broadcaster\\_id_ query parameter is required.\n* The ID in the _user\\_id_ query parameter is not valid.\n* The number of _user\\_id_ query parameters exceeds the maximum allowed."
      ],
      [
        "401Unauthorized",
        "* The Authorization header is required and must contain a user access token.\n* The user access token must include the **channel:read:vips** or **channel:manage:vips** scope.\n* The OAuth token is not valid.\n* The ID in the _broadcaster\\_id_ query parameter must match the user ID in the access token.\n* The client ID specified in the Client-Id header does not match the client ID specified in the OAuth token."
      ]
    ],
    "examples": "### Example Request\n\nGets a list of the broadcaster’s VIPs\n\n```\ncurl -X GET 'https://api.twitch.tv/helix/channels/vips?broadcaster_id=123' \\\n-H 'Authorization: Bearer kpvy3cjboyptmdkiacwr0c19hotn5s' \\\n-H 'Client-Id: hof5gwx0su6owfnys0nyan9c87zr6t'\n\n```\n\nGets a filtered list of the broadcaster’s VIPs. The list in the response contains only those users that are VIPs.\n\n```\ncurl -X GET 'https://api.twitch.tv/helix/channels/vips?broadcaster_id=123&user_id=456&user_id=678' \\\n-H 'Authorization: Bearer kpvy3cjboyptmdkiacwr0c19hotn5s' \\\n-H 'Client-Id: hof5gwx0su6owfnys0nyan9c87zr6t'\n\n```\n\n### Example Request\n\n```\n{\n  \"data\": [\n    {\n      \"user_id\": \"11111\",\n      \"user_name\": \"UserDisplayName\",\n      \"user_login\": \"userloginname\"\n    },\n    ...\n  ],\n  \"pagination\": {\n    \"cursor\": \"eyJiIjpudWxsLCJhIjp7Ik9mZnNldCI6NX19\"\n  }\n}\n\n```"
  },
  {
    "id": "add-channel-vip",
    "name": "Add Channel VIP",
    "resource": "Moderation",
    "description": "Adds the specified user as a VIP in the broadcaster’s channel.",
    "descriptionFull": [
      "Adds the specified user as a VIP in the broadcaster’s channel.",
      "**Rate Limits**: The broadcaster may add a maximum of 10 VIPs within a 10-second window."
    ],
    "authentication": [],
    "authorization": [
      "Requires a user access token that includes the **channel:manage:vips** scope."
    ],
    "url": "https://api.twitch.tv/helix/channels/vips",
    "method": "POST",
    "requestBody": {
      "description": [],
      "parameters": []
    },
    "requestQueryParams": {
      "description": [],
      "parameters": [
        {
          "name": "user_id",
          "type": "String",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "The ID of the user to give VIP status to.",
          "children": []
        },
        {
          "name": "broadcaster_id",
          "type": "String",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "The ID of the broadcaster that’s adding the user as a VIP. This ID must match the user ID in the access token.",
          "children": []
        }
      ]
    },
    "responseBody": {
      "description": [
        "None"
      ],
      "parameters": []
    },
    "responseCodes": [
      [
        "204No Content",
        "Successfully added the VIP."
      ],
      [
        "400Bad Request",
        "* The user in the _user\\_id_ query parameter is blocked from the broadcaster's channel.\n* The ID in the _broadcaster\\_id_ query parameter is not valid.\n* The ID in the _user\\_id_ query parameter is not valid."
      ],
      [
        "401Unauthorized",
        "* The Authorization header is required and must contain a user access token.\n* The user access token must include the **channel:manage:vips** scope.\n* The OAuth token is not valid.\n* The ID in the _broadcaster\\_id_ query parameter must match the user ID in the access token.\n* The client ID specified in the Client-Id header does not match the client ID specified in the OAuth token."
      ],
      [
        "403Forbidden",
        "* The ID in the _broadcaster\\_id_ query parameter must match the user ID in the access token."
      ],
      [
        "404Not Found",
        "* The ID in _broadcaster\\_id_ was not found.\n* The ID in _user\\_id_ was not found."
      ],
      [
        "409Conflict",
        "The broadcaster doesn’t have available VIP slots. [Read More](https://help.twitch.tv/s/article/Managing-Roles-for-your-Channel?language=en%5FUS#types)"
      ],
      [
        "422Unprocessable Entity",
        "* The user in _user\\_id_ is a moderator. To make them a VIP, you must first remove them as a moderator (see [Remove Channel Moderator](https://dev.twitch.tv/docs/api/reference#remove-channel-moderator)).\n* The user in the _user\\_id_ query parameter is already a VIP."
      ],
      [
        "425Too Early",
        "The broadcaster must complete the Build a Community requirement before they may assign VIPs."
      ],
      [
        "429Too Many Requests",
        "The broadcaster exceeded the number of VIP that they may add within a 10-second window. See Rate Limits for this endpoint above."
      ]
    ],
    "examples": "### Example Request\n\nAdds a VIP to the broadcaster’s chat room.\n\n```\ncurl -X POST 'https://api.twitch.tv/helix/channels/vips?broadcaster_id=123&user_id=456' \\\n-H 'Authorization: Bearer kpvy3cjboyptmdkiacwr0c19hotn5s' \\\n-H 'Client-Id: hof5gwx0su6owfnys0nyan9c87zr6t'\n\n```"
  },
  {
    "id": "remove-channel-vip",
    "name": "Remove Channel VIP",
    "resource": "Moderation",
    "description": "Removes the specified user as a VIP in the broadcaster’s channel.",
    "descriptionFull": [
      "Removes the specified user as a VIP in the broadcaster’s channel.",
      "If the broadcaster is removing the user’s VIP status, the ID in the _broadcaster\\_id_ query parameter must match the user ID in the access token; otherwise, if the user is removing their VIP status themselves, the ID in the _user\\_id_ query parameter must match the user ID in the access token.",
      "**Rate Limits**: The broadcaster may remove a maximum of 10 VIPs within a 10-second window."
    ],
    "authentication": [],
    "authorization": [
      "Requires a user access token that includes the **channel:manage:vips** scope."
    ],
    "url": "https://api.twitch.tv/helix/channels/vips",
    "method": "DELETE",
    "requestBody": {
      "description": [],
      "parameters": []
    },
    "requestQueryParams": {
      "description": [],
      "parameters": [
        {
          "name": "user_id",
          "type": "String",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "The ID of the user to remove VIP status from.",
          "children": []
        },
        {
          "name": "broadcaster_id",
          "type": "String",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "The ID of the broadcaster who owns the channel where the user has VIP status.",
          "children": []
        }
      ]
    },
    "responseBody": {
      "description": [
        "None"
      ],
      "parameters": []
    },
    "responseCodes": [
      [
        "204No Content",
        "Successfully removed the VIP status from the user."
      ],
      [
        "400Bad Request",
        "* The ID in _broadcaster\\_id_ is not valid.\n* The ID in _user\\_id_ is not valid."
      ],
      [
        "401Unauthorized",
        "* The Authorization header is required and must contain a user access token.\n* The user access token must include the **channel:manage:vips** scope.\n* The OAuth token is not valid.\n* The ID in the _broadcaster\\_id_ query parameter must match the user ID in the access token.\n* The client ID specified in the Client-Id header does not match the client ID specified in the OAuth token."
      ],
      [
        "403Forbidden",
        "* The user in _broadcaster\\_id_ doesn't have permission to remove the user's VIP status."
      ],
      [
        "404Not Found",
        "* The ID in _broadcaster\\_id_ was not found.\n* The ID in _user\\_id_ was not found."
      ],
      [
        "422Unprocessable Entity",
        "* The user in _user\\_id_ is not a VIP in the broadcaster's channel."
      ],
      [
        "429Too Many Requests",
        "The broadcaster exceeded the number of VIPs that they may remove within a 10-second window. See Rate Limits for this endpoint above."
      ]
    ],
    "examples": "### Example Request\n\nRemoves the VIP user from the broadcaster’s channel.\n\n```\ncurl -X DELETE 'https://api.twitch.tv/helix/channels/vips?broadcaster_id=123&user_id=456' \\\n-H 'Authorization: Bearer kpvy3cjboyptmdkiacwr0c19hotn5s' \\\n-H 'Client-Id: hof5gwx0su6owfnys0nyan9c87zr6t'\n\n```"
  },
  {
    "id": "get-polls",
    "name": "Get Polls",
    "resource": "Polls",
    "description": "Gets a list of polls that the broadcaster created.",
    "descriptionFull": [
      "Gets a list of polls that the broadcaster created.",
      "Polls are available for 90 days after they’re created."
    ],
    "authentication": [],
    "authorization": [
      "Requires a user access token that includes the **channel:read:polls** scope."
    ],
    "url": "https://api.twitch.tv/helix/polls",
    "method": "GET",
    "requestBody": {
      "description": [],
      "parameters": []
    },
    "requestQueryParams": {
      "description": [],
      "parameters": [
        {
          "name": "broadcaster_id",
          "type": "String",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "The ID of the broadcaster that created the polls. This ID must match the user ID in the user access token.",
          "children": []
        },
        {
          "name": "id",
          "type": "String",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "A list of IDs that identify the polls to return. To specify more than one ID, include this parameter for each poll you want to get. For example, `id=1234&id=5678`. You may specify a maximum of 20 IDs.  \n  \nSpecify this parameter only if you want to filter the list that the request returns. The endpoint ignores duplicate IDs and those not owned by this broadcaster.",
          "children": []
        },
        {
          "name": "first",
          "type": "String",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "The maximum number of items to return per page in the response. The minimum page size is 1 item per page and the maximum is 20 items per page. The default is 20.",
          "children": []
        },
        {
          "name": "after",
          "type": "String",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "The cursor used to get the next page of results. The **Pagination** object in the response contains the cursor’s value. [Read More](https://dev.twitch.tv/docs/api/guide#pagination)",
          "children": []
        }
      ]
    },
    "responseBody": {
      "description": [],
      "parameters": [
        {
          "name": "data",
          "type": "Object[]",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "A list of polls. The polls are returned in descending order of start time unless you specify IDs in the request, in which case they’re returned in the same order as you passed them in the request. The list is empty if the broadcaster hasn’t created polls.",
          "children": [
            {
              "name": "id",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "An ID that identifies the poll.",
              "children": []
            },
            {
              "name": "broadcaster_id",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "An ID that identifies the broadcaster that created the poll.",
              "children": []
            },
            {
              "name": "broadcaster_name",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The broadcaster’s display name.",
              "children": []
            },
            {
              "name": "broadcaster_login",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The broadcaster’s login name.",
              "children": []
            },
            {
              "name": "title",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The question that viewers are voting on. For example, _What game should I play next?_ The title may contain a maximum of 60 characters.",
              "children": []
            },
            {
              "name": "choices",
              "type": "Object[]",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "A list of choices that viewers can choose from. The list will contain a minimum of two choices and up to a maximum of five choices.",
              "children": [
                {
                  "name": "id",
                  "type": "String",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "An ID that identifies this choice.",
                  "children": []
                },
                {
                  "name": "title",
                  "type": "String",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "The choice’s title. The title may contain a maximum of 25 characters.",
                  "children": []
                },
                {
                  "name": "votes",
                  "type": "Integer",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "The total number of votes cast for this choice.",
                  "children": []
                },
                {
                  "name": "channel_points_votes",
                  "type": "Integer",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "The number of votes cast using Channel Points.",
                  "children": []
                },
                {
                  "name": "bits_votes",
                  "type": "Integer",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "Not used; will be set to 0.",
                  "children": []
                }
              ]
            },
            {
              "name": "bits_voting_enabled",
              "type": "Boolean",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "Not used; will be set to **false**.",
              "children": []
            },
            {
              "name": "bits_per_vote",
              "type": "Integer",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "Not used; will be set to 0.",
              "children": []
            },
            {
              "name": "channel_points_voting_enabled",
              "type": "Boolean",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "A Boolean value that indicates whether viewers may cast additional votes using Channel Points. For information about Channel Points, see [Channel Points Guide](https://help.twitch.tv/s/article/channel-points-guide).",
              "children": []
            },
            {
              "name": "channel_points_per_vote",
              "type": "Integer",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The number of points the viewer must spend to cast one additional vote.",
              "children": []
            },
            {
              "name": "status",
              "type": "String",
              "possibleValues": [
                "ACTIVE",
                "COMPLETED",
                "TERMINATED",
                "ARCHIVED",
                "MODERATED",
                "INVALID"
              ],
              "required": null,
              "depth": 1,
              "description": "The poll’s status. Valid values are:  \n  \n* ACTIVE — The poll is running.\n* COMPLETED — The poll ended on schedule (see the `duration` field).\n* TERMINATED — The poll was terminated before its scheduled end.\n* ARCHIVED — The poll has been archived and is no longer visible on the channel.\n* MODERATED — The poll was deleted.\n* INVALID — Something went wrong while determining the state.",
              "children": []
            },
            {
              "name": "duration",
              "type": "Integer",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The length of time (in seconds) that the poll will run for.",
              "children": []
            },
            {
              "name": "started_at",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The UTC date and time (in RFC3339 format) of when the poll began.",
              "children": []
            },
            {
              "name": "ended_at",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The UTC date and time (in RFC3339 format) of when the poll ended. If `status` is ACTIVE, this field is set to **null**.",
              "children": []
            }
          ]
        },
        {
          "name": "pagination",
          "type": "Object",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "Contains the information used to page through the list of results. The object is empty if there are no more pages left to page through. [Read More](https://dev.twitch.tv/docs/api/guide#pagination)",
          "children": [
            {
              "name": "cursor",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The cursor used to get the next page of results. Use the cursor to set the request’s _after_ query parameter.",
              "children": []
            }
          ]
        }
      ]
    },
    "responseCodes": [
      [
        "200 OK",
        "Successfully retrieved the broadcaster’s polls."
      ],
      [
        "400 Bad Request",
        "* The _broadcaster\\_id_ query parameter is required."
      ],
      [
        "401 Unauthorized",
        "* The ID in _broadcaster\\_id_ must match the user ID in the access token.\n* The Authorization header is required and must contain a user access token.\n* The user access token is missing the **channel:read:polls** scope.\n* The access token is not valid.\n* The client ID specified in the Client-Id header must match the client ID specified in the access token."
      ],
      [
        "404 Not Found",
        "* None of the IDs in the _id_ query parameters were found."
      ]
    ],
    "examples": "### Example Request\n\nGets the specified broadcaster’s list of polls.\n\n```\ncurl -X GET 'https://api.twitch.tv/helix/polls?broadcaster_id=141981764&id=ed961efd-8a3f-4cf5-a9d0-e616c590cd2a' \\\n-H 'Authorization: Bearer cfabdegwdoklmawdzdo98xt2fo512y' \\\n-H 'Client-Id: uo6dggojyb8d6soh92zknwmi5ej1q2'\n\n```\n\n### Example Response\n\n```\n{\n  \"data\": [\n    {\n      \"id\": \"ed961efd-8a3f-4cf5-a9d0-e616c590cd2a\",\n      \"broadcaster_id\": \"55696719\",\n      \"broadcaster_name\": \"TwitchDev\",\n      \"broadcaster_login\": \"twitchdev\",\n      \"title\": \"Heads or Tails?\",\n      \"choices\": [\n        {\n          \"id\": \"4c123012-1351-4f33-84b7-43856e7a0f47\",\n          \"title\": \"Heads\",\n          \"votes\": 0,\n          \"channel_points_votes\": 0,\n          \"bits_votes\": 0\n        },\n        {\n          \"id\": \"279087e3-54a7-467e-bcd0-c1393fcea4f0\",\n          \"title\": \"Tails\",\n          \"votes\": 0,\n          \"channel_points_votes\": 0,\n          \"bits_votes\": 0\n        }\n      ],\n      \"bits_voting_enabled\": false,\n      \"bits_per_vote\": 0,\n      \"channel_points_voting_enabled\": false,\n      \"channel_points_per_vote\": 0,\n      \"status\": \"ACTIVE\",\n      \"duration\": 1800,\n      \"started_at\": \"2021-03-19T06:08:33.871278372Z\"\n    }\n  ],\n  \"pagination\": {}\n}\n\n```"
  },
  {
    "id": "create-poll",
    "name": "Create Poll",
    "resource": "Polls",
    "description": "Creates a poll that viewers in the broadcaster’s channel can vote on.",
    "descriptionFull": [
      "Creates a poll that viewers in the broadcaster’s channel can vote on.",
      "The poll begins as soon as it’s created. You may run only one poll at a time."
    ],
    "authentication": [],
    "authorization": [
      "Requires a user access token that includes the **channel:manage:polls** scope."
    ],
    "url": "https://api.twitch.tv/helix/polls",
    "method": "POST",
    "requestBody": {
      "description": [],
      "parameters": [
        {
          "name": "broadcaster_id",
          "type": "String",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "The ID of the broadcaster that’s running the poll. This ID must match the user ID in the user access token.",
          "children": []
        },
        {
          "name": "title",
          "type": "String",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "The question that viewers will vote on. For example, _What game should I play next?_ The question may contain a maximum of 60 characters.",
          "children": []
        },
        {
          "name": "choices",
          "type": "Object[]",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "A list of choices that viewers may choose from. The list must contain a minimum of 2 choices and up to a maximum of 5 choices.",
          "children": [
            {
              "name": "title",
              "type": "String",
              "possibleValues": [],
              "required": true,
              "depth": 1,
              "description": "One of the choices the viewer may select. The choice may contain a maximum of 25 characters.",
              "children": []
            }
          ]
        },
        {
          "name": "duration",
          "type": "Integer",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "The length of time (in seconds) that the poll will run for. The minimum is 15 seconds and the maximum is 1800 seconds (30 minutes).",
          "children": []
        },
        {
          "name": "channel_points_voting_enabled",
          "type": "Boolean",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "A Boolean value that indicates whether viewers may cast additional votes using Channel Points. If **true**, the viewer may cast more than one vote but each additional vote costs the number of Channel Points specified in `channel_points_per_vote`. The default is **false** (viewers may cast only one vote). For information about Channel Points, see [Channel Points Guide](https://help.twitch.tv/s/article/channel-points-guide).",
          "children": []
        },
        {
          "name": "channel_points_per_vote",
          "type": "Integer",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "The number of points that the viewer must spend to cast one additional vote. The minimum is 1 and the maximum is 1000000\\. Set only if `ChannelPointsVotingEnabled` is **true**.",
          "children": []
        }
      ]
    },
    "requestQueryParams": {
      "description": [],
      "parameters": []
    },
    "responseBody": {
      "description": [],
      "parameters": [
        {
          "name": "data",
          "type": "Object[]",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "A list that contains the single poll that you created.",
          "children": [
            {
              "name": "id",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "An ID that identifies the poll.",
              "children": []
            },
            {
              "name": "broadcaster_id",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "An ID that identifies the broadcaster that created the poll.",
              "children": []
            },
            {
              "name": "broadcaster_name",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The broadcaster’s display name.",
              "children": []
            },
            {
              "name": "broadcaster_login",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The broadcaster’s login name.",
              "children": []
            },
            {
              "name": "title",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The question that viewers are voting on. For example, _What game should I play next?_ The title may contain a maximum of 60 characters.",
              "children": []
            },
            {
              "name": "choices",
              "type": "Object[]",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "A list of choices that viewers can choose from. The list will contain a minimum of two choices and up to a maximum of five choices.",
              "children": [
                {
                  "name": "id",
                  "type": "String",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "An ID that identifies this choice.",
                  "children": []
                },
                {
                  "name": "title",
                  "type": "String",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "The choice’s title. The title may contain a maximum of 25 characters.",
                  "children": []
                },
                {
                  "name": "votes",
                  "type": "Integer",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "The total number of votes cast for this choice.",
                  "children": []
                },
                {
                  "name": "channel_points_votes",
                  "type": "Integer",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "The number of votes cast using Channel Points.",
                  "children": []
                },
                {
                  "name": "bits_votes",
                  "type": "Integer",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "Not used; will be set to 0.",
                  "children": []
                }
              ]
            },
            {
              "name": "bits_voting_enabled",
              "type": "Boolean",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "Not used; will be set to **false**.",
              "children": []
            },
            {
              "name": "bits_per_vote",
              "type": "Integer",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "Not used; will be set to 0.",
              "children": []
            },
            {
              "name": "channel_points_voting_enabled",
              "type": "Boolean",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "A Boolean value that indicates whether viewers may cast additional votes using Channel Points. For information about Channel Points, see [Channel Points Guide](https://help.twitch.tv/s/article/channel-points-guide).",
              "children": []
            },
            {
              "name": "channel_points_per_vote",
              "type": "Integer",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The number of points the viewer must spend to cast one additional vote.",
              "children": []
            },
            {
              "name": "status",
              "type": "String",
              "possibleValues": [
                "ACTIVE",
                "COMPLETED",
                "TERMINATED",
                "ARCHIVED",
                "MODERATED",
                "INVALID"
              ],
              "required": null,
              "depth": 1,
              "description": "The poll’s status. Valid values are:  \n  \n* ACTIVE — The poll is running.\n* COMPLETED — The poll ended on schedule (see the `duration` field).\n* TERMINATED — The poll was terminated before its scheduled end.\n* ARCHIVED — The poll has been archived and is no longer visible on the channel.\n* MODERATED — The poll was deleted.\n* INVALID — Something went wrong while determining the state.",
              "children": []
            },
            {
              "name": "duration",
              "type": "Integer",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The length of time (in seconds) that the poll will run for.",
              "children": []
            },
            {
              "name": "started_at",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The UTC date and time (in RFC3339 format) of when the poll began.",
              "children": []
            },
            {
              "name": "ended_at",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The UTC date and time (in RFC3339 format) of when the poll ended. If `status` is ACTIVE, this field is set to **null**.",
              "children": []
            }
          ]
        }
      ]
    },
    "responseCodes": [
      [
        "200 OK",
        "Successfully created the poll."
      ],
      [
        "400 Bad Request",
        "* The `broadcaster_id` field is required.\n* The `title` field is required.\n* The `choices` field is required.\n* The `duration` field is required.\n* The value in `duration` is outside the allowed range of values.\n* The value in `channel_points_per_vote` is outside the allowed range of values.\n* The value in `bits_per_vote` is outside the allowed range of values.\n* The poll's `title` is too long.\n* The choice's `title` is too long.\n* The number of choices in the poll may not be less than 2 or greater that 5.\n* The broadcaster already has a poll that's running; you may not create another poll until the current poll completes."
      ],
      [
        "401 Unauthorized",
        "* The ID in `broadcaster_id` must match the user ID in the access token.\n* The Authorization header is required and must contain a user access token.\n* The user access token is missing the **channel:manage:polls** scope.\n* The access token is not valid.\n* The client ID specified in the Client-Id header does not match the client ID specified in the access token."
      ]
    ],
    "examples": "### Example Request\n\nCreates a poll for the specified broadcaster.\n\n```\ncurl -X POST 'https://api.twitch.tv/helix/polls' \\\n-H 'Authorization: Bearer cfabdegwdoklmawdzdo98xt2fo512y' \\\n-H 'Client-Id: uo6dggojyb8d6soh92zknwmi5ej1q2' \\\n-H 'Content-Type: application/json' \\\n-d '{\n  \"broadcaster_id\":\"141981764\",\n  \"title\":\"Heads or Tails?\",\n  \"choices\":[{\n    \"title\":\"Heads\"\n  },\n  {\n    \"title\":\"Tails\"\n  }],\n  \"channel_points_voting_enabled\":true,\n  \"channel_points_per_vote\":100,\n  \"duration\":1800\n}'\n\n```\n\n### Example Response\n\n```\n{\n  \"data\": [\n    {\n      \"id\": \"ed961efd-8a3f-4cf5-a9d0-e616c590cd2a\",\n      \"broadcaster_id\": \"141981764\",\n      \"broadcaster_name\": \"TwitchDev\",\n      \"broadcaster_login\": \"twitchdev\",\n      \"title\": \"Heads or Tails?\",\n      \"choices\": [\n        {\n          \"id\": \"4c123012-1351-4f33-84b7-43856e7a0f47\",\n          \"title\": \"Heads\",\n          \"votes\": 0,\n          \"channel_points_votes\": 0,\n          \"bits_votes\": 0\n        },\n        {\n          \"id\": \"279087e3-54a7-467e-bcd0-c1393fcea4f0\",\n          \"title\": \"Tails\",\n          \"votes\": 0,\n          \"channel_points_votes\": 0,\n          \"bits_votes\": 0\n        }\n      ],\n      \"bits_voting_enabled\": false,\n      \"bits_per_vote\": 0,\n      \"channel_points_voting_enabled\": true,\n      \"channel_points_per_vote\": 100,\n      \"status\": \"ACTIVE\",\n      \"duration\": 1800,\n      \"started_at\": \"2021-03-19T06:08:33.871278372Z\"\n    }\n  ]\n}\n\n```"
  },
  {
    "id": "end-poll",
    "name": "End Poll",
    "resource": "Polls",
    "description": "End an active poll.",
    "descriptionFull": [
      "Ends an active poll. You have the option to end it or end it and archive it."
    ],
    "authentication": [],
    "authorization": [
      "Requires a user access token that includes the **channel:manage:polls** scope."
    ],
    "url": "https://api.twitch.tv/helix/polls",
    "method": "PATCH",
    "requestBody": {
      "description": [],
      "parameters": [
        {
          "name": "broadcaster_id",
          "type": "String",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "The ID of the broadcaster that’s running the poll. This ID must match the user ID in the user access token.",
          "children": []
        },
        {
          "name": "id",
          "type": "String",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "The ID of the poll to update.",
          "children": []
        },
        {
          "name": "status",
          "type": "String",
          "possibleValues": [
            "TERMINATED",
            "ARCHIVED"
          ],
          "required": true,
          "depth": 0,
          "description": "The status to set the poll to. Possible case-sensitive values are:  \n  \n* TERMINATED — Ends the poll before the poll is scheduled to end. The poll remains publicly visible.\n* ARCHIVED — Ends the poll before the poll is scheduled to end, and then archives it so it's no longer publicly visible.",
          "children": []
        }
      ]
    },
    "requestQueryParams": {
      "description": [],
      "parameters": []
    },
    "responseBody": {
      "description": [],
      "parameters": [
        {
          "name": "data",
          "type": "Object[]",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "A list that contains the poll that you ended.",
          "children": [
            {
              "name": "id",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "An ID that identifies the poll.",
              "children": []
            },
            {
              "name": "broadcaster_id",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "An ID that identifies the broadcaster that created the poll.",
              "children": []
            },
            {
              "name": "broadcaster_name",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The broadcaster’s display name.",
              "children": []
            },
            {
              "name": "broadcaster_login",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The broadcaster’s login name.",
              "children": []
            },
            {
              "name": "title",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The question that viewers are voting on. For example, _What game should I play next?_ The title may contain a maximum of 60 characters.",
              "children": []
            },
            {
              "name": "choices",
              "type": "Object[]",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "A list of choices that viewers can choose from. The list will contain a minimum of two choices and up to a maximum of five choices.",
              "children": [
                {
                  "name": "id",
                  "type": "String",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "An ID that identifies this choice.",
                  "children": []
                },
                {
                  "name": "title",
                  "type": "String",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "The choice’s title. The title may contain a maximum of 25 characters.",
                  "children": []
                },
                {
                  "name": "votes",
                  "type": "Integer",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "The total number of votes cast for this choice.",
                  "children": []
                },
                {
                  "name": "channel_points_votes",
                  "type": "Integer",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "The number of votes cast using Channel Points.",
                  "children": []
                },
                {
                  "name": "bits_votes",
                  "type": "Integer",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "Not used; will be set to 0.",
                  "children": []
                }
              ]
            },
            {
              "name": "bits_voting_enabled",
              "type": "Boolean",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "Not used; will be set to **false**.",
              "children": []
            },
            {
              "name": "bits_per_vote",
              "type": "Integer",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "Not used; will be set to 0.",
              "children": []
            },
            {
              "name": "channel_points_voting_enabled",
              "type": "Boolean",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "A Boolean value that indicates whether viewers may cast additional votes using Channel Points. For information about Channel Points, see [Channel Points Guide](https://help.twitch.tv/s/article/channel-points-guide).",
              "children": []
            },
            {
              "name": "channel_points_per_vote",
              "type": "Integer",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The number of points the viewer must spend to cast one additional vote.",
              "children": []
            },
            {
              "name": "status",
              "type": "String",
              "possibleValues": [
                "ACTIVE",
                "COMPLETED",
                "TERMINATED",
                "ARCHIVED",
                "MODERATED",
                "INVALID"
              ],
              "required": null,
              "depth": 1,
              "description": "The poll’s status. Valid values are:  \n  \n* ACTIVE — The poll is running.\n* COMPLETED — The poll ended on schedule (see the `duration` field).\n* TERMINATED — The poll was terminated before its scheduled end.\n* ARCHIVED — The poll has been archived and is no longer visible on the channel.\n* MODERATED — The poll was deleted.\n* INVALID — Something went wrong while determining the state.",
              "children": []
            },
            {
              "name": "duration",
              "type": "Integer",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The length of time (in seconds) that the poll will run for.",
              "children": []
            },
            {
              "name": "started_at",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The UTC date and time (in RFC3339 format) of when the poll began.",
              "children": []
            },
            {
              "name": "ended_at",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The UTC date and time (in RFC3339 format) of when the poll ended. If `status` is ACTIVE, this field is set to **null**.",
              "children": []
            }
          ]
        }
      ]
    },
    "responseCodes": [
      [
        "200 OK",
        "Successfully ended the poll."
      ],
      [
        "400 Bad Request",
        "* The `broadcaster_id` field is required.\n* The `id` field is required.\n* The `status` field is required.\n* The value in the `status` field is not valid.\n* The poll must be active to terminate or archive it."
      ],
      [
        "401 Unauthorized",
        "* The ID in `broadcaster_id` must match the user ID in the user access token.\n* The Authorization header is required and must contain a user access token.\n* The user access token must include the **channel:manage:polls** scope.\n* The access token is not valid.\n* The client ID specified in the Client-Id header must match the client ID specified in the access token."
      ]
    ],
    "examples": "### Example Request\n\nEnds the specific poll, but allows the results to be visible for viewers.\n\n```\ncurl -X PATCH 'https://api.twitch.tv/helix/polls' \\\n-H 'Authorization: Bearer cfabdegwdoklmawdzdo98xt2fo512y' \\\n-H 'Client-Id: uo6dggojyb8d6soh92zknwmi5ej1q2' \\\n-H 'Content-Type: application/json' \\\n-d '{\n  \"broadcaster_id\":\"141981764\",\n  \"id\":\"ed961efd-8a3f-4cf5-a9d0-e616c590cd2a\",\n  \"status\":\"TERMINATED\"\n}'\n\n```\n\n### Example Response\n\n```\n{\n  \"data\": [\n    {\n      \"id\": \"ed961efd-8a3f-4cf5-a9d0-e616c590cd2a\",\n      \"broadcaster_id\": \"141981764\",\n      \"broadcaster_name\": \"TwitchDev\",\n      \"broadcaster_login\": \"twitchdev\",\n      \"title\": \"Heads or Tails?\",\n      \"choices\": [\n        {\n          \"id\": \"4c123012-1351-4f33-84b7-43856e7a0f47\",\n          \"title\": \"Heads\",\n          \"votes\": 0,\n          \"channel_points_votes\": 0,\n          \"bits_votes\": 0\n        },\n        {\n          \"id\": \"279087e3-54a7-467e-bcd0-c1393fcea4f0\",\n          \"title\": \"Tails\",\n          \"votes\": 0,\n          \"channel_points_votes\": 0,\n          \"bits_votes\": 0\n        }\n      ],\n      \"bits_voting_enabled\": false,\n      \"bits_per_vote\": 0,\n      \"channel_points_voting_enabled\": true,\n      \"channel_points_per_vote\": 100,\n      \"status\": \"TERMINATED\",\n      \"duration\": 1800,\n      \"started_at\": \"2021-03-19T06:08:33.871278372Z\",\n      \"ended_at\": \"2021-03-19T06:11:26.746889614Z\"\n    }\n  ]\n}\n\n```"
  },
  {
    "id": "get-predictions",
    "name": "Get Predictions",
    "resource": "Predictions",
    "description": "Gets a list of Channel Points Predictions that the broadcaster created.",
    "descriptionFull": [
      "Gets a list of Channel Points Predictions that the broadcaster created."
    ],
    "authentication": [],
    "authorization": [
      "Requires a user access token that includes the **channel:read:predictions** scope."
    ],
    "url": "https://api.twitch.tv/helix/predictions",
    "method": "GET",
    "requestBody": {
      "description": [],
      "parameters": []
    },
    "requestQueryParams": {
      "description": [],
      "parameters": [
        {
          "name": "broadcaster_id",
          "type": "String",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "The ID of the broadcaster whose predictions you want to get. This ID must match the user ID associated with the user access token.",
          "children": []
        },
        {
          "name": "id",
          "type": "String",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "The ID of the prediction to get. To specify more than one ID, include this parameter for each prediction you want to get. For example, `id=1234&id=5678`. You may specify a maximum of 25 IDs. The endpoint ignores duplicate IDs and those not owned by the broadcaster.",
          "children": []
        },
        {
          "name": "first",
          "type": "String",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "The maximum number of items to return per page in the response. The minimum page size is 1 item per page and the maximum is 25 items per page. The default is 20.",
          "children": []
        },
        {
          "name": "after",
          "type": "String",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "The cursor used to get the next page of results. The **Pagination** object in the response contains the cursor’s value. [Read More](https://dev.twitch.tv/docs/api/guide#pagination)",
          "children": []
        }
      ]
    },
    "responseBody": {
      "description": [],
      "parameters": [
        {
          "name": "data",
          "type": "Object[]",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "The broadcaster’s list of Channel Points Predictions. The list is sorted in descending ordered by when the prediction began (the most recent prediction is first). The list is empty if the broadcaster hasn’t created predictions.",
          "children": [
            {
              "name": "id",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "An ID that identifies this prediction.",
              "children": []
            },
            {
              "name": "broadcaster_id",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "An ID that identifies the broadcaster that created the prediction.",
              "children": []
            },
            {
              "name": "broadcaster_name",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The broadcaster’s display name.",
              "children": []
            },
            {
              "name": "broadcaster_login",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The broadcaster’s login name.",
              "children": []
            },
            {
              "name": "title",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The question that the prediction asks. For example, _Will I finish this entire pizza?_",
              "children": []
            },
            {
              "name": "winning_outcome_id",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The ID of the winning outcome. Is **null** unless `status` is RESOLVED.",
              "children": []
            },
            {
              "name": "outcomes",
              "type": "Object[]",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The list of possible outcomes for the prediction.",
              "children": [
                {
                  "name": "id",
                  "type": "String",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "An ID that identifies this outcome.",
                  "children": []
                },
                {
                  "name": "title",
                  "type": "String",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "The outcome’s text.",
                  "children": []
                },
                {
                  "name": "users",
                  "type": "Integer",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "The number of unique viewers that chose this outcome.",
                  "children": []
                },
                {
                  "name": "channel_points",
                  "type": "Integer",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "The number of Channel Points spent by viewers on this outcome.",
                  "children": []
                },
                {
                  "name": "top_predictors",
                  "type": "Object[]",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "A list of viewers who were the top predictors; otherwise, **null** if none.",
                  "children": []
                },
                {
                  "name": "color",
                  "type": "String",
                  "possibleValues": [
                    "BLUE",
                    "PINK"
                  ],
                  "required": null,
                  "depth": 2,
                  "description": "The color that visually identifies this outcome in the UX. Possible values are:  \n  \n* BLUE\n* PINK\n  \nIf the number of outcomes is two, the color is BLUE for the first outcome and PINK for the second outcome. If there are more than two outcomes, the color is BLUE for all outcomes.",
                  "children": []
                }
              ]
            },
            {
              "name": "prediction_window",
              "type": "Integer",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The length of time (in seconds) that the prediction will run for.",
              "children": []
            },
            {
              "name": "status",
              "type": "String",
              "possibleValues": [
                "ACTIVE",
                "CANCELED",
                "LOCKED",
                "RESOLVED"
              ],
              "required": null,
              "depth": 1,
              "description": "The prediction’s status. Valid values are:  \n  \n* ACTIVE — The Prediction is running and viewers can make predictions.\n* CANCELED — The broadcaster canceled the Prediction and refunded the Channel Points to the participants.\n* LOCKED — The broadcaster locked the Prediction, which means viewers can no longer make predictions.\n* RESOLVED — The winning outcome was determined and the Channel Points were distributed to the viewers who predicted the correct outcome.",
              "children": []
            },
            {
              "name": "created_at",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The UTC date and time of when the Prediction began.",
              "children": []
            },
            {
              "name": "ended_at",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The UTC date and time of when the Prediction ended. If `status` is ACTIVE, this is set to **null**.",
              "children": []
            },
            {
              "name": "locked_at",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The UTC date and time of when the Prediction was locked. If `status` is not LOCKED, this is set to **null**.",
              "children": []
            }
          ]
        },
        {
          "name": "pagination",
          "type": "Object",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "Contains the information used to page through the list of results. The object is empty if there are no more pages left to page through. [Read More](https://dev.twitch.tv/docs/api/guide#pagination)",
          "children": [
            {
              "name": "cursor",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The cursor used to get the next page of results. Use the cursor to set the request’s _after_ query parameter.",
              "children": []
            }
          ]
        }
      ]
    },
    "responseCodes": [
      [
        "200 OK",
        "Successfully retrieved the list of predictions."
      ],
      [
        "400 Bad Request",
        "* The _broadcaster\\_id_ query parameter is required."
      ],
      [
        "401 Unauthorized",
        "* The ID in _broadcaster\\_id_ must match the user ID in the access token.\n* The Authorization header is required and must contain a user access token.\n* The user access token must include the **channel:read:predictions** scope.\n* The access token is not valid.\n* The client ID specified in the Client-Id header does not match the client ID specified in the access token."
      ]
    ],
    "examples": "### Example Request\n\nGets the specified broadcaster’s list of predictions.\n\n```\ncurl -X GET 'https://api.twitch.tv/helix/predictions?broadcaster_id=55696719&id=d6676d5c-c86e-44d2-bfc4-100fb48f0656' \\\n-H 'Authorization: Bearer cfabdegwdoklmawdzdo98xt2fo512y' \\\n-H 'Client-Id: uo6dggojyb8d6soh92zknwmi5ej1q2'\n\n```\n\n### Example Response\n\n```\n{\n  \"data\": [\n    {\n      \"id\": \"d6676d5c-c86e-44d2-bfc4-100fb48f0656\",\n      \"broadcaster_id\": \"55696719\",\n      \"broadcaster_name\": \"TwitchDev\",\n      \"broadcaster_login\": \"twitchdev\",\n      \"title\": \"Will there be any leaks today?\",\n      \"winning_outcome_id\": null,\n      \"outcomes\": [\n        {\n          \"id\": \"021e9234-5893-49b4-982e-cfe9a0aaddd9\",\n          \"title\": \"Yes\",\n          \"users\": 0,\n          \"channel_points\": 0,\n          \"top_predictors\": null,\n          \"color\": \"BLUE\"\n        },\n        {\n          \"id\": \"ded84c26-13cb-4b48-8cb5-5bae3ec3a66e\",\n          \"title\": \"No\",\n          \"users\": 0,\n          \"channel_points\": 0,\n          \"top_predictors\": null,\n          \"color\": \"PINK\"\n        }\n      ],\n      \"prediction_window\": 600,\n      \"status\": \"ACTIVE\",\n      \"created_at\": \"2021-04-28T16:03:06.320848689Z\",\n      \"ended_at\": null,\n      \"locked_at\": null\n    }\n  ],\n  \"pagination\": {}\n}\n\n```"
  },
  {
    "id": "create-prediction",
    "name": "Create Prediction",
    "resource": "Predictions",
    "description": "Create a Channel Points Prediction.",
    "descriptionFull": [
      "Creates a Channel Points Prediction.",
      "With a Channel Points Prediction, the broadcaster poses a question and viewers try to predict the outcome. The prediction runs as soon as it’s created. The broadcaster may run only one prediction at a time."
    ],
    "authentication": [],
    "authorization": [
      "Requires a user access token that includes the **channel:manage:predictions** scope."
    ],
    "url": "https://api.twitch.tv/helix/predictions",
    "method": "POST",
    "requestBody": {
      "description": [],
      "parameters": [
        {
          "name": "broadcaster_id",
          "type": "String",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "The ID of the broadcaster that’s running the prediction. This ID must match the user ID in the user access token.",
          "children": []
        },
        {
          "name": "title",
          "type": "String",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "The question that the broadcaster is asking. For example, _Will I finish this entire pizza?_ The title is limited to a maximum of 45 characters.",
          "children": []
        },
        {
          "name": "outcomes",
          "type": "Object[]",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "The list of possible outcomes that the viewers may choose from. The list must contain a minimum of 2 choices and up to a maximum of 10 choices.",
          "children": [
            {
              "name": "title",
              "type": "String",
              "possibleValues": [],
              "required": true,
              "depth": 1,
              "description": "The text of one of the outcomes that the viewer may select. The title is limited to a maximum of 25 characters.",
              "children": []
            }
          ]
        },
        {
          "name": "prediction_window",
          "type": "Integer",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "The length of time (in seconds) that the prediction will run for. The minimum is 30 seconds and the maximum is 1800 seconds (30 minutes).",
          "children": []
        }
      ]
    },
    "requestQueryParams": {
      "description": [],
      "parameters": []
    },
    "responseBody": {
      "description": [],
      "parameters": [
        {
          "name": "data",
          "type": "Object[]",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "A list that contains the single prediction that you created.",
          "children": [
            {
              "name": "id",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "An ID that identifies this prediction.",
              "children": []
            },
            {
              "name": "broadcaster_id",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "An ID that identifies the broadcaster that created the prediction.",
              "children": []
            },
            {
              "name": "broadcaster_name",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The broadcaster’s display name.",
              "children": []
            },
            {
              "name": "broadcaster_login",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The broadcaster’s login name.",
              "children": []
            },
            {
              "name": "title",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The question that the prediction asks. For example, _Will I finish this entire pizza?_",
              "children": []
            },
            {
              "name": "winning_outcome_id",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The ID of the winning outcome. Is **null** unless `status` is RESOLVED.",
              "children": []
            },
            {
              "name": "outcomes",
              "type": "Object[]",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The list of possible outcomes for the prediction.",
              "children": [
                {
                  "name": "id",
                  "type": "String",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "An ID that identifies this outcome.",
                  "children": []
                },
                {
                  "name": "title",
                  "type": "String",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "The outcome’s text.",
                  "children": []
                },
                {
                  "name": "users",
                  "type": "Integer",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "The number of unique viewers that chose this outcome.",
                  "children": []
                },
                {
                  "name": "channel_points",
                  "type": "Integer",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "The number of Channel Points spent by viewers on this outcome.",
                  "children": []
                },
                {
                  "name": "top_predictors",
                  "type": "Object[]",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "A list of viewers who were the top predictors; otherwise, **null** if none.",
                  "children": []
                },
                {
                  "name": "color",
                  "type": "String",
                  "possibleValues": [
                    "BLUE",
                    "PINK"
                  ],
                  "required": null,
                  "depth": 2,
                  "description": "The color that visually identifies this outcome in the UX. Possible values are:  \n  \n* BLUE\n* PINK\n  \nIf the number of outcomes is two, the color is BLUE for the first outcome and PINK for the second outcome. If there are more than two outcomes, the color is BLUE for all outcomes.",
                  "children": []
                }
              ]
            },
            {
              "name": "prediction_window",
              "type": "Integer",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The length of time (in seconds) that the prediction will run for.",
              "children": []
            },
            {
              "name": "status",
              "type": "String",
              "possibleValues": [
                "ACTIVE",
                "CANCELED",
                "LOCKED",
                "RESOLVED"
              ],
              "required": null,
              "depth": 1,
              "description": "The prediction’s status. Valid values are:  \n  \n* ACTIVE — The Prediction is running and viewers can make predictions.\n* CANCELED — The broadcaster canceled the Prediction and refunded the Channel Points to the participants.\n* LOCKED — The broadcaster locked the Prediction, which means viewers can no longer make predictions.\n* RESOLVED — The winning outcome was determined and the Channel Points were distributed to the viewers who predicted the correct outcome.",
              "children": []
            },
            {
              "name": "created_at",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The UTC date and time of when the Prediction began.",
              "children": []
            },
            {
              "name": "ended_at",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The UTC date and time of when the Prediction ended. If `status` is ACTIVE, this is set to **null**.",
              "children": []
            },
            {
              "name": "locked_at",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The UTC date and time of when the Prediction was locked. If `status` is not LOCKED, this is set to **null**.",
              "children": []
            }
          ]
        }
      ]
    },
    "responseCodes": [
      [
        "200 OK",
        "Successfully created the Channel Points Prediction."
      ],
      [
        "400 Bad Request",
        "* The `broadcaster_id` field is required.\n* The `title` field is required.\n* The `outcomes` field is required.\n* The `prediction_window` field is required.\n* The value in `prediction_window` is outside the allowed range of values.\n* The prediction's `title` is too long.\n* The outcome's `title` is too long.\n* There must be 2 outcomes in the prediction.\n* The broadcaster already has a prediction that's running; you may not create another prediction until the current prediction is resolved or canceled."
      ],
      [
        "401 Unauthorized",
        "* The ID in `broadcaster_id` must match the user ID in the access token.\n* The Authorization header is required and must contain a user access token.\n* The user access token must include the **channel:manage:predictions** scope.\n* The access token is not valid.\n* The client ID specified in the Client-Id header does not match the client ID specified in the access token."
      ],
      [
        "429 Too Many Requests",
        ""
      ]
    ],
    "examples": "### Example Request\n\nCreates a Channel Points Prediction for the specified broadcaster.\n\n```\ncurl -X POST 'https://api.twitch.tv/helix/predictions' \\\n-H 'Authorization: Bearer cfabdegwdoklmawdzdo98xt2fo512y' \\\n-H 'Client-Id: uo6dggojyb8d6soh92zknwmi5ej1q2' \\\n-H 'Content-Type: application/json' \\\n-d '{\n  \"broadcaster_id\": \"141981764\",\n  \"title\": \"Any leeks in the stream?\",\n  \"outcomes\": [\n    {\n      \"title\": \"Yes, give it time.\"\n    },\n    {\n      \"title\": \"Definitely not.\"\n    }\n  ],\n  \"prediction_window\": 120\n}'\n\n```\n\n### Example Response\n\n```\n{\n  \"data\": [\n    {\n      \"id\": \"bc637af0-7766-4525-9308-4112f4cbf178\",\n      \"broadcaster_id\": \"141981764\",\n      \"broadcaster_name\": \"TwitchDev\",\n      \"broadcaster_login\": \"twitchdev\",\n      \"title\": \"Any leeks in the stream?\",\n      \"winning_outcome_id\": null,\n      \"outcomes\": [\n        {\n          \"id\": \"73085848-a94d-4040-9d21-2cb7a89374b7\",\n          \"title\": \"Yes, give it time.\",\n          \"users\": 0,\n          \"channel_points\": 0,\n          \"top_predictors\": null,\n          \"color\": \"BLUE\"\n        },\n        {\n          \"id\": \"906b70ba-1f12-47ea-9e95-e5f93d20e9cc\",\n          \"title\": \"Definitely not.\",\n          \"users\": 0,\n          \"channel_points\": 0,\n          \"top_predictors\": null,\n          \"color\": \"PINK\"\n        }\n      ],\n      \"prediction_window\": 120,\n      \"status\": \"ACTIVE\",\n      \"created_at\": \"2021-04-28T17:11:22.595914172Z\",\n      \"ended_at\": null,\n      \"locked_at\": null\n    }\n  ]\n}\n\n```"
  },
  {
    "id": "end-prediction",
    "name": "End Prediction",
    "resource": "Predictions",
    "description": "Locks, resolves, or cancels a Channel Points Prediction.",
    "descriptionFull": [
      "Locks, resolves, or cancels a Channel Points Prediction."
    ],
    "authentication": [],
    "authorization": [
      "Requires a user access token that includes the **channel:manage:predictions** scope."
    ],
    "url": "https://api.twitch.tv/helix/predictions",
    "method": "PATCH",
    "requestBody": {
      "description": [],
      "parameters": [
        {
          "name": "broadcaster_id",
          "type": "String",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "The ID of the broadcaster that’s running the prediction. This ID must match the user ID in the user access token.",
          "children": []
        },
        {
          "name": "id",
          "type": "String",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "The ID of the prediction to update.",
          "children": []
        },
        {
          "name": "status",
          "type": "String",
          "possibleValues": [
            "RESOLVED",
            "CANCELED",
            "LOCKED"
          ],
          "required": true,
          "depth": 0,
          "description": "The status to set the prediction to. Possible case-sensitive values are:  \n  \n* RESOLVED — The winning outcome is determined and the Channel Points are distributed to the viewers who predicted the correct outcome.\n* CANCELED — The broadcaster is canceling the prediction and sending refunds to the participants.\n* LOCKED — The broadcaster is locking the prediction, which means viewers may no longer make predictions.\n  \nThe broadcaster can update an active prediction to LOCKED, RESOLVED, or CANCELED; and update a locked prediction to RESOLVED or CANCELED.  \n  \nThe broadcaster has up to 24 hours after the prediction window closes to resolve the prediction. If not, Twitch sets the status to CANCELED and returns the points.",
          "children": []
        },
        {
          "name": "winning_outcome_id",
          "type": "String",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "The ID of the winning outcome. You must set this parameter if you set `status` to RESOLVED.",
          "children": []
        }
      ]
    },
    "requestQueryParams": {
      "description": [],
      "parameters": []
    },
    "responseBody": {
      "description": [],
      "parameters": [
        {
          "name": "data",
          "type": "Object[]",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "A list that contains the single prediction that you updated.",
          "children": [
            {
              "name": "id",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "An ID that identifies this prediction.",
              "children": []
            },
            {
              "name": "broadcaster_id",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "An ID that identifies the broadcaster that created the prediction.",
              "children": []
            },
            {
              "name": "broadcaster_name",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The broadcaster’s display name.",
              "children": []
            },
            {
              "name": "broadcaster_login",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The broadcaster’s login name.",
              "children": []
            },
            {
              "name": "title",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The question that the prediction asks. For example, _Will I finish this entire pizza?_",
              "children": []
            },
            {
              "name": "winning_outcome_id",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The ID of the winning outcome. Is **null** unless `status` is RESOLVED.",
              "children": []
            },
            {
              "name": "outcomes",
              "type": "Object[]",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The list of possible outcomes for the prediction.",
              "children": [
                {
                  "name": "id",
                  "type": "String",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "An ID that identifies this outcome.",
                  "children": []
                },
                {
                  "name": "title",
                  "type": "String",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "The outcome’s text.",
                  "children": []
                },
                {
                  "name": "users",
                  "type": "Integer",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "The number of unique viewers that chose this outcome.",
                  "children": []
                },
                {
                  "name": "channel_points",
                  "type": "Integer",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "The number of Channel Points spent by viewers on this outcome.",
                  "children": []
                },
                {
                  "name": "top_predictors",
                  "type": "Object[]",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "A list of viewers who were the top predictors; otherwise, **null** if none.",
                  "children": []
                },
                {
                  "name": "color",
                  "type": "String",
                  "possibleValues": [
                    "BLUE",
                    "PINK"
                  ],
                  "required": null,
                  "depth": 2,
                  "description": "The color that visually identifies this outcome in the UX. Possible values are:  \n  \n* BLUE\n* PINK\n  \nIf the number of outcomes is two, the color is BLUE for the first outcome and PINK for the second outcome. If there are more than two outcomes, the color is BLUE for all outcomes.",
                  "children": []
                }
              ]
            },
            {
              "name": "prediction_window",
              "type": "Integer",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The length of time (in seconds) that the prediction will run for.",
              "children": []
            },
            {
              "name": "status",
              "type": "String",
              "possibleValues": [
                "ACTIVE",
                "CANCELED",
                "LOCKED",
                "RESOLVED"
              ],
              "required": null,
              "depth": 1,
              "description": "The prediction’s status. Valid values are:  \n  \n* ACTIVE — The Prediction is running and viewers can make predictions.\n* CANCELED — The broadcaster canceled the Prediction and refunded the Channel Points to the participants.\n* LOCKED — The broadcaster locked the Prediction, which means viewers can no longer make predictions.\n* RESOLVED — The winning outcome was determined and the Channel Points were distributed to the viewers who predicted the correct outcome.",
              "children": []
            },
            {
              "name": "created_at",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The UTC date and time of when the Prediction began.",
              "children": []
            },
            {
              "name": "ended_at",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The UTC date and time of when the Prediction ended. If `status` is ACTIVE, this is set to **null**.",
              "children": []
            },
            {
              "name": "locked_at",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The UTC date and time of when the Prediction was locked. If `status` is not LOCKED, this is set to **null**.",
              "children": []
            }
          ]
        }
      ]
    },
    "responseCodes": [
      [
        "200 OK",
        "Successfully updated the prediction."
      ],
      [
        "400 Bad Request",
        "* The `broadcaster_id` field is required.\n* The `id` field is required.\n* The `status` field is required.\n* The `winning_outcome_id` field is required if `status` is RESOLVED.\n* The value in the `status` field is not valid.\n* To update the prediction's status to RESOLVED or CANCELED, its current status must be ACTIVE or LOCKED.\n* To update the prediction's status to LOCKED, its current status must be ACTIVE."
      ],
      [
        "401 Unauthorized",
        "* The ID in `broadcaster_id` must match the user ID in the OAuth token.\n* The Authorization header is required and must contain a user access token.\n* The user access token must include the **channel:manage:predictions** scope.\n* The access token is not valid.\n* The client ID specified in the Client-Id header does not match the client ID specified in the access token."
      ],
      [
        "404 Not Found",
        "* The prediction in the `id` field was not found.\n* The outcome in the `winning_outcome_id` field was not found."
      ]
    ],
    "examples": "### Example Request\n\nResolves the specified Channel Points Prediction.\n\n```\ncurl -X PATCH 'https://api.twitch.tv/helix/predictions' \\\n-H 'Authorization: Bearer cfabdegwdoklmawdzdo98xt2fo512y' \\\n-H 'Client-Id: uo6dggojyb8d6soh92zknwmi5ej1q2' \\\n-H 'Content-Type: application/json' \\\n-d  '{\n  \"broadcaster_id\": \"141981764\",\n  \"id\": \"bc637af0-7766-4525-9308-4112f4cbf178\",\n  \"status\": \"RESOLVED\",\n  \"winning_outcome_id\": \"73085848-a94d-4040-9d21-2cb7a89374b7\"\n}'\n\n```\n\n### Example Response\n\n```\n{\n  \"data\": [\n    {\n      \"id\": \"bc637af0-7766-4525-9308-4112f4cbf178\",\n      \"broadcaster_id\": \"141981764\",\n      \"broadcaster_name\": \"TwitchDev\",\n      \"broadcaster_login\": \"twitchdev\",\n      \"title\": \"Will we win all the games?\",\n      \"winning_outcome_id\": \"73085848-a94d-4040-9d21-2cb7a89374b7\",\n      \"outcomes\": [\n        {\n          \"id\": \"73085848-a94d-4040-9d21-2cb7a89374b7\",\n          \"title\": \"yes\",\n          \"users\": 0,\n          \"channel_points\": 0,\n          \"top_predictors\": null,\n          \"color\": \"BLUE\"\n        },\n        {\n          \"id\": \"86010b2e-9764-4136-9359-fd1c9c5a8033\",\n          \"title\": \"no\",\n          \"users\": 0,\n          \"channel_points\": 0,\n          \"top_predictors\": null,\n          \"color\": \"PINK\"\n        }\n      ],\n      \"prediction_window\": 120,\n      \"status\": \"RESOLVED\",\n      \"created_at\": \"2021-04-28T21:48:19.480371331Z\",\n      \"ended_at\": \"2021-04-28T21:54:24.026833954Z\",\n      \"locked_at\": \"2021-04-28T21:48:34.636685705Z\"\n    }\n  ]\n}\n\n```"
  },
  {
    "id": "start-a-raid",
    "name": "Start a raid",
    "resource": "Raids",
    "description": "Raid another channel by sending the broadcaster’s viewers to the targeted channel.",
    "descriptionFull": [
      "Raid another channel by sending the broadcaster’s viewers to the targeted channel.",
      "When you call the API from a chat bot or extension, the Twitch UX pops up a window at the top of the chat room that identifies the number of viewers in the raid. The raid occurs when the broadcaster clicks **Raid Now** or after the 90-second countdown expires.",
      "To determine whether the raid successfully occurred, you must subscribe to the [Channel Raid](https://dev.twitch.tv/docs/eventsub/eventsub-subscription-types#channelraid) event. For more information, see [Get notified when a raid begins](https://dev.twitch.tv/docs/api/raids#get-notified-when-a-raid-begins).",
      "To cancel a pending raid, use the [Cancel a raid](https://dev.twitch.tv/docs/api/reference#cancel-a-raid) endpoint.",
      "**Rate Limit**: The limit is 10 requests within a 10-minute window."
    ],
    "authentication": [],
    "authorization": [
      "Requires a user access token that includes the **channel:manage:raids** scope."
    ],
    "url": "https://api.twitch.tv/helix/raids",
    "method": "POST",
    "requestBody": {
      "description": [],
      "parameters": []
    },
    "requestQueryParams": {
      "description": [],
      "parameters": [
        {
          "name": "from_broadcaster_id",
          "type": "String",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "The ID of the broadcaster that’s sending the raiding party. This ID must match the user ID associated with the user access token.",
          "children": []
        },
        {
          "name": "to_broadcaster_id",
          "type": "String",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "The ID of the broadcaster to raid.",
          "children": []
        }
      ]
    },
    "responseBody": {
      "description": [],
      "parameters": [
        {
          "name": "data",
          "type": "Object[]",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "A list that contains a single object with information about the pending raid.",
          "children": [
            {
              "name": "created_at",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The UTC date and time, in RFC3339 format, of when the raid was requested.",
              "children": []
            },
            {
              "name": "is_mature",
              "type": "Boolean",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "A Boolean value that indicates whether the channel being raided contains mature content.",
              "children": []
            }
          ]
        }
      ]
    },
    "responseCodes": [
      [
        "200 OK",
        "Successfully requested to start a raid. To determine whether the raid successfully occurred (that is, the broadcaster clicked **Raid Now** or the countdown expired), you must subscribe to the [Channel Raid](https://dev.twitch.tv/docs/eventsub/eventsub-subscription-types#channelraid) event."
      ],
      [
        "400 Bad Request",
        "* The raiding broadcaster is blocked from the targeted channel.\n* The targeted channel doesn't accept raids from this broadcaster.\n* There are too many viewers in the raiding party.\n* The IDs in _from\\_broadcaster\\_id_ and _to\\_broadcaster\\_id_ cannot be the same ID.\n* The ID in the _from\\_broadcaster\\_id_ query parameter is not valid.\n* The ID in the _to\\_broadcaster\\_id_ query parameter is not valid."
      ],
      [
        "401 Unauthorized",
        "* The ID in _from\\_broadcaster\\_id_ must match the user ID found in the request’s OAuth token.\n* The Authorization header is required and must contain a user access token.\n* The user access token must include the **channel:manage:raids** scope.\n* The access token is not valid.\n* The client ID specified in the Client-Id header does not match the client ID specified in the access token."
      ],
      [
        "404 Not Found",
        "* The targeted channel was not found."
      ],
      [
        "409 Conflict",
        "* The broadcaster is already in the process of raiding another channel."
      ],
      [
        "429 Too Many Requests",
        "* The broadcaster exceeded the number of raid requests that they may make. The limit is 10 requests within a 10-minute window."
      ]
    ],
    "examples": "### Example Request\n\n```\ncurl -X POST 'https://api.twitch.tv/helix/raids?from_broadcaster_id=12345678&to_broadcaster_id=87654321' \\\n-H 'Authorization: Bearer kpvy3cjboyptmdkiacwr0c19hotn5s' \\\n-H 'Client-Id: hof5gwx0su6owfnys0nyan9c87zr6t'\n\n```\n\n### Example Response\n\n```\n{\n  \"data\": [\n    {\n      \"created_at\": \"2022-02-18T07:20:50.52Z\",\n      \"is_mature\": false\n    }\n  ]\n}\n\n```"
  },
  {
    "id": "cancel-a-raid",
    "name": "Cancel a raid",
    "resource": "Raids",
    "description": "Cancel a pending raid.",
    "descriptionFull": [
      "Cancel a pending raid.",
      "You can cancel a raid at any point up until the broadcaster clicks **Raid Now** in the Twitch UX or the 90-second countdown expires.",
      "**Rate Limit**: The limit is 10 requests within a 10-minute window."
    ],
    "authentication": [],
    "authorization": [
      "Requires a user access token that includes the **channel:manage:raids** scope."
    ],
    "url": "https://api.twitch.tv/helix/raids",
    "method": "DELETE",
    "requestBody": {
      "description": [],
      "parameters": []
    },
    "requestQueryParams": {
      "description": [],
      "parameters": [
        {
          "name": "broadcaster_id",
          "type": "String",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "The ID of the broadcaster that initiated the raid. This ID must match the user ID associated with the user access token.",
          "children": []
        }
      ]
    },
    "responseBody": {
      "description": [],
      "parameters": []
    },
    "responseCodes": [
      [
        "204 No Content",
        "The pending raid was successfully canceled."
      ],
      [
        "400 Bad Request",
        "* The ID in the _broadcaster\\_id_ query parameter is not valid."
      ],
      [
        "401 Unauthorized",
        "* The ID in _broadcaster\\_id_ must match the user ID found in the request’s OAuth token.\n* The Authorization header is required and must contain a user access token.\n* The user access token must include the **channel:manage:raids** scope.\n* The access token is not valid.\n* The client ID specified in the Client-Id header does not match the client ID specified in the access token."
      ],
      [
        "404 Not Found",
        "* The broadcaster doesn't have a pending raid to cancel."
      ],
      [
        "429 Too Many Requests",
        "* The broadcaster exceeded the number of raid requests that they may make. The limit is 10 requests within a 10-minute window."
      ]
    ],
    "examples": "### Example Request\n\n```\ncurl -X DELETE 'https://api.twitch.tv/helix/raids?broadcaster_id=12345678' \\\n-H 'Authorization: Bearer kpvy3cjboyptmdkiacwr0c19hotn5s' \\\n-H 'Client-Id: hof5gwx0su6owfnys0nyan9c87zr6t'\n\n```"
  },
  {
    "id": "get-channel-stream-schedule",
    "name": "Get Channel Stream Schedule",
    "resource": "Schedule",
    "description": "Gets the broadcaster’s streaming schedule.",
    "descriptionFull": [
      "Gets the broadcaster’s streaming schedule. You can get the entire schedule or specific segments of the schedule. [Learn More](https://help.twitch.tv/s/article/channel-page-setup#Schedule)"
    ],
    "authentication": [],
    "authorization": [
      "Requires an app access token or user access token."
    ],
    "url": "https://api.twitch.tv/helix/schedule",
    "method": "GET",
    "requestBody": {
      "description": [],
      "parameters": []
    },
    "requestQueryParams": {
      "description": [],
      "parameters": [
        {
          "name": "broadcaster_id",
          "type": "String",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "The ID of the broadcaster that owns the streaming schedule you want to get.",
          "children": []
        },
        {
          "name": "id",
          "type": "String",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "The ID of the scheduled segment to return. To specify more than one segment, include the ID of each segment you want to get. For example, `id=1234&id=5678`. You may specify a maximum of 100 IDs.",
          "children": []
        },
        {
          "name": "start_time",
          "type": "String",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "The UTC date and time that identifies when in the broadcaster’s schedule to start returning segments. If not specified, the request returns segments starting after the current UTC date and time. Specify the date and time in RFC3339 format (for example, `2022-09-01T00:00:00Z`).",
          "children": []
        },
        {
          "name": "utc_offset",
          "type": "String",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "Not supported.",
          "children": []
        },
        {
          "name": "first",
          "type": "Integer",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "The maximum number of items to return per page in the response. The minimum page size is 1 item per page and the maximum is 25 items per page. The default is 20.",
          "children": []
        },
        {
          "name": "after",
          "type": "String",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "The cursor used to get the next page of results. The **Pagination** object in the response contains the cursor’s value. [Read More](https://dev.twitch.tv/docs/api/guide#pagination)",
          "children": []
        }
      ]
    },
    "responseBody": {
      "description": [],
      "parameters": [
        {
          "name": "data",
          "type": "Object",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "The broadcaster’s streaming schedule.",
          "children": [
            {
              "name": "segments",
              "type": "Object[]",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The list of broadcasts in the broadcaster’s streaming schedule.",
              "children": [
                {
                  "name": "id",
                  "type": "String",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "An ID that identifies this broadcast segment.",
                  "children": []
                },
                {
                  "name": "start_time",
                  "type": "String",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "The UTC date and time (in RFC3339 format) of when the broadcast starts.",
                  "children": []
                },
                {
                  "name": "end_time",
                  "type": "String",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "The UTC date and time (in RFC3339 format) of when the broadcast ends.",
                  "children": []
                },
                {
                  "name": "title",
                  "type": "String",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "The broadcast segment’s title.",
                  "children": []
                },
                {
                  "name": "canceled_until",
                  "type": "String",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "Indicates whether the broadcaster canceled this segment of a recurring broadcast. If the broadcaster canceled this segment, this field is set to the same value that’s in the `end_time` field; otherwise, it’s set to **null**.",
                  "children": []
                },
                {
                  "name": "category",
                  "type": "Object",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "The type of content that the broadcaster plans to stream or **null** if not specified.",
                  "children": []
                },
                {
                  "name": "is_recurring",
                  "type": "Boolean",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "A Boolean value that determines whether the broadcast is part of a recurring series that streams at the same time each week or is a one-time broadcast. Is **true** if the broadcast is part of a recurring series.",
                  "children": []
                }
              ]
            },
            {
              "name": "broadcaster_id",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The ID of the broadcaster that owns the broadcast schedule.",
              "children": []
            },
            {
              "name": "broadcaster_name",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The broadcaster’s display name.",
              "children": []
            },
            {
              "name": "broadcaster_login",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The broadcaster’s login name.",
              "children": []
            },
            {
              "name": "vacation",
              "type": "Object",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The dates when the broadcaster is on vacation and not streaming. Is set to **null** if vacation mode is not enabled.",
              "children": [
                {
                  "name": "start_time",
                  "type": "String",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "The UTC date and time (in RFC3339 format) of when the broadcaster’s vacation starts.",
                  "children": []
                },
                {
                  "name": "end_time",
                  "type": "String",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "The UTC date and time (in RFC3339 format) of when the broadcaster’s vacation ends.",
                  "children": []
                }
              ]
            },
            {
              "name": "pagination",
              "type": "Object",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The information used to page through a list of results. The object is empty if there are no more pages left to page through. [Read more](https://dev.twitch.tv/docs/api/guide#pagination).",
              "children": [
                {
                  "name": "cursor",
                  "type": "String",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "The cursor used to get the next page of results. Set the request’s _after_ query parameter to this value.",
                  "children": []
                }
              ]
            }
          ]
        }
      ]
    },
    "responseCodes": [
      [
        "200 OK",
        "Successfully retrieved the broadcaster’s streaming schedule."
      ],
      [
        "400 Bad Request",
        "* The _broadcaster\\_id_ query parameter is required.\n* The ID in the _broadcaster\\_id_ query parameter is not valid.\n* The ID in the _id_ query parameter is not valid.\n* The format of the date and time in the _start\\_time_ query parameter is not valid."
      ],
      [
        "401 Unauthorized",
        "* The Authorization header is required and must specify a valid app access token or user access token.\n* The access token is not valid.\n* The ID in the Client-Id header must match the Client ID in the access token."
      ],
      [
        "403 Forbidden",
        "* Only partners and affiliates may add non-recurring broadcast segments."
      ],
      [
        "404 Not Found",
        "* The broadcaster has not created a streaming schedule."
      ]
    ],
    "examples": "### Example Request\n\nGets the specified broadcaster’s streaming schedule.\n\n```\ncurl -X GET 'https://api.twitch.tv/helix/schedule?broadcaster_id=141981764' \\\n-H 'Authorization: Bearer cfabdegwdoklmawdzdo98xt2fo512y' \\\n-H 'Client-Id: uo6dggojyb8d6soh92zknwmi5ej1q2'\n\n```\n\n### Example Response\n\n```\n{\n  \"data\": {\n    \"segments\": [\n      {\n        \"id\": \"eyJzZWdtZW50SUQiOiJlNGFjYzcyNC0zNzFmLTQwMmMtODFjYS0yM2FkYTc5NzU5ZDQiLCJpc29ZZWFyIjoyMDIxLCJpc29XZWVrIjoyNn0=\",\n        \"start_time\": \"2021-07-01T18:00:00Z\",\n        \"end_time\": \"2021-07-01T19:00:00Z\",\n        \"title\": \"TwitchDev Monthly Update // July 1, 2021\",\n        \"canceled_until\": null,\n        \"category\": {\n            \"id\": \"509670\",\n            \"name\": \"Science & Technology\"\n        },\n        \"is_recurring\": false\n      },\n      ...\n    ],\n    \"broadcaster_id\": \"141981764\",\n    \"broadcaster_name\": \"TwitchDev\",\n    \"broadcaster_login\": \"twitchdev\",\n    \"vacation\": null\n  },\n  \"pagination\": {}\n}\n\n```"
  },
  {
    "id": "get-channel-icalendar",
    "name": "Get Channel iCalendar",
    "resource": "Schedule",
    "description": "Gets the broadcaster’s streaming schedule as an iCalendar.",
    "descriptionFull": [
      "Gets the broadcaster’s streaming schedule as an [iCalendar](https://datatracker.ietf.org/doc/html/rfc5545)."
    ],
    "authentication": [],
    "authorization": [
      "The Client-Id and Authorization headers are not required."
    ],
    "url": "https://api.twitch.tv/helix/schedule/icalendar",
    "method": "GET",
    "requestBody": {
      "description": [],
      "parameters": []
    },
    "requestQueryParams": {
      "description": [],
      "parameters": [
        {
          "name": "broadcaster_id",
          "type": "String",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "The ID of the broadcaster that owns the streaming schedule you want to get.",
          "children": []
        }
      ]
    },
    "responseBody": {
      "description": [
        "The response body contains the iCalendar data (see [RFC5545](https://datatracker.ietf.org/doc/html/rfc5545)).",
        "The Content-Type response header is set to `text/calendar`."
      ],
      "parameters": []
    },
    "responseCodes": [
      [
        "200 OK",
        "Successfully retrieved the broadcaster’s schedule as an iCalendar."
      ],
      [
        "400 Bad Request",
        "* The _broadcaster\\_id_ query parameter is required.\n* The ID in the _broadcaster\\_id_ query parameter is not valid."
      ]
    ],
    "examples": "### Example Request\n\nGets the specified broadcaster’s streaming schedule as an iCalendar.\n\n```\ncurl -X GET 'https://api.twitch.tv/helix/schedule/icalendar?broadcaster_id=141981764'\n\n```\n\n### Example Response\n\n```\nBEGIN:VCALENDAR\nPRODID:-//twitch.tv//StreamSchedule//1.0\nVERSION:2.0\nCALSCALE:GREGORIAN\nREFRESH-INTERVAL;VALUE=DURATION:PT1H\nNAME:TwitchDev\nBEGIN:VEVENT\nUID:e4acc724-371f-402c-81ca-23ada79759d4\nDTSTAMP:20210323T040131Z\nDTSTART;TZID=/America/New_York:20210701T140000\nDTEND;TZID=/America/New_York:20210701T150000\nSUMMARY:TwitchDev Monthly Update // July 1, 2021\nDESCRIPTION:Science & Technology.\nCATEGORIES:Science & Technology\nEND:VEVENT\nEND:VCALENDAR%\n\n```"
  },
  {
    "id": "update-channel-stream-schedule",
    "name": "Update Channel Stream Schedule",
    "resource": "Schedule",
    "description": "Updates the broadcaster’s schedule settings, such as scheduling a vacation.",
    "descriptionFull": [
      "Updates the broadcaster’s schedule settings, such as scheduling a vacation."
    ],
    "authentication": [],
    "authorization": [
      "Requires a user access token that includes the **channel:manage:schedule** scope."
    ],
    "url": "https://api.twitch.tv/helix/schedule/settings",
    "method": "PATCH",
    "requestBody": {
      "description": [],
      "parameters": []
    },
    "requestQueryParams": {
      "description": [],
      "parameters": [
        {
          "name": "broadcaster_id",
          "type": "String",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "The ID of the broadcaster whose schedule settings you want to update. The ID must match the user ID in the user access token.",
          "children": []
        },
        {
          "name": "is_vacation_enabled",
          "type": "Boolean",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "A Boolean value that indicates whether the broadcaster has scheduled a vacation. Set to **true** to enable Vacation Mode and add vacation dates, or **false** to cancel a previously scheduled vacation.",
          "children": []
        },
        {
          "name": "vacation_start_time",
          "type": "String",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "The UTC date and time of when the broadcaster’s vacation starts. Specify the date and time in RFC3339 format (for example, 2021-05-16T00:00:00Z). Required if _is\\_vacation\\_enabled_ is **true**.",
          "children": []
        },
        {
          "name": "vacation_end_time",
          "type": "String",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "The UTC date and time of when the broadcaster’s vacation ends. Specify the date and time in RFC3339 format (for example, 2021-05-30T23:59:59Z). Required if _is\\_vacation\\_enabled_ is **true**.",
          "children": []
        },
        {
          "name": "timezone",
          "type": "String",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "The time zone that the broadcaster broadcasts from. Specify the time zone using [IANA time zone database](https://www.iana.org/time-zones) format (for example, America/New\\_York). Required if _is\\_vacation\\_enabled_ is **true**.",
          "children": []
        }
      ]
    },
    "responseBody": {
      "description": [],
      "parameters": []
    },
    "responseCodes": [
      [
        "204 No Content",
        "Successfully updated the broadcaster’s schedule settings."
      ],
      [
        "400 Bad Request",
        "* The _broadcaster\\_id_ query parameter is required.\n* The ID in the _broadcaster\\_id_ query parameter is not valid.\n* The format of the string in _vacation\\_start\\_time_ is not valid.\n* The format of the string in _vacation\\_end\\_time_ is not valid.\n* The date in _vacation\\_end\\_time_ must be later than the date in _vacation\\_start\\_time_."
      ],
      [
        "401 Unauthorized",
        "* The ID in the _broadcaster\\_id_ query parameter must match the user ID in the user access token.\n* The Authorization header is required and must contain a user access token.\n* The user access token must include the **channel:manage:schedule** scope.\n* The access token is not valid.\n* The ID in the Client-Id header must match the client ID in the access token."
      ],
      [
        "404 Not Found",
        "* The broadcaster's schedule was not found."
      ]
    ],
    "examples": "### Example Request\n\nSchedules the broadcaster’s vacation.\n\n```\ncurl -X PATCH 'https://api.twitch.tv/helix/schedule/settings?broadcaster_id=141981764&is_vacation_enabled=true&vacation_start_time=2021-05-16T00:00:00Z&vacation_end_time=2021-05-23T00:00:00Z&timezone=America/New_York' \\\n-H 'Authorization: Bearer cfabdegwdoklmawdzdo98xt2fo512y' \\\n-H 'Client-Id: uo6dggojyb8d6soh92zknwmi5ej1q2'\n\n```"
  },
  {
    "id": "create-channel-stream-schedule-segment",
    "name": "Create Channel Stream Schedule Segment",
    "resource": "Schedule",
    "description": "Adds a single or recurring broadcast to the broadcaster’s streaming schedule.",
    "descriptionFull": [
      "Adds a single or recurring broadcast to the broadcaster’s streaming schedule. For information about scheduling broadcasts, see [Stream Schedule](https://help.twitch.tv/s/article/channel-page-setup#Schedule)."
    ],
    "authentication": [],
    "authorization": [
      "Requires a user access token that includes the **channel:manage:schedule** scope."
    ],
    "url": "https://api.twitch.tv/helix/schedule/segment",
    "method": "POST",
    "requestBody": {
      "description": [],
      "parameters": [
        {
          "name": "start_time",
          "type": "String",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "The date and time that the broadcast segment starts. Specify the date and time in RFC3339 format (for example, 2021-07-01T18:00:00Z).",
          "children": []
        },
        {
          "name": "timezone",
          "type": "String",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "The time zone where the broadcast takes place. Specify the time zone using [IANA time zone database](https://www.iana.org/time-zones) format (for example, America/New\\_York).",
          "children": []
        },
        {
          "name": "duration",
          "type": "String",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "The length of time, in minutes, that the broadcast is scheduled to run. The duration must be in the range 30 through 1380 (23 hours).",
          "children": []
        },
        {
          "name": "is_recurring",
          "type": "Boolean",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "A Boolean value that determines whether the broadcast recurs weekly. Is **true** if the broadcast recurs weekly. Only partners and affiliates may add non-recurring broadcasts.",
          "children": []
        },
        {
          "name": "category_id",
          "type": "String",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "The ID of the category that best represents the broadcast’s content. To get the category ID, use the [Search Categories](https://dev.twitch.tv/docs/api/reference#search-categories) endpoint.",
          "children": []
        },
        {
          "name": "title",
          "type": "String",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "The broadcast’s title. The title may contain a maximum of 140 characters.",
          "children": []
        }
      ]
    },
    "requestQueryParams": {
      "description": [],
      "parameters": [
        {
          "name": "broadcaster_id",
          "type": "String",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "The ID of the broadcaster that owns the schedule to add the broadcast segment to. This ID must match the user ID in the user access token.",
          "children": []
        }
      ]
    },
    "responseBody": {
      "description": [],
      "parameters": [
        {
          "name": "data",
          "type": "Object",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "The broadcaster’s streaming scheduled.",
          "children": [
            {
              "name": "segments",
              "type": "Object[]",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "A list that contains the single broadcast segment that you added.",
              "children": [
                {
                  "name": "id",
                  "type": "String",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "An ID that identifies this broadcast segment.",
                  "children": []
                },
                {
                  "name": "start_time",
                  "type": "String",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "The UTC date and time (in RFC3339 format) of when the broadcast starts.",
                  "children": []
                },
                {
                  "name": "end_time",
                  "type": "String",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "The UTC date and time (in RFC3339 format) of when the broadcast ends.",
                  "children": []
                },
                {
                  "name": "title",
                  "type": "String",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "The broadcast segment’s title.",
                  "children": []
                },
                {
                  "name": "canceled_until",
                  "type": "String",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "Indicates whether the broadcaster canceled this segment of a recurring broadcast. If the broadcaster canceled this segment, this field is set to the same value that’s in the `end_time` field; otherwise, it’s set to **null**.",
                  "children": []
                },
                {
                  "name": "category",
                  "type": "Object",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "The type of content that the broadcaster plans to stream or **null** if not specified.",
                  "children": []
                },
                {
                  "name": "is_recurring",
                  "type": "Boolean",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "A Boolean value that determines whether the broadcast is part of a recurring series that streams at the same time each week or is a one-time broadcast. Is **true** if the broadcast is part of a recurring series.",
                  "children": []
                }
              ]
            },
            {
              "name": "broadcaster_id",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The ID of the broadcaster that owns the broadcast schedule.",
              "children": []
            },
            {
              "name": "broadcaster_name",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The broadcaster’s display name.",
              "children": []
            },
            {
              "name": "broadcaster_login",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The broadcaster’s login name.",
              "children": []
            },
            {
              "name": "vacation",
              "type": "Object",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The dates when the broadcaster is on vacation and not streaming. Is set to **null** if vacation mode is not enabled.",
              "children": [
                {
                  "name": "start_time",
                  "type": "String",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "The UTC date and time (in RFC3339 format) of when the broadcaster’s vacation starts.",
                  "children": []
                },
                {
                  "name": "end_time",
                  "type": "String",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "The UTC date and time (in RFC3339 format) of when the broadcaster’s vacation ends.",
                  "children": []
                }
              ]
            }
          ]
        }
      ]
    },
    "responseCodes": [
      [
        "200 Ok",
        "Successfully added the broadcast segment."
      ],
      [
        "400 Bad Request",
        "* The _broadcaster\\_id_ query parameter is required.\n* The ID in the _broadcaster\\_id_ query parameter is not valid.\n* The format of the date and time in the `start_time` field is not valid.\n* The value in the `timezone` field is not valid.\n* The value in the `duration` field is not valid.\n* The ID in the `category_id` field is not valid.\n* The string in the `title` field is too long."
      ],
      [
        "401 Unauthorized",
        "* The ID in the _broadcaster\\_id_ query parameter must match the user ID in the user access token.\n* The Authorization header is required and must contain a user access token.\n* The user access token must include the **channel:manage:schedule** scope.\n* The access token is not valid.\n* The ID in the Client-Id header must match the client ID in the access token."
      ],
      [
        "403 Forbidden",
        "* Only partners and affiliates may add non-recurring broadcast segments."
      ]
    ],
    "examples": "### Example Request\n\nAdds a non-recurring broadcast to the broadcaster’s streaming schedule.\n\n```\ncurl -X POST 'https://api.twitch.tv/helix/schedule/segment?broadcaster_id=141981764' \\\n-H 'Authorization: Bearer cfabdegwdoklmawdzdo98xt2fo512y' \\\n-H 'Client-Id: uo6dggojyb8d6soh92zknwmi5ej1q2' \\\n-H 'Content-Type: application/json' \\\n-d '{\n  \"start_time\": \"2021-07-01T18:00:00Z\",\n  \"timezone\": \"America/New_York\",\n  \"is_recurring\": false,\n  \"duration\": \"60\",\n  \"category_id\": \"509670\",\n  \"title\": \"TwitchDev Monthly Update // July 1, 2021\"\n}'\n\n```\n\n### Example Response\n\n```\n{\n  \"data\": {\n    \"segments\": [\n      {\n        \"id\": \"eyJzZWdtZW50SUQiOiJlNGFjYzcyNC0zNzFmLTQwMmMtODFjYS0yM2FkYTc5NzU5ZDQiLCJpc29ZZWFyIjoyMDIxLCJpc29XZWVrIjoyNn0=\",\n        \"start_time\": \"2021-07-01T18:00:00Z\",\n        \"end_time\": \"2021-07-01T19:00:00Z\",\n        \"title\": \"TwitchDev Monthly Update // July 1, 2021\",\n        \"canceled_until\": null,\n        \"category\": {\n            \"id\": \"509670\",\n            \"name\": \"Science & Technology\"\n        },\n        \"is_recurring\": false\n      }\n    ],\n    \"broadcaster_id\": \"141981764\",\n    \"broadcaster_name\": \"TwitchDev\",\n    \"broadcaster_login\": \"twitchdev\",\n    \"vacation\": null\n  }\n}\n\n```"
  },
  {
    "id": "update-channel-stream-schedule-segment",
    "name": "Update Channel Stream Schedule Segment",
    "resource": "Schedule",
    "description": "Updates a scheduled broadcast segment.",
    "descriptionFull": [
      "Updates a scheduled broadcast segment.",
      "For recurring segments, updating a segment’s title, category, duration, and timezone, changes all segments in the recurring schedule, not just the specified segment."
    ],
    "authentication": [],
    "authorization": [
      "Requires a user access token that includes the **channel:manage:schedule** scope."
    ],
    "url": "https://api.twitch.tv/helix/schedule/segment",
    "method": "PATCH",
    "requestBody": {
      "description": [],
      "parameters": [
        {
          "name": "start_time",
          "type": "String",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "The date and time that the broadcast segment starts. Specify the date and time in RFC3339 format (for example, 2022-08-02T06:00:00Z).  \n  \n**NOTE**: Only partners and affiliates may update a broadcast’s start time and only for non-recurring segments.",
          "children": []
        },
        {
          "name": "duration",
          "type": "String",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "The length of time, in minutes, that the broadcast is scheduled to run. The duration must be in the range 30 through 1380 (23 hours).",
          "children": []
        },
        {
          "name": "category_id",
          "type": "String",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "The ID of the category that best represents the broadcast’s content. To get the category ID, use the [Search Categories](https://dev.twitch.tv/docs/api/reference#search-categories) endpoint.",
          "children": []
        },
        {
          "name": "title",
          "type": "String",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "The broadcast’s title. The title may contain a maximum of 140 characters.",
          "children": []
        },
        {
          "name": "is_canceled",
          "type": "Boolean",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "A Boolean value that indicates whether the broadcast is canceled. Set to **true** to cancel the segment.  \n  \n**NOTE**: For recurring segments, the API cancels the first segment after the current UTC date and time and not the specified segment (unless the specified segment is the next segment after the current UTC date and time).",
          "children": []
        },
        {
          "name": "timezone",
          "type": "String",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "The time zone where the broadcast takes place. Specify the time zone using [IANA time zone database](https://www.iana.org/time-zones) format (for example, America/New\\_York).",
          "children": []
        }
      ]
    },
    "requestQueryParams": {
      "description": [],
      "parameters": [
        {
          "name": "broadcaster_id",
          "type": "String",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "The ID of the broadcaster who owns the broadcast segment to update. This ID must match the user ID in the user access token.",
          "children": []
        },
        {
          "name": "id",
          "type": "String",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "The ID of the broadcast segment to update.",
          "children": []
        }
      ]
    },
    "responseBody": {
      "description": [],
      "parameters": [
        {
          "name": "data",
          "type": "Object",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "The broadcaster’s streaming scheduled.",
          "children": [
            {
              "name": "segments",
              "type": "Object[]",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "A list that contains the single broadcast segment that you updated.",
              "children": [
                {
                  "name": "id",
                  "type": "String",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "An ID that identifies this broadcast segment.",
                  "children": []
                },
                {
                  "name": "start_time",
                  "type": "String",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "The UTC date and time (in RFC3339 format) of when the broadcast starts.",
                  "children": []
                },
                {
                  "name": "end_time",
                  "type": "String",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "The UTC date and time (in RFC3339 format) of when the broadcast ends.",
                  "children": []
                },
                {
                  "name": "title",
                  "type": "String",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "The broadcast segment’s title.",
                  "children": []
                },
                {
                  "name": "canceled_until",
                  "type": "String",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "Indicates whether the broadcaster canceled this segment of a recurring broadcast. If the broadcaster canceled this segment, this field is set to the same value that’s in the `end_time` field; otherwise, it’s set to **null**.",
                  "children": []
                },
                {
                  "name": "category",
                  "type": "Object",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "The type of content that the broadcaster plans to stream or **null** if not specified.",
                  "children": []
                },
                {
                  "name": "is_recurring",
                  "type": "Boolean",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "A Boolean value that determines whether the broadcast is part of a recurring series that streams at the same time each week or is a one-time broadcast. Is **true** if the broadcast is part of a recurring series.",
                  "children": []
                }
              ]
            },
            {
              "name": "broadcaster_id",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The ID of the broadcaster that owns the broadcast schedule.",
              "children": []
            },
            {
              "name": "broadcaster_name",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The broadcaster’s display name.",
              "children": []
            },
            {
              "name": "broadcaster_login",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The broadcaster’s login name.",
              "children": []
            },
            {
              "name": "vacation",
              "type": "Object",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The dates when the broadcaster is on vacation and not streaming. Is set to **null** if vacation mode is not enabled.",
              "children": [
                {
                  "name": "start_time",
                  "type": "String",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "The UTC date and time (in RFC3339 format) of when the broadcaster’s vacation starts.",
                  "children": []
                },
                {
                  "name": "end_time",
                  "type": "String",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "The UTC date and time (in RFC3339 format) of when the broadcaster’s vacation ends.",
                  "children": []
                }
              ]
            }
          ]
        }
      ]
    },
    "responseCodes": [
      [
        "200 OK",
        "Successfully updated the broadcast segment."
      ],
      [
        "400 Bad Request",
        "* The _broadcaster\\_id_ query parameter is required.\n* The ID in the _broadcaster\\_id_ query parameter is not valid.\n* The _id_ query parameter is required.\n* The ID in the _id_ query parameter is not valid.\n* The format of the date and time in the `start_time` field is not valid.\n* The value in the `timezone` field is not valid.\n* The value in the `duration` field is not valid.\n* The ID in the `category_id` field is not valid.\n* The string in the `title` field is too long."
      ],
      [
        "401 Unauthorized",
        "* The ID in the _broadcaster\\_id_ query parameter must match the user ID in the user access token.\n* The Authorization header is required and must contain a user access token.\n* The user access token must include the **channel:manage:schedule** scope.\n* The access token is not valid.\n* The ID in the Client-Id header must match the client ID in the access token."
      ],
      [
        "404 Not Found",
        "* The specified broadcast segment was not found."
      ]
    ],
    "examples": "### Example Request\n\nUpdates the duration of a non-recurring broadcast segment.\n\n```\ncurl -X PATCH 'https://api.twitch.tv/helix/schedule/segment?broadcaster_id=141981764&id=eyJzZWdtZW50SUQiOiJlNGFjYzcyNC0zNzFmLTQwMmMtODFjYS0yM2FkYTc5NzU5ZDQiLCJpc29ZZWFyIjoyMDIxLCJpc29XZWVrIjoyNn0=' \\\n-H 'Authorization: Bearer cfabdegwdoklmawdzdo98xt2fo512y' \\\n-H 'Client-Id: uo6dggojyb8d6soh92zknwmi5ej1q2'\n-H 'Content-Type: application/json' \\\n-d '{\n  \"duration\": \"120\"\n}'\n\n```\n\n### Example Response\n\n```\n{\n  \"data\": {\n    \"segments\": [\n      {\n        \"id\": \"eyJzZWdtZW50SUQiOiJlNGFjYzcyNC0zNzFmLTQwMmMtODFjYS0yM2FkYTc5NzU5ZDQiLCJpc29ZZWFyIjoyMDIxLCJpc29XZWVrIjoyNn0=\",\n        \"start_time\": \"2021-07-01T18:00:00Z\",\n        \"end_time\": \"2021-07-01T20:00:00Z\",\n        \"title\": \"TwitchDev Monthly Update // July 1, 2021\",\n        \"canceled_until\": null,\n        \"category\": {\n            \"id\": \"509670\",\n            \"name\": \"Science & Technology\"\n        },\n        \"is_recurring\": false\n      }\n    ],\n    \"broadcaster_id\": \"141981764\",\n    \"broadcaster_name\": \"TwitchDev\",\n    \"broadcaster_login\": \"twitchdev\",\n    \"vacation\": null\n  }\n}\n\n```"
  },
  {
    "id": "delete-channel-stream-schedule-segment",
    "name": "Delete Channel Stream Schedule Segment",
    "resource": "Schedule",
    "description": "Deletes a broadcast from the broadcaster’s streaming schedule.",
    "descriptionFull": [
      "Removes a broadcast segment from the broadcaster’s streaming schedule.",
      "**NOTE**: For recurring segments, removing a segment removes all segments in the recurring schedule."
    ],
    "authentication": [],
    "authorization": [
      "Requires a user access token that includes the **channel:manage:schedule** scope."
    ],
    "url": "https://api.twitch.tv/helix/schedule/segment",
    "method": "DELETE",
    "requestBody": {
      "description": [],
      "parameters": []
    },
    "requestQueryParams": {
      "description": [],
      "parameters": [
        {
          "name": "broadcaster_id",
          "type": "String",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "The ID of the broadcaster that owns the streaming schedule. This ID must match the user ID in the user access token.",
          "children": []
        },
        {
          "name": "id",
          "type": "String",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "The ID of the broadcast segment to remove.",
          "children": []
        }
      ]
    },
    "responseBody": {
      "description": [],
      "parameters": []
    },
    "responseCodes": [
      [
        "204 No Content",
        "Successfully removed the broadcast segment."
      ],
      [
        "400 Bad Request",
        "* The _broadcaster\\_id_ query parameter is required.\n* The ID in the _broadcaster\\_id_ query parameter is not valid.\n* The _id_ query parameter is required.\n* The ID in the _id_ query parameter is not valid."
      ],
      [
        "401 Unauthorized",
        "* The ID in the _broadcaster\\_id_ query parameter must match the user ID in the user access token.\n* The Authorization header is required and must contain a user access token.\n* The user access token must include the **channel:manage:schedule** scope.\n* The access token is not valid.\n* The ID in the Client-Id header must match the client ID in the OAuth token."
      ]
    ],
    "examples": "### Example Request\n\nRemoves the segment from the broadcaster’s streaming schedule.\n\n```\ncurl -X DELETE 'https://api.twitch.tv/helix/schedule/segment?broadcaster_id=141981764&id=eyJzZWdtZW50SUQiOiI4Y2EwN2E2NC0xYTZkLTRjYWItYWE5Ni0xNjIyYzNjYWUzZDkiLCJpc29ZZWFyIjoyMDIxLCJpc29XZWVrIjoyMX0=' \\\n-H 'Authorization: Bearer cfabdegwdoklmawdzdo98xt2fo512y' \\\n-H 'Client-Id: uo6dggojyb8d6soh92zknwmi5ej1q2'\n\n```"
  },
  {
    "id": "search-categories",
    "name": "Search Categories",
    "resource": "Search",
    "description": "Gets the games or categories that match the specified query.",
    "descriptionFull": [
      "Gets the games or categories that match the specified query.",
      "To match, the category’s name must contain all parts of the query string. For example, if the query string is 42, the response includes any category name that contains 42 in the title. If the query string is a phrase like _love computer_, the response includes any category name that contains the words love and computer anywhere in the name. The comparison is case insensitive."
    ],
    "authentication": [
      "Requires an app access token or user access token."
    ],
    "authorization": [],
    "url": "https://api.twitch.tv/helix/search/categories",
    "method": "GET",
    "requestBody": {
      "description": [],
      "parameters": []
    },
    "requestQueryParams": {
      "description": [],
      "parameters": [
        {
          "name": "query",
          "type": "String",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "The URI-encoded search string. For example, encode _#archery_ as `%23archery` and search strings like _angel of death_ as `angel%20of%20death`.",
          "children": []
        },
        {
          "name": "first",
          "type": "Integer",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "The maximum number of items to return per page in the response. The minimum page size is 1 item per page and the maximum is 100 items per page. The default is 20.",
          "children": []
        },
        {
          "name": "after",
          "type": "String",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "The cursor used to get the next page of results. The **Pagination** object in the response contains the cursor’s value. [Read More](https://dev.twitch.tv/docs/api/guide#pagination)",
          "children": []
        }
      ]
    },
    "responseBody": {
      "description": [],
      "parameters": [
        {
          "name": "data",
          "type": "Object[]",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "The list of games or categories that match the query. The list is empty if there are no matches.",
          "children": [
            {
              "name": "box_art_url",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "A URL to an image of the game’s box art or streaming category.",
              "children": []
            },
            {
              "name": "name",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The name of the game or category.",
              "children": []
            },
            {
              "name": "id",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "An ID that uniquely identifies the game or category.",
              "children": []
            }
          ]
        }
      ]
    },
    "responseCodes": [
      [
        "200 OK",
        "Successfully retrieved the list of category names that matched the specified query string."
      ],
      [
        "400 Bad Request",
        "* The _query_ query parameter is required."
      ],
      [
        "401 Unauthorized",
        "* The Authorization header is required and must contain an app access token or user access token.\n* The access token is not valid.\n* The client ID specified in the Client-Id header does not match the client ID specified in the access token."
      ]
    ],
    "examples": "### Example Request\n\nGets the list of games and categories that contain _fort_ in the name.\n\n```\ncurl -X GET 'https://api.twitch.tv/helix/search/categories?query=fort' \\\n-H 'Authorization: Bearer 2gbdx6oar67tqtcmt49t3wpcgycthx' \\\n-H 'Client-Id: wbmytr93xzw8zbg0p1izqyzzc5mbiz'\n\n```\n\n### Example Response\n\n```\n{\n  \"data\": [\n    {\n      \"id\": \"33214\",\n      \"name\": \"Fortnite\",\n      \"box_art_url\": \"https://static-cdn.jtvnw.net/ttv-boxart/33214-52x72.jpg\"\n    },\n    ...\n  ],\n  \"pagination\": {\n    \"cursor\": \"eyJiIjpudWxsLCJhIjp7IkN\"\n  }\n}\n\n```"
  },
  {
    "id": "search-channels",
    "name": "Search Channels",
    "resource": "Search",
    "description": "Gets the channels that match the specified query and have streamed content within the past 6 months.",
    "descriptionFull": [
      "Gets the channels that match the specified query and have streamed content within the past 6 months.",
      "The fields that the API uses for comparison depends on the value that the _live\\_only_ query parameter is set to. If _live\\_only_ is **false**, the API matches on the broadcaster’s login name. However, if _live\\_only_ is **true**, the API matches on the broadcaster’s name and category name.",
      "To match, the beginning of the broadcaster’s name or category must match the query string. The comparison is case insensitive. If the query string is angel\\_of\\_death, it matches all names that begin with angel\\_of\\_death. However, if the query string is a phrase like _angel of death_, it matches to names starting with angelofdeath or names starting with angel\\_of\\_death.",
      "By default, the results include both live and offline channels. To get only live channels set the _live\\_only_ query parameter to **true**."
    ],
    "authentication": [
      "Requires an app access token or user access token."
    ],
    "authorization": [],
    "url": "helix/search/channels",
    "method": "GET",
    "requestBody": {
      "description": [],
      "parameters": []
    },
    "requestQueryParams": {
      "description": [],
      "parameters": [
        {
          "name": "query",
          "type": "String",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "The URI-encoded search string. For example, encode search strings like _angel of death_ as `angel%20of%20death`.",
          "children": []
        },
        {
          "name": "live_only",
          "type": "Boolean",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "A Boolean value that determines whether the response includes only channels that are currently streaming live. Set to **true** to get only channels that are streaming live; otherwise, **false** to get live and offline channels. The default is **false**.",
          "children": []
        },
        {
          "name": "first",
          "type": "Integer",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "The maximum number of items to return per page in the response. The minimum page size is 1 item per page and the maximum is 100 items per page. The default is 20.",
          "children": []
        },
        {
          "name": "after",
          "type": "String",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "The cursor used to get the next page of results. The **Pagination** object in the response contains the cursor’s value. [Read More](https://dev.twitch.tv/docs/api/guide#pagination)",
          "children": []
        }
      ]
    },
    "responseBody": {
      "description": [],
      "parameters": [
        {
          "name": "data",
          "type": "Object[]",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "The list of channels that match the query. The list is empty if there are no matches.",
          "children": [
            {
              "name": "broadcaster_language",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The ISO 639-1 two-letter language code of the language used by the broadcaster. For example, _en_ for English. If the broadcaster uses a language not in the list of [supported stream languages](https://help.twitch.tv/s/article/languages-on-twitch#streamlang), the value is _other_.",
              "children": []
            },
            {
              "name": "broadcaster_login",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The broadcaster’s login name.",
              "children": []
            },
            {
              "name": "display_name",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The broadcaster’s display name.",
              "children": []
            },
            {
              "name": "game_id",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The ID of the game that the broadcaster is playing or last played.",
              "children": []
            },
            {
              "name": "game_name",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The name of the game that the broadcaster is playing or last played.",
              "children": []
            },
            {
              "name": "id",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "An ID that uniquely identifies the channel (this is the broadcaster’s ID).",
              "children": []
            },
            {
              "name": "is_live",
              "type": "Boolean",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "A Boolean value that determines whether the broadcaster is streaming live. Is **true** if the broadcaster is streaming live; otherwise, **false**.",
              "children": []
            },
            {
              "name": "tag_ids",
              "type": "String[]",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The list of tags that apply to the stream. The list contains IDs only when the channel is steaming live. For a list of possible tags, see [List of All Tags](https://www.twitch.tv/directory/all/tags). The list doesn’t include Category Tags.",
              "children": []
            },
            {
              "name": "thumbnail_url",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "A URL to a thumbnail of the broadcaster’s profile image.",
              "children": []
            },
            {
              "name": "title",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The stream’s title. Is an empty string if the broadcaster didn’t set it.",
              "children": []
            },
            {
              "name": "started_at",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The UTC date and time (in RFC3339 format) of when the broadcaster started streaming. The string is empty if the broadcaster is not streaming live.",
              "children": []
            }
          ]
        }
      ]
    },
    "responseCodes": [
      [
        "200 OK",
        "Successfully retrieved the list of category names that matched the specified query string."
      ],
      [
        "400 Bad Request",
        "* The _query_ query parameter is required."
      ],
      [
        "401 Unauthorized",
        "* The Authorization header is required and must contain an app access token or user access token.\n* The access token is not valid.\n* The client ID specified in the Client-Id header does not match the client ID specified in the access token."
      ]
    ],
    "examples": "### Example Request\n\nGets the list of live and offline channels where the broadcaster’s name contains _loserfruit_.:\n\n```\ncurl -X GET 'https://api.twitch.tv/helix/search/channels?query=loserfruit' \\\n-H 'Authorization: Bearer 2gbdx6oar67tqtcmt49t3wpcgycthx' \\\n-H 'Client-Id: wbmytr93xzw8zbg0p1izqyzzc5mbiz'\n\n```\n\n### Example Response\n\n```\n{\n  \"data\": [\n    {\n      \"broadcaster_language\": \"en\",\n      \"broadcaster_login\": \"loserfruit\",\n      \"display_name\": \"Loserfruit\",\n      \"game_id\": \"498000\",\n      \"game_name\": \"House Flipper\",\n      \"id\": \"41245072\",\n      \"is_live\": false,\n      \"tags_ids\": [],\n      \"thumbnail_url\": \"https://static-cdn.jtvnw.net/jtv_user_pictures/fd17325a-7dc2-46c6-8617-e90ec259501c-profile_image-300x300.png\",\n      \"title\": \"loserfruit\",\n      \"started_at\": \"\"\n    },\n    ...\n  ],\n  \"pagination\": {\n    \"cursor\": \"Mg==\"\n  }\n}\n\n```\n\n### Example Request\n\nGets the list of live channels where the broadcaster’s name or category name contains _a\\_seagull_.:\n\n```\ncurl -X GET 'https://api.twitch.tv/helix/search/channels?query=a_seagull&live_only=true' \\\n-H 'Authorization: Bearer 2gbdx6oar67tqtcmt49t3wpcgycthx' \\\n-H 'Client-Id: wbmytr93xzw8zbg0p1izqyzzc5mbiz'\n\n```\n\n### Example Response\n\n```\n{\n  \"data\": [\n    {\n      \"broadcaster_language\": \"en\",\n      \"broadcaster_login\": \"a_seagull\",\n      \"display_name\": \"A_Seagull\",\n      \"game_id\": \"506442\",\n      \"game_name\": \"DOOM Eternal\",\n      \"id\": \"19070311\",\n      \"is_live\": true,\n      \"tags_ids\": [\n        \"6ea6bca4-4712-4ab9-a906-e3336a9d8039\"\n      ],\n      \"thumbnail_url\": \"https://static-cdn.jtvnw.net/jtv_user_pictures/a_seagull-profile_image-4d2d235688c7dc66-300x300.png\",\n      \"title\": \"a_seagull\",\n      \"started_at\": \"2020-03-18T17:56:00Z\"\n    }\n  ],\n  \"pagination\": {}\n}\n\n```"
  },
  {
    "id": "get-soundtrack-current-track",
    "name": "Get Soundtrack Current Track",
    "resource": "Music",
    "description": "Gets the Soundtrack track that the broadcaster is playing.",
    "descriptionFull": [
      "Gets the Soundtrack track that the broadcaster is playing."
    ],
    "authentication": [],
    "authorization": [
      "Requires an app access token or user access token."
    ],
    "url": "https://api.twitch.tv/helix/soundtrack/current_track",
    "method": "GET",
    "requestBody": {
      "description": [],
      "parameters": []
    },
    "requestQueryParams": {
      "description": [],
      "parameters": [
        {
          "name": "broadcaster_id",
          "type": "String",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "The ID of the broadcaster that’s playing a Soundtrack track.",
          "children": []
        }
      ]
    },
    "responseBody": {
      "description": [],
      "parameters": [
        {
          "name": "data",
          "type": "Object[]",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "A list that contains the single Soundtrack track that the broadcaster is playing.",
          "children": [
            {
              "name": "track",
              "type": "Object",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "Describes a track.",
              "children": [
                {
                  "name": "album",
                  "type": "Object",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "Describes the album that the track is found on.",
                  "children": []
                }
              ]
            },
            {
              "name": "source",
              "type": "Object",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The source of the track that’s currently playing. For example, a playlist or station.",
              "children": [
                {
                  "name": "id",
                  "type": "String",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "The playlist’s or station’s ASIN (Amazon Standard Identification Number).",
                  "children": []
                },
                {
                  "name": "image_url",
                  "type": "String",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "A URL to the playlist’s or station’s image art.",
                  "children": []
                },
                {
                  "name": "soundtrack_url",
                  "type": "String",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "A URL to the playlist on Soundtrack. The string is empty if `content-type` is STATION.",
                  "children": []
                },
                {
                  "name": "spotify_url",
                  "type": "String",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "A URL to the playlist on Spotify. The string is empty if `content-type` is STATION.",
                  "children": []
                },
                {
                  "name": "title",
                  "type": "String",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "The playlist’s or station’s title.",
                  "children": []
                }
              ]
            }
          ]
        }
      ]
    },
    "responseCodes": [
      [
        "200 OK",
        "Successfully retrieved the track that the broadcaster is playing."
      ],
      [
        "400 Bad Request",
        "* The _broadcaster\\_id_ query parameter is required."
      ],
      [
        "401 Unauthorized",
        "* The Authorization header is required and must specify an app access token or user access token.\n* The access token is not valid.\n* The ID in the Client-Id header must match the client ID in the access token."
      ],
      [
        "404 Not Found",
        "* The broadcaster is not playing a track."
      ]
    ],
    "examples": "### Example Request\n\n```\ncurl -X GET 'https://api.twitch.tv/helix/soundtrack/current_track?broadcaster_id=1234' \\\n-H 'Authorization: Bearer 4a4x78f5wqvkybms7mxfist3jmzul' \\\n-H 'Client-Id: t214nt8z1rdtbj69hyarjvh5mi6fh'\n\n```\n\n### Example Response\n\n```\n{\n  \"data\": [\n    {\n      \"track\": {\n        \"artists\": [\n          {\n            \"id\": \"B07S7JG3TK\",\n            \"name\": \"Enoth\",\n            \"creator_channel_id\": \"39051113\"\n          }\n        ],\n        \"id\": \"B08D6QFS38\",\n        \"isrc\": \"CCXXXYYNNNNN\",\n        \"duration\": 153,\n        \"title\": \"Please stay\",\n        \"album\": {\n          \"id\": \"B08D6PMKYL\",\n          \"name\": \"Summer 2020\",\n          \"image_url\": \"https://m.media-amazon.com/images/I/51zs1JZY8tL.jpg\"\n        }\n      },\n      \"source\": {\n        \"id\": \"B08HCW84SF\",\n        \"content_type\": \"PLAYLIST\",\n        \"title\": \"Beats To Stream To\",\n        \"image_url\": \"https://m.media-amazon.com/images/I/419WuvMXzEL.jpg\",\n        \"soundtrack_url\": \"https://soundtrack.twitch.tv/playlist?playlistID=B08HCW84SF\",\n        \"spotify_url\": \"https://open.spotify.com/playlist/1LOP14236oTUscowY3NvYN\"\n      }\n    }\n  ]\n}\n\n```"
  },
  {
    "id": "get-soundtrack-playlist",
    "name": "Get Soundtrack Playlist",
    "resource": "Music",
    "description": "Gets the Soundtrack playlist’s tracks.",
    "descriptionFull": [
      "Gets the Soundtrack playlist’s tracks."
    ],
    "authentication": [],
    "authorization": [
      "Requires an app access token or user access token."
    ],
    "url": "https://api.twitch.tv/helix/soundtrack/playlist",
    "method": "GET",
    "requestBody": {
      "description": [],
      "parameters": []
    },
    "requestQueryParams": {
      "description": [],
      "parameters": [
        {
          "name": "id",
          "type": "String",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "The ID of the playlist to get.",
          "children": []
        },
        {
          "name": "first",
          "type": "Integer",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "The maximum number of items to return per page in the response. The minimum page size is 1 item per page and the maximum is 50 items per page. The default is 20.",
          "children": []
        },
        {
          "name": "after",
          "type": "String",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "The cursor used to get the next page of results. The **Pagination** object in the response contains the cursor’s value. [Read More](https://dev.twitch.tv/docs/api/guide#pagination)",
          "children": []
        }
      ]
    },
    "responseBody": {
      "description": [],
      "parameters": [
        {
          "name": "data",
          "type": "Object[]",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "The playlist’s list of tracks.",
          "children": [
            {
              "name": "album",
              "type": "Object",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The album that includes this track.",
              "children": [
                {
                  "name": "id",
                  "type": "String",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "The album’s ASIN (Amazon Standard Identification Number).",
                  "children": []
                },
                {
                  "name": "image_url",
                  "type": "String",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "A URL to the album’s cover art.",
                  "children": []
                },
                {
                  "name": "name",
                  "type": "String",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "The album’s name. If the album contains explicit content, the name will contain **\\[Explicit\\]** in the string. For example, Let It Die \\[Explicit\\].",
                  "children": []
                }
              ]
            },
            {
              "name": "artists",
              "type": "Object[]",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The artists included on the track.",
              "children": [
                {
                  "name": "creator_channel_id",
                  "type": "String",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "The ID of the Twitch user that created the track. The string is empty if a Twitch user didn’t create the track.",
                  "children": []
                },
                {
                  "name": "id",
                  "type": "String",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "The artist’s ASIN (Amazon Standard Identification Number).",
                  "children": []
                },
                {
                  "name": "name",
                  "type": "String",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "The artist’s name. This can be the band’s name or the solo artist’s name.",
                  "children": []
                }
              ]
            },
            {
              "name": "duration",
              "type": "Integer",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The duration of the track, in seconds.",
              "children": []
            },
            {
              "name": "id",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The track’s ASIN (Amazon Standard Identification Number).",
              "children": []
            },
            {
              "name": "isrc",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The track’s ISRC (International Standard Recording Code).",
              "children": []
            },
            {
              "name": "title",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The track’s title. If the track contains explicit content, the title will contain **\\[Explicit\\]** in the string. For example, Let It Die \\[Explicit\\].",
              "children": []
            }
          ]
        },
        {
          "name": "pagination",
          "type": "Object",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "Contains the information used to page through a list of results. The object is empty if there are no more pages to page through. [Read More](https://dev.twitch.tv/docs/api/guide#pagination)",
          "children": [
            {
              "name": "cursor",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The cursor used to get the next page of results. Use the cursor to set the request’s _after_ query parameter.",
              "children": []
            }
          ]
        }
      ]
    },
    "responseCodes": [
      [
        "200 OK",
        "Successfully retrieved the playlist."
      ],
      [
        "400 Bad Request",
        "* The _id_ query parameter is required.\n* The ID in the _id_ query parameter is not a valid playlist ASIN."
      ],
      [
        "401 Unauthorized",
        "* The Authorization header is required and must specify an app access token or user access token.\n* The access token is not valid.\n* The ID in the Client-Id header must match the client ID in the access token."
      ]
    ],
    "examples": "### Example Request\n\n```\ncurl -X GET 'https://api.twitch.tv/helix/soundtrack/playlist?id=B0912YMKSL' \\\n-H 'Authorization: Bearer 4a4x78f5wqvkybms7mxfist3jmzul' \\\n-H 'Client-Id: t214nt8z1rdtbj69hyarjvh5mi6fh'\n\n```\n\n### Example Response\n\n```\n{\n  \"data\": [\n    {\n      \"artists\": [\n        {\n          \"id\": \"B002F8OLPK\",\n          \"name\": \"BJ The Chicago Kid\",\n          \"creator_channel_id\": \"\"\n        }\n      ],\n      \"id\": \"B09J7FZ92D\",\n      \"isrc\": \"QM24S2106597\",\n      \"duration\": 210,\n      \"title\": \"Smooth [Explicit]\",\n      \"album\": {\n        \"id\": \"B09J7B37VS\",\n        \"name\": \"Smooth [Explicit]\",\n        \"image_url\": \"https://m.media-amazon.com/images/I/316SDaD-XQL.jpg\"\n      }\n    },\n    {\n      \"artists\": [\n        {\n          \"id\": \"B071ZL7NDT\",\n          \"name\": \"23 Unofficial\",\n          \"creator_channel_id\": \"647990463\"\n        },\n        {\n          \"id\": \"B073PHDDSK\",\n          \"name\": \"KALLITECHNIS\",\n          \"creator_channel_id\": \"\"\n        }\n      ],\n      \"id\": \"B09C8344GZ\",\n      \"isrc\": \"QM24S2105530\",\n      \"duration\": 154,\n      \"title\": \"OUTTA MY WAY\",\n      \"album\": {\n        \"id\": \"B09C794J2L\",\n        \"name\": \"OUTTA MY WAY\",\n        \"image_url\": \"https://m.media-amazon.com/images/I/515HYAEtpeL.jpg\"\n      }\n    }\n  ],\n  \"pagination\": {\n    \"cursor\": \"eyJiIjpudWxsLCJhIjp7Ik9mZnNldCI6MjB9fQ\"\n  }\n}\n\n```"
  },
  {
    "id": "get-soundtrack-playlists",
    "name": "Get Soundtrack Playlists",
    "resource": "Music",
    "description": "Gets a list of Soundtrack playlists.",
    "descriptionFull": [
      "Gets a list of Soundtrack playlists.",
      "The response contains information about the playlists, such as their titles and descriptions. To get a playlist’s tracks, use [Get Soundtrack Playlist](https://dev.twitch.tv/docs/api/reference#get-soundtrack-playlist) endpoint."
    ],
    "authentication": [],
    "authorization": [
      "Requires an app access token or user access token."
    ],
    "url": "https://api.twitch.tv/helix/soundtrack/playlists",
    "method": "GET",
    "requestBody": {
      "description": [],
      "parameters": []
    },
    "requestQueryParams": {
      "description": [],
      "parameters": [
        {
          "name": "id",
          "type": "String",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "The ID of the playlist to get. Specify an ID only if you want to get a single playlist instead of all playlists.",
          "children": []
        },
        {
          "name": "first",
          "type": "Integer",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "The maximum number of items to return per page in the response. The minimum page size is 1 item per page and the maximum is 50 items per page. The default is 20.",
          "children": []
        },
        {
          "name": "after",
          "type": "String",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "The cursor used to get the next page of results. The **Pagination** object in the response contains the cursor’s value. [Read More](https://dev.twitch.tv/docs/api/guide#pagination)",
          "children": []
        }
      ]
    },
    "responseBody": {
      "description": [],
      "parameters": [
        {
          "name": "data",
          "type": "Object[]",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "The list of Soundtrack playlists.",
          "children": [
            {
              "name": "description",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "A short description about the music that the playlist includes.",
              "children": []
            },
            {
              "name": "id",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The playlist’s ASIN (Amazon Standard Identification Number).",
              "children": []
            },
            {
              "name": "image_url",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "A URL to the playlist’s image art. Is empty if the playlist doesn’t include art.",
              "children": []
            },
            {
              "name": "title",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The playlist’s title.",
              "children": []
            }
          ]
        },
        {
          "name": "pagination",
          "type": "Object",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "Contains the information used to page through the list of results. The object is empty if there are no more pages left to page through. [Read More](https://dev.twitch.tv/docs/api/guide#pagination)",
          "children": [
            {
              "name": "cursor",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The cursor used to get the next page of results. Use the cursor to set the request’s _after_ query parameter.",
              "children": []
            }
          ]
        }
      ]
    },
    "responseCodes": [
      [
        "200 OK",
        "Successfully retrieved the list of playlists."
      ],
      [
        "400 Bad Request",
        "* The ID in the _id_ query parameter is not a valid playlist ASIN."
      ],
      [
        "401 Unauthorized",
        "* The Authorization header is required and must specify an app access token or user access token.\n* The access token is not valid.\n* The ID in the Client-Id header must match the client ID in the access token."
      ]
    ],
    "examples": "### Example Request\n\nGets all playlists.\n\n```\ncurl -X GET 'https://api.twitch.tv/helix/soundtrack/playlists' \\\n-H 'Authorization: Bearer 4a4x78f5wqvkybms7mxfist3jmzul' \\\n-H 'Client-Id: t214nt8z1rdtbj69hyarjvh5mi6fh'\n\n```\n\n### Example Response\n\n```\n{\n  \"data\": [\n    {\n      \"title\": \"Label Spotlight: Radio Juicy\",\n      \"id\": \"B08P3N4ZPD\",\n      \"image_url\": \"https://m.media-amazon.com/images/I/517kGzeaRhL.jpg\",\n      \"description\": \"Journey through boom-bap, lo-fi, trap and ambient sounds, courtesy of esteemed label Radio Juicy.\"\n    },\n    {\n      \"title\": \"Fall Days\",\n      \"id\": \"B09LVX24K7\",\n      \"image_url\": \"https://m.media-amazon.com/images/I/41w3M-1KfXL.jpg\",\n      \"description\": \"Turn a new leaf with these chill pop & indie tunes.\"\n    },\n    {\n      \"title\": \"Release Spotlight: JVNA\",\n      \"id\": \"B09M7H78YL\",\n      \"image_url\": \"https://m.media-amazon.com/images/I/419V2D2OlML.jpg\",\n      \"description\": \"Twitch streamer, singer-songwriter and producer JVNA presents her debut album \\\"Hope in Chaos\\\".\"\n    },\n    {\n      \"title\": \"Among Us\",\n      \"id\": \"B08ZDWR371\",\n      \"image_url\": \"https://m.media-amazon.com/images/I/414O3CYQguL.jpg\",\n      \"description\": \"Traverse space, do tasks, and eject the Impostors in this official Among Us playlist!\"\n    }\n  ],\n  \"pagination\": {\n    \"cursor\": \"eyJiIjpudWxsLCJhIjp7Ik9mZnNldCI6MjB9fQ\"\n  }\n}\n\n```\n\nGets a single playlist.\n\n```\ncurl -X GET 'https://api.twitch.tv/helix/soundtrack/playlists?id=B0912YMKSL' \\\n-H 'Authorization: Bearer 4a4x78f5wqvkybms7mxfist3jmzul' \\\n-H 'Client-Id: t214nt8z1rdtbj69hyarjvh5mi6fh'\n\n```\n\n### Example Response\n\n```\n{\n  \"data\": [\n    {\n      \"title\": \"Night Shift\",\n      \"id\": \"B0912YMKSL\",\n      \"image_url\": \"https://m.media-amazon.com/images/I/41UoIaB4VaL.jpg\",\n      \"description\": \"R&B to ride out to.\"\n    }\n  ],\n  \"pagination\": {}\n}\n\n```"
  },
  {
    "id": "get-stream-key",
    "name": "Get Stream Key",
    "resource": "Streams",
    "description": "Gets the channel’s stream key.",
    "descriptionFull": [
      "Gets the channel’s stream key."
    ],
    "authentication": [
      "Requires a user access token that includes the **channel:read:stream\\_key** scope."
    ],
    "authorization": [],
    "method": "https://api.twitch.tv/helix/streams/key",
    "requestBody": {
      "description": [],
      "parameters": []
    },
    "requestQueryParams": {
      "description": [],
      "parameters": [
        {
          "name": "broadcaster_id",
          "type": "String",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "The ID of the broadcaster that owns the channel. The ID must match the user ID in the access token.",
          "children": []
        }
      ]
    },
    "responseBody": {
      "description": [],
      "parameters": [
        {
          "name": "data",
          "type": "Object[]",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "A list that contains the channel’s stream key.",
          "children": [
            {
              "name": "stream_key",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The channel’s stream key.",
              "children": []
            }
          ]
        }
      ]
    },
    "responseCodes": [
      [
        "200 OK",
        "Successfully retrieved the stream’s key."
      ],
      [
        "400 Bad Request",
        "* The _broadcaster\\_id_ field is required.\n* The ID in the _broadcaster\\_id_ field is not valid."
      ],
      [
        "401 Unauthorized",
        "* The ID in _broadcaster\\_id_ must match the user ID in the access token.\n* The Authorization header is required and must contain a user access token.\n* The user access token must include the **channel:read:stream\\_key** scope.\n* The access token is not valid.\n* The client ID specified in the Client-Id header must match the client ID specified in the access token."
      ]
    ],
    "examples": "### Example Request\n\n```\ncurl -X GET 'https://api.twitch.tv/helix/streams/key' \\\n-H 'Authorization: Bearer cfabdegwdoklmawdzdo98xt2fo512y' \\\n-H 'Client-Id: uo6dggojyb8d6soh92zknwmi5ej1q2'\n\n```\n\n### Example Response\n\n```\n{\n  \"data\": [\n    {\n      \"stream_key\": \"live_44322889_a34ub37c8ajv98a0\"\n    },\n  ]\n}\n\n```"
  },
  {
    "id": "get-streams",
    "name": "Get Streams",
    "resource": "Streams",
    "description": "Gets a list of all broadcasters that are streaming.",
    "descriptionFull": [
      "Gets a list of all broadcasters that are streaming. The list is in descending order by the number of viewers watching the stream. Because viewers come and go during a stream, it’s possible to find duplicate or missing streams in the list as you page through the results."
    ],
    "authentication": [
      "Requires an app access token or user access token."
    ],
    "authorization": [],
    "url": "https://api.twitch.tv/helix/streams",
    "method": "GET",
    "requestBody": {
      "description": [],
      "parameters": []
    },
    "requestQueryParams": {
      "description": [],
      "parameters": [
        {
          "name": "user_id",
          "type": "String",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "A user ID used to filter the list of streams. Returns only the streams of those users that are broadcasting. You may specify a maximum of 100 IDs. To specify multiple IDs, include the _user\\_id_ parameter for each user. For example, `&user_id=1234&user_id=5678`.",
          "children": []
        },
        {
          "name": "user_login",
          "type": "String",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "A user login name used to filter the list of streams. Returns only the streams of those users that are broadcasting. You may specify a maximum of 100 login names. To specify multiple names, include the _user\\_login_ parameter for each user. For example, `&user_login=foo&user_login=bar`.",
          "children": []
        },
        {
          "name": "game_id",
          "type": "String",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "A game (category) ID used to filter the list of streams. Returns only the streams that are broadcasting the game (category). You may specify a maximum of 100 IDs. To specify multiple IDs, include the _game\\_id_ parameter for each game. For example, `&game_id=9876&game_id=5432`.",
          "children": []
        },
        {
          "name": "type",
          "type": "String",
          "possibleValues": [
            "all",
            "live"
          ],
          "required": false,
          "depth": 0,
          "description": "The type of stream to filter the list of streams by. Possible values are:  \n  \n* all\n* live\n  \nThe default is _all_.",
          "children": []
        },
        {
          "name": "language",
          "type": "String",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "A language code used to filter the list of streams. Returns only streams that broadcast in the specified language. Specify the language using an ISO 639-1 two-letter language code or _other_ if the broadcast uses a language not in the list of [supported stream languages](https://help.twitch.tv/s/article/languages-on-twitch#streamlang).  \n  \nYou may specify a maximum of 100 language codes. To specify multiple languages, include the _language_ parameter for each language. For example, `&language=de&language=fr`.",
          "children": []
        },
        {
          "name": "first",
          "type": "Integer",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "The maximum number of items to return per page in the response. The minimum page size is 1 item per page and the maximum is 100 items per page. The default is 20.",
          "children": []
        },
        {
          "name": "before",
          "type": "String",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "The cursor used to get the previous page of results. The **Pagination** object in the response contains the cursor’s value. [Read More](https://dev.twitch.tv/docs/api/guide#pagination)",
          "children": []
        },
        {
          "name": "after",
          "type": "String",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "The cursor used to get the next page of results. The **Pagination** object in the response contains the cursor’s value. [Read More](https://dev.twitch.tv/docs/api/guide#pagination)",
          "children": []
        }
      ]
    },
    "responseBody": {
      "description": [],
      "parameters": [
        {
          "name": "data",
          "type": "Object[]",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "The list of streams.",
          "children": [
            {
              "name": "id",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "An ID that identifies the stream. You can use this ID later to look up the video on demand (VOD).",
              "children": []
            },
            {
              "name": "user_id",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The ID of the user that’s broadcasting the stream.",
              "children": []
            },
            {
              "name": "user_login",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The user’s login name.",
              "children": []
            },
            {
              "name": "user_name",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The user’s display name.",
              "children": []
            },
            {
              "name": "game_id",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The ID of the category or game being played.",
              "children": []
            },
            {
              "name": "game_name",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The name of the category or game being played.",
              "children": []
            },
            {
              "name": "type",
              "type": "String",
              "possibleValues": [
                "live"
              ],
              "required": null,
              "depth": 1,
              "description": "The type of stream. Possible values are:  \n  \n* live\n  \nIf an error occurs, this field is set to an empty string.",
              "children": []
            },
            {
              "name": "title",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The stream’s title. Is an empty string if not set.",
              "children": []
            },
            {
              "name": "viewer_count",
              "type": "Integer",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The number of users watching the stream.",
              "children": []
            },
            {
              "name": "started_at",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The UTC date and time (in RFC3339 format) of when the broadcast began.",
              "children": []
            },
            {
              "name": "language",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The language that the stream uses. This is an ISO 639-1 two-letter language code or _other_ if the stream uses a language not in the list of [supported stream languages](https://help.twitch.tv/s/article/languages-on-twitch#streamlang).",
              "children": []
            },
            {
              "name": "thumbnail_url",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "A URL to an image of a frame from the last 5 minutes of the stream. Replace the width and height placeholders in the URL (`{width}x{height}`) with the size of the image you want, in pixels.",
              "children": []
            },
            {
              "name": "tag_ids",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The IDs of the tags applied to the stream. To get a tag’s name, use the [Get All Stream Tags](https://dev.twitch.tv/docs/api/reference#get-all-stream-tags) endpoint. For a list of possible tags, see [List of All Tags](https://www.twitch.tv/directory/all/tags).",
              "children": []
            },
            {
              "name": "is_mature",
              "type": "Boolean",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "A Boolean value that indicates whether the stream is meant for mature audiences.",
              "children": []
            }
          ]
        },
        {
          "name": "pagination",
          "type": "Object",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "The information used to page through the list of results. The object is empty if there are no more pages left to page through. [Read More](https://dev.twitch.tv/docs/api/guide#pagination)",
          "children": [
            {
              "name": "cursor",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The cursor used to get the next page of results. Set the request’s _after_ or _before_ query parameter to this value depending on whether you’re paging forwards or backwards.",
              "children": []
            }
          ]
        }
      ]
    },
    "responseCodes": [
      [
        "200 OK",
        "Successfully retrieved the list of streams."
      ],
      [
        "400 Bad Request",
        "* The value in the _type_ query parameter is not valid."
      ],
      [
        "401 Unauthorized",
        "* The Authorization header is required and must specify an app access token or user access token.\n* The access token is not valid.\n* The ID in the Client-Id header must match the Client ID in the access token."
      ]
    ],
    "examples": "### Example Request\n\nGets information about the 20 most active streams.\n\n```\ncurl -X GET 'https://api.twitch.tv/helix/streams' \\\n-H 'Authorization: Bearer 2gbdx6oar67tqtcmt49t3wpcgycthx' \\\n-H 'Client-Id: wbmytr93xzw8zbg0p1izqyzzc5mbiz'\n\n```\n\n### Example Response\n\n```\n{\n  \"data\": [\n    {\n      \"id\": \"41375541868\",\n      \"user_id\": \"459331509\",\n      \"user_login\": \"auronplay\",\n      \"user_name\": \"auronplay\",\n      \"game_id\": \"494131\",\n      \"game_name\": \"Little Nightmares\",\n      \"type\": \"live\",\n      \"title\": \"hablamos y le damos a Little Nightmares 1\",\n      \"viewer_count\": 78365,\n      \"started_at\": \"2021-03-10T15:04:21Z\",\n      \"language\": \"es\",\n      \"thumbnail_url\": \"https://static-cdn.jtvnw.net/previews-ttv/live_user_auronplay-{width}x{height}.jpg\",\n      \"tag_ids\": [\n        \"d4bb9c58-2141-4881-bcdc-3fe0505457d1\"\n      ],\n      \"is_mature\": false\n    },\n    ...\n  ],\n  \"pagination\": {\n    \"cursor\": \"eyJiIjp7IkN1cnNvciI6ImV5SnpJam8zT0RNMk5TNDBORFF4TlRjMU1UY3hOU3dpWkNJNlptRnNjMlVzSW5RaU9uUnlkV1Y5In0sImEiOnsiQ3Vyc29yIjoiZXlKeklqb3hOVGs0TkM0MU56RXhNekExTVRZNU1ESXNJbVFpT21aaGJITmxMQ0owSWpwMGNuVmxmUT09In19\"\n  }\n}\n\n```\n\n### Example Request\n\nGets streams for the specified logins. If the user is not live, the response doesn’t include them.\n\n```\ncurl -X GET\n'https://api.twitch.tv/helix/streams?user_login=afro&user_login=cohhcarnage&user_login=lana_lux' \\\n-H 'Authorization: Bearer 2gbdx6oar67tqtcmt49t3wpcgycthx' \\\n-H 'Client-Id: uo6dggojyb8d6soh92zknwmi5ej1q2'\n\n```\n\n### Example Response\n\n```\n{\n  \"data\": [\n    {\n      \"id\": \"40952121085\",\n      \"user_id\": \"101051819\",\n      \"user_login\": \"afro\",\n      \"user_name\": \"Afro\",\n      \"game_id\": \"32982\",\n      \"game_name\": \"Grand Theft Auto V\",\n      \"type\": \"live\",\n      \"title\": \"Jacob: Digital Den Laptops & Routers | NoPixel | !MAINGEAR !FCF\",\n      \"viewer_count\": 1490,\n      \"started_at\": \"2021-03-10T03:18:11Z\",\n      \"language\": \"en\",\n      \"thumbnail_url\": \"https://static-cdn.jtvnw.net/previews-ttv/live_user_afro-{width}x{height}.jpg\",\n      \"tag_ids\": [\n        \"6ea6bca4-4712-4ab9-a906-e3336a9d8039\"\n      ],\n      \"is_mature\": false\n    },\n    ...\n  ],\n  \"pagination\": {}\n}\n\n```"
  },
  {
    "id": "get-followed-streams",
    "name": "Get Followed Streams",
    "resource": "Streams",
    "description": "Gets a list of live streams of broadcasters that the specified user follows.",
    "descriptionFull": [
      "Gets a list of live streams of broadcasters that the specified user follows."
    ],
    "authentication": [
      "Requires a user access token that includes the **user:read:follows** scope."
    ],
    "authorization": [],
    "url": "https://api.twitch.tv/helix/streams/followed",
    "method": "GET",
    "requestBody": {
      "description": [],
      "parameters": []
    },
    "requestQueryParams": {
      "description": [],
      "parameters": [
        {
          "name": "user_id",
          "type": "String",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "The ID of the user whose list of followed streams you want to get. This ID must match the user ID in the access token.",
          "children": []
        },
        {
          "name": "first",
          "type": "Integer",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "The maximum number of items to return per page in the response. The minimum page size is 1 item per page and the maximum is 100 items per page. The default is 100.",
          "children": []
        },
        {
          "name": "after",
          "type": "String",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "The cursor used to get the next page of results. The **Pagination** object in the response contains the cursor’s value. [Read More](https://dev.twitch.tv/docs/api/guide#pagination)",
          "children": []
        }
      ]
    },
    "responseBody": {
      "description": [],
      "parameters": [
        {
          "name": "data",
          "type": "Object[]",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "The list of live streams of broadcasters that the specified user follows. The list is in descending order by the number of viewers watching the stream. Because viewers come and go during a stream, it’s possible to find duplicate or missing streams in the list as you page through the results. The list is empty if none of the followed broadcasters are streaming live.",
          "children": [
            {
              "name": "id",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "An ID that identifies the stream. You can use this ID later to look up the video on demand (VOD).",
              "children": []
            },
            {
              "name": "user_id",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The ID of the user that’s broadcasting the stream.",
              "children": []
            },
            {
              "name": "user_login",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The user’s login name.",
              "children": []
            },
            {
              "name": "user_name",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The user’s display name.",
              "children": []
            },
            {
              "name": "game_id",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The ID of the category or game being played.",
              "children": []
            },
            {
              "name": "game_name",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The ID of the category or game being played.",
              "children": []
            },
            {
              "name": "type",
              "type": "String",
              "possibleValues": [
                "live"
              ],
              "required": null,
              "depth": 1,
              "description": "The type of stream. Possible values are:  \n  \n* live\n  \nIf an error occurs, this field is set to an empty string.",
              "children": []
            },
            {
              "name": "title",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The stream’s title. Is an empty string if not set.",
              "children": []
            },
            {
              "name": "viewer_count",
              "type": "Integer",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The number of users watching the stream.",
              "children": []
            },
            {
              "name": "started_at",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The UTC date and time (in RFC3339 format) of when the broadcast began.",
              "children": []
            },
            {
              "name": "language",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The language that the stream uses. This is an ISO 639-1 two-letter language code or _other_ if the stream uses a language not in the list of [supported stream languages](https://help.twitch.tv/s/article/languages-on-twitch#streamlang).",
              "children": []
            },
            {
              "name": "thumbnail_url",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "A URL to an image of a frame from the last 5 minutes of the stream. Replace the width and height placeholders in the URL (`{width}x{height}`) with the size of the image you want, in pixels.",
              "children": []
            },
            {
              "name": "tag_ids",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The IDs of the tags applied to the stream. To get a tag’s name, use the [Get All Stream Tags](https://dev.twitch.tv/docs/api/reference#get-all-stream-tags) endpoint. For a list of possible tags, see [List of All Tags](https://www.twitch.tv/directory/all/tags).",
              "children": []
            },
            {
              "name": "is_mature",
              "type": "Boolean",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "A Boolean value that indicates whether the stream is meant for mature audiences.",
              "children": []
            }
          ]
        },
        {
          "name": "pagination",
          "type": "Object",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "The information used to page through the list of results. The object is empty if there are no more pages left to page through. [Read More](https://dev.twitch.tv/docs/api/guide#pagination)",
          "children": [
            {
              "name": "cursor",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The cursor used to get the next page of results. Set the request’s _after_ query parameter to this value.",
              "children": []
            }
          ]
        }
      ]
    },
    "responseCodes": [
      [
        "200 OK",
        "Successfully retrieved the list of tags."
      ],
      [
        "400 Bad Request",
        "* The _user\\_id_ query parameter is required."
      ],
      [
        "401 Unauthorized",
        "* The ID in _user\\_id_ must match the user ID found in the access token.\n* The Authorization header is required and must contain a user access token.\n* The user access token must include the **user:read:follows** scope.\n* The OAuth token is not valid.\n* The client ID specified in the Client-Id header does not match the client ID specified in the access token."
      ]
    ],
    "examples": "### Example Request\n\nGets the streams that the broadcaster follows.\n\n```\ncurl -X GET 'https://api.twitch.tv/helix/streams/followed?user_id=141981764' \\\n-H 'Authorization: Bearer 2gbdx6oar67tqtcmt49t3wpcgycthx' \\\n-H 'Client-Id: wbmytr93xzw8zbg0p1izqyzzc5mbiz'\n\n```\n\n### Example Response\n\n```\n{\n  \"data\": [\n    {\n      \"id\": \"42170724654\",\n      \"user_id\": \"132954738\",\n      \"user_login\": \"aws\",\n      \"user_name\": \"AWS\",\n      \"game_id\": \"417752\",\n      \"game_name\": \"Talk Shows & Podcasts\",\n      \"type\": \"live\",\n      \"title\": \"AWS Howdy Partner! Y'all welcome ExtraHop to the show!\",\n      \"viewer_count\": 20,\n      \"started_at\": \"2021-03-31T20:57:26Z\",\n      \"language\": \"en\",\n      \"thumbnail_url\": \"https://static-cdn.jtvnw.net/previews-ttv/live_user_aws-{width}x{height}.jpg\",\n      \"tag_ids\": [\n        \"6ea6bca4-4712-4ab9-a906-e3336a9d8039\"\n      ]\n    },\n    ...\n  ],\n  \"pagination\": {\n    \"cursor\": \"eyJiIjp7IkN1cnNvciI6ImV5SnpJam8zT0RNMk5TNDBORFF4TlRjMU1UY3hOU3dpWkNJNlptRnNjMlVzSW5RaU9uUnlkV1Y5In0sImEiOnsiQ3Vyc29yIjoiZXlKeklqb3hOVGs0TkM0MU56RXhNekExTVRZNU1ESXNJbVFpT21aaGJITmxMQ0owSWpwMGNuVmxmUT09In19\"\n  }\n}\n\n```"
  },
  {
    "id": "create-stream-marker",
    "name": "Create Stream Marker",
    "resource": "Streams",
    "description": "Adds a marker to a live stream.",
    "descriptionFull": [
      "Adds a marker to a live stream. A marker is an arbitrary point in a live stream that the broadcaster or editor wants to mark, so they can return to that spot later to create video highlights (see Video Producer, Highlights in the Twitch UX).",
      "You may not add markers:",
      "* If the stream is not live\n* If the stream has not enabled video on demand (VOD)\n* If the stream is a premiere (a live, first-viewing event that combines uploaded videos with live chat)\n* If the stream is a rerun of a past broadcast, including past premieres."
    ],
    "authentication": [
      "Requires a user access token that includes the **channel:manage:broadcast** scope."
    ],
    "authorization": [],
    "url": "https://api.twitch.tv/helix/streams/markers",
    "method": "POST",
    "requestBody": {
      "description": [],
      "parameters": [
        {
          "name": "user_id",
          "type": "String",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "The ID of the broadcaster that’s streaming content. This ID must match the user ID in the access token or the user in the access token must be one of the broadcaster’s editors.",
          "children": []
        },
        {
          "name": "description",
          "type": "String",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "A short description of the marker to help the user remember why they marked the location. The maximum length of the description is 140 characters.",
          "children": []
        }
      ]
    },
    "requestQueryParams": {
      "description": [],
      "parameters": []
    },
    "responseBody": {
      "description": [],
      "parameters": [
        {
          "name": "data",
          "type": "Object[]",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "A list that contains the single marker that you added.",
          "children": [
            {
              "name": "id",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 2,
              "description": "An ID that identifies this marker.",
              "children": [
                {
                  "name": "created_at",
                  "type": "String",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "The UTC date and time (in RFC3339 format) of when the user created the marker.",
                  "children": []
                },
                {
                  "name": "position_seconds",
                  "type": "Integer",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "The relative offset (in seconds) of the marker from the beginning of the stream.",
                  "children": []
                },
                {
                  "name": "description",
                  "type": "String",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "A description that the user gave the marker to help them remember why they marked the location.",
                  "children": []
                }
              ]
            }
          ]
        }
      ]
    },
    "responseCodes": [
      [
        "200 OK",
        "Successfully created the marker."
      ],
      [
        "400 Bad Request",
        "* The `user_id` field is required.\n* The length of the string in the `description` field is too long."
      ],
      [
        "401 Unauthorized",
        "* The Authorization header is required and must contain a user access token.\n* The user access token must include the **user:manage:broadcast** scope.\n* The access token is not valid.\n* The client ID specified in the Client-Id header does not match the client ID specified in the access token."
      ],
      [
        "403 Forbidden",
        "* The user in the access token is not authorized to create video markers for the user in the `user_id` field. The user in the access token must own the video or they must be one of the broadcaster's editors."
      ],
      [
        "404 Not Found",
        "* The user in the `user_id` field is not streaming live.\n* The ID in the user\\_id field is not valid.\n* The user hasn't enabled video on demand (VOD)."
      ]
    ],
    "examples": "### Example Request\n\nCreates a marker at the current location in user 123’s stream.\n\n```\ncurl -X POST 'https://api.twitch.tv/helix/streams/markers' \\\n-H 'Authorization: Bearer cfabdegwdoklmawdzdo98xt2fo512y' \\\n-H 'Client-Id: uo6dggojyb8d6soh92zknwmi5ej1q2' \\\n-H 'Content-Type: application/json' \\\n-d '{\"user_id\":\"123\", \"description\":\"hello, this is a marker!\"}'\n\n```\n\n### Example Response\n\n```\n{\n  \"data\": [\n     {\n        \"id\": 123,\n        \"created_at\": \"2018-08-20T20:10:03Z\",\n        \"description\": \"hello, this is a marker!\",\n        \"position_seconds\": 244\n     }\n  ]\n}\n\n```"
  },
  {
    "id": "get-stream-markers",
    "name": "Get Stream Markers",
    "resource": "Streams",
    "description": "Gets a list of markers from the user’s most recent stream or from the specified VOD/video.",
    "descriptionFull": [
      "Gets a list of markers from the user’s most recent stream or from the specified VOD/video. A marker is an arbitrary point in a live stream that the broadcaster or editor marked, so they can return to that spot later to create video highlights (see Video Producer, Highlights in the Twitch UX)."
    ],
    "authentication": [
      "Requires a user access token that includes the **user:read:broadcast** scope."
    ],
    "authorization": [],
    "url": "https://api.twitch.tv/helix/streams/markers",
    "method": "GET",
    "requestBody": {
      "description": [],
      "parameters": []
    },
    "requestQueryParams": {
      "description": [],
      "parameters": []
    },
    "responseBody": {
      "description": [],
      "parameters": [
        {
          "name": "data",
          "type": "Object[]",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "The list of markers grouped by the user that created the marks.",
          "children": [
            {
              "name": "user_id",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The ID of the user that created the marker.",
              "children": []
            },
            {
              "name": "user_name",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The user’s display name.",
              "children": []
            },
            {
              "name": "user_login",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The user’s login name.",
              "children": []
            },
            {
              "name": "videos",
              "type": "Object[]",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "A list of videos that contain markers. The list contains a single video.",
              "children": []
            },
            {
              "name": "video_id",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "An ID that identifies this video.",
              "children": []
            },
            {
              "name": "markers",
              "type": "Object[]",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The list of markers in this video. The list in ascending order by when the marker was created.",
              "children": [
                {
                  "name": "id",
                  "type": "String",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "An ID that identifies this marker.",
                  "children": []
                },
                {
                  "name": "created_at",
                  "type": "String",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "The UTC date and time (in RFC3339 format) of when the user created the marker.",
                  "children": []
                },
                {
                  "name": "description",
                  "type": "String",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "The description that the user gave the marker to help them remember why they marked the location. Is an empty string if the user didn’t provide one.",
                  "children": []
                },
                {
                  "name": "position_seconds",
                  "type": "Integer",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "The relative offset (in seconds) of the marker from the beginning of the stream.",
                  "children": []
                },
                {
                  "name": "url",
                  "type": "String",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "A URL to the video.",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "name": "pagination",
          "type": "Object",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "The information used to page through the list of results. The object is empty if there are no more pages left to page through. [Read More](https://dev.twitch.tv/docs/api/guide#pagination)",
          "children": [
            {
              "name": "cursor",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The cursor used to get the next page of results. Set the request’s _after_ or _before_ query parameter to this value depending on whether you’re paging forwards or backwards.",
              "children": []
            }
          ]
        }
      ]
    },
    "responseCodes": [
      [
        "200 OK",
        "Successfully retrieved the list of markers."
      ],
      [
        "400 Bad Request",
        "* The request must specify either the _user\\_id_ or _video\\_id_ query parameter, but not both."
      ],
      [
        "401 Unauthorized",
        "* The Authorization header is required and must contain a user access token.\n* The user access token must include the **user:read:broadcast** or **user:manage:broadcast** scope.\n* The access token is not valid.\n* The client ID specified in the Client-Id header does not match the client ID specified in the access token."
      ],
      [
        "403 Forbidden",
        "* The user in the access token is not authorized to get the video's markers. The user in the access token must own the video or be one of the broadcaster's editors."
      ],
      [
        "404 Not Found",
        "* The user specified in the _user\\_id_ query parameter doesn't have videos."
      ]
    ],
    "examples": "### Example Request\n\nGets the first 5 markers in the most recent stream of user 123.\n\n```\ncurl -X GET\n'https://api.twitch.tv/helix/streams/markers?user_id=123&first=5' \\\n-H 'Authorization: Bearer cfabdegwdoklmawdzdo98xt2fo512y' \\\n-H 'Client-Id: uo6dggojyb8d6soh92zknwmi5ej1q2'\n\n```\n\n### Example Response\n\n```\n{\n  \"data\": [\n    {\n      \"user_id\": \"123\",\n      \"user_name\": \"TwitchName\",\n      \"user_login\": \"twitchname\",\n      \"videos\": [\n        {\n          \"video_id\": \"456\",\n          \"markers\": [\n            {\n              \"id\": \"106b8d6243a4f883d25ad75e6cdffdc4\",\n              \"created_at\": \"2018-08-20T20:10:03Z\",\n              \"description\": \"hello, this is a marker!\",\n              \"position_seconds\": 244,\n              \"URL\": \"https://twitch.tv/twitchname/manager/highlighter/456?t=0h4m06s\"\n            },\n            ...\n          ]\n        }\n      ]\n    }\n  ],\n  \"pagination\": {\n    \"cursor\": \"eyJiIjpudWxsLCJhIjoiMjk1MjA0Mzk3OjI1Mzpib29rbWFyazoxMDZiOGQ1Y\"\n  }\n}\n\n```"
  },
  {
    "id": "get-broadcaster-subscriptions",
    "name": "Get Broadcaster Subscriptions",
    "resource": "Subscriptions",
    "description": "Gets a list of users that subscribe to the specified broadcaster.",
    "descriptionFull": [
      "Gets a list of users that subscribe to the specified broadcaster."
    ],
    "authentication": [
      "Requires a user access token that includes the **channel:read:subscriptions** scope.",
      "A Twitch extensions may use an app access token if the broadcaster has granted the **channel:read:subscriptions** scope from within the Twitch Extensions manager."
    ],
    "authorization": [],
    "url": "https://api.twitch.tv/helix/subscriptions",
    "method": "GET",
    "requestBody": {
      "description": [],
      "parameters": []
    },
    "requestQueryParams": {
      "description": [],
      "parameters": []
    },
    "responseBody": {
      "description": [],
      "parameters": [
        {
          "name": "data",
          "type": "Object[]",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "The list of users that subscribe to the broadcaster. The list is empty if the broadcaster has no subscribers.",
          "children": [
            {
              "name": "broadcaster_id",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "An ID that identifies the broadcaster.",
              "children": []
            },
            {
              "name": "broadcaster_login",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The broadcaster’s login name.",
              "children": []
            },
            {
              "name": "broadcaster_name",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The broadcaster’s display name.",
              "children": []
            },
            {
              "name": "gifter_id",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The ID of the user that gifted the subscription to the user. Is an empty string if `is_gift` is **false**.",
              "children": []
            },
            {
              "name": "gifter_login",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The gifter’s login name. Is an empty string if `is_gift` is **false**.",
              "children": []
            },
            {
              "name": "gifter_name",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The gifter’s display name. Is an empty string if `is_gift` is **false**.",
              "children": []
            },
            {
              "name": "is_gift",
              "type": "Boolean",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "A Boolean value that determines whether the subscription is a gift subscription. Is **true** if the subscription was gifted.",
              "children": []
            },
            {
              "name": "plan_name",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The name of the subscription.",
              "children": []
            },
            {
              "name": "tier",
              "type": "String",
              "possibleValues": [
                "1000",
                "2000",
                "3000"
              ],
              "required": null,
              "depth": 1,
              "description": "The type of subscription. Possible values are:  \n  \n* 1000 — Tier 1\n* 2000 — Tier 2\n* 3000 — Tier 3",
              "children": []
            },
            {
              "name": "user_id",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "An ID that identifies the subscribing user.",
              "children": []
            },
            {
              "name": "user_name",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The user’s display name.",
              "children": []
            },
            {
              "name": "user_login",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The user’s login name.",
              "children": []
            }
          ]
        },
        {
          "name": "pagination",
          "type": "Object",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "Contains the information used to page through the list of results. The object is empty if there are no more pages left to page through. [Read More](https://dev.twitch.tv/docs/api/guide#pagination)",
          "children": [
            {
              "name": "cursor",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The cursor used to get the next or previous page of results. Use the cursor to set the request’s _after_ or _before_ query parameter depending on whether you’re paging forwards or backwards.",
              "children": []
            }
          ]
        },
        {
          "name": "points",
          "type": "Integer",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "The current number of subscriber points earned by this broadcaster. Points are based on the subscription tier of each user that subscribes to this broadcaster. For example, a Tier 1 subscription is worth 1 point, Tier 2 is worth 2 points, and Tier 3 is worth 6 points. The number of points determines the number of emote slots that are unlocked for the broadcaster (see [Subscriber Emote Slots](https://help.twitch.tv/s/article/subscriber-emote-guide#emoteslots)).",
          "children": []
        },
        {
          "name": "total",
          "type": "Integer",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "The total number of users that subscribe to this broadcaster.",
          "children": []
        }
      ]
    },
    "responseCodes": [
      [
        "204 No Content",
        "Successfully retrieved the broadcaster’s list of subscribers."
      ],
      [
        "400 Bad Request",
        "* The _broadcaster\\_id_ query parameter is required."
      ],
      [
        "401 Unauthorized",
        "* The ID in _broadcaster\\_id_ must match the user ID found in the request’s OAuth token.\n* The Authorization header is required and must contain a user access token.\n* The user access token must include the **channel:read:subscriptions** scope.\n* The access token is not valid.\n* The client ID specified in the Client-Id header does not match the client ID specified in the access token."
      ]
    ],
    "examples": "### Example Request\n\n```\ncurl -X GET 'https://api.twitch.tv/helix/subscriptions?broadcaster_id=141981764' \\\n-H 'Authorization: Bearer cfabdegwdoklmawdzdo98xt2fo512y' \\\n-H 'Client-Id: uo6dggojyb8d6soh92zknwmi5ej1q2'\n\n```\n\n### Example Response\n\n```\n{\n  \"data\": [\n    {\n      \"broadcaster_id\": \"141981764\",\n      \"broadcaster_login\": \"twitchdev\",\n      \"broadcaster_name\": \"TwitchDev\",\n      \"gifter_id\": \"12826\",\n      \"gifter_login\": \"twitch\",\n      \"gifter_name\": \"Twitch\",\n      \"is_gift\": true,\n      \"tier\": \"1000\",\n      \"plan_name\": \"Channel Subscription (twitchdev)\",\n      \"user_id\": \"527115020\",\n      \"user_name\": \"twitchgaming\",\n      \"user_login\": \"twitchgaming\"\n    },\n    ...\n  ],\n  \"pagination\": {\n    \"cursor\": \"xxxx\"\n  },\n  \"total\": 13,\n  \"points\": 13\n}\n\n```"
  },
  {
    "id": "check-user-subscription",
    "name": "Check User Subscription",
    "resource": "Subscriptions",
    "description": "Checks whether the user subscribes to the broadcaster’s channel.",
    "descriptionFull": [
      "Checks whether the user subscribes to the broadcaster’s channel."
    ],
    "authentication": [
      "Requires a user access token that includes the **user:read:subscriptions** scope.",
      "A Twitch extensions may use an app access token if the broadcaster has granted the **user:read:subscriptions** scope from within the Twitch Extensions manager."
    ],
    "authorization": [],
    "url": "https://api.twitch.tv/helix/subscriptions/user",
    "method": "GET",
    "requestBody": {
      "description": [],
      "parameters": []
    },
    "requestQueryParams": {
      "description": [],
      "parameters": [
        {
          "name": "broadcaster_id",
          "type": "String",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "The ID of a partner or affiliate broadcaster.",
          "children": []
        },
        {
          "name": "user_id",
          "type": "String",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "The ID of the user that you’re checking to see whether they subscribe to the broadcaster in _broadcaster\\_id_. This ID must match the user ID in the access Token.",
          "children": []
        }
      ]
    },
    "responseBody": {
      "description": [],
      "parameters": [
        {
          "name": "data",
          "type": "Object[]",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "A list that contains a single object with information about the user’s subscription.",
          "children": [
            {
              "name": "broadcaster_id",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "An ID that identifies the broadcaster.",
              "children": []
            },
            {
              "name": "broadcaster_login",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The broadcaster’s login name.",
              "children": []
            },
            {
              "name": "broadcaster_name",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The broadcaster’s display name.",
              "children": []
            },
            {
              "name": "gifter_id",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The ID of the user that gifted the subscription. The object includes this field only if `is_gift` is **true**.",
              "children": []
            },
            {
              "name": "gifter_login",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The gifter’s login name. The object includes this field only if `is_gift` is **true**.",
              "children": []
            },
            {
              "name": "gifter_name",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The gifter’s display name. The object includes this field only if `is_gift` is **true**.",
              "children": []
            },
            {
              "name": "is_gift",
              "type": "Boolean",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "A Boolean value that determines whether the subscription is a gift subscription. Is **true** if the subscription was gifted.",
              "children": []
            },
            {
              "name": "tier",
              "type": "String",
              "possibleValues": [
                "1000",
                "2000",
                "3000"
              ],
              "required": null,
              "depth": 1,
              "description": "The type of subscription. Possible values are:  \n  \n* 1000 — Tier 1\n* 2000 — Tier 2\n* 3000 — Tier 3",
              "children": []
            }
          ]
        }
      ]
    },
    "responseCodes": [
      [
        "200 OK",
        "The user subscribes to the broadcaster."
      ],
      [
        "400 Bad Request",
        "* The _broadcaster\\_id_ query parameter is required.\n* The _user\\_id_ query parameter is required."
      ],
      [
        "401 Unauthorized",
        "* The ID in _user\\_id_ must match the user ID found in the request’s OAuth token.\n* The Authorization header is required and must contain a user access token.\n* The user access token must include the **user:read:subscriptions** scope.\n* The access token is not valid.\n* The client ID specified in the Client-Id header does not match the client ID specified in the access token."
      ],
      [
        "404 Not Found",
        "* The user in _user\\_id_ does not subscribe to the broadcaster in _broadcaster\\_id_."
      ]
    ],
    "examples": "### Example Request\n\nChecks whether the user subscribes to the broadcaster’s channel.\n\n```\ncurl -X GET 'https://api.twitch.tv/helix/subscriptions/user?broadcaster_id=149747285&user_id=141981764' \\\n-H 'Authorization: Bearer 2gbdx6oar67tqtcmt49t3wpcgycthx' \\\n-H 'Client-Id: wbmytr93xzw8zbg0p1izqyzzc5mbiz'\n\n```\n\n### Example Response\n\n```\n{\n  \"data\": [\n    {\n      \"broadcaster_id\": \"149747285\",\n      \"broadcaster_name\": \"TwitchPresents\",\n      \"broadcaster_login\": \"twitchpresents\",\n      \"is_gift\": false,\n      \"tier\": \"1000\"\n    }\n  ]\n}\n\n```"
  },
  {
    "id": "get-all-stream-tags",
    "name": "Get All Stream Tags",
    "resource": "Tags",
    "description": "Gets the list of all stream tags that Twitch defines. You can also filter the list by one or more tag IDs.",
    "descriptionFull": [
      "Gets a list of all stream tags that Twitch defines. The broadcaster may apply any of these to their channel except automatic tags.",
      "For an online list of the possible tags, see [List of All Tags](https://www.twitch.tv/directory/all/tags)."
    ],
    "authentication": [
      "Requires an app access token or user access token."
    ],
    "authorization": [],
    "url": "https://api.twitch.tv/helix/tags/streams",
    "method": "GET",
    "requestBody": {
      "description": [],
      "parameters": []
    },
    "requestQueryParams": {
      "description": [],
      "parameters": [
        {
          "name": "tag_id",
          "type": "String",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "The ID of the tag to get. Used to filter the list of tags. To specify more than one tag, include the _tag\\_id_ parameter for each tag to get. For example, `tag_id=1234&tag_id=5678`. The maximum number of IDs you may specify is 100\\. Ignores invalid IDs but not duplicate IDs.",
          "children": []
        },
        {
          "name": "first",
          "type": "Integer",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "The maximum number of items to return per page in the response. The minimum page size is 1 item per page and the maximum is 100\\. The default is 20.",
          "children": []
        },
        {
          "name": "after",
          "type": "String",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "The cursor used to get the next page of results. The **Pagination** object in the response contains the cursor’s value. [Read More](https://dev.twitch.tv/docs/api/guide#pagination)",
          "children": []
        }
      ]
    },
    "responseBody": {
      "description": [],
      "parameters": [
        {
          "name": "data",
          "type": "Object[]",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "The list of stream tags that the broadcaster can apply to their channel.",
          "children": [
            {
              "name": "tag_id",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "An ID that identifies this tag.",
              "children": []
            },
            {
              "name": "is_auto",
              "type": "Boolean",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "A Boolean value that determines whether the tag is an automatic tag. An automatic tag is one that Twitch adds to the stream. Broadcasters may not add automatic tags to their channel. The value is **true** if the tag is an automatic tag; otherwise, **false**.",
              "children": []
            },
            {
              "name": "localization_names",
              "type": "map[string,string]",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "A dictionary that contains the localized names of the tag. The key is in the form, <locale>-<country/region>. For example, en-us. The value is the localized name.",
              "children": []
            },
            {
              "name": "localization_descriptions",
              "type": "map[string,string]",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "A dictionary that contains the localized descriptions of the tag. The key is in the form, <locale>-<country/region>. For example, en-us. The value is the localized description.",
              "children": []
            }
          ]
        },
        {
          "name": "pagination",
          "type": "Object",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "The information used to page through the list of results. The object is empty if there are no more pages left to page through. [Read More](https://dev.twitch.tv/docs/api/guide#pagination)",
          "children": [
            {
              "name": "cursor",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The cursor used to get the next page of results. Set the request’s _after_ query parameter to this value to page forwards through the results.",
              "children": []
            }
          ]
        }
      ]
    },
    "responseCodes": [
      [
        "200 OK",
        "Successfully retrieved the list of tags."
      ],
      [
        "400 Bad Request",
        "* The _tag\\_id_ query parameter is empty (for example, `&tag_id=`).\n* The list of tag IDs is too long."
      ],
      [
        "401 Unauthorized",
        "* The Authorization header is required and must specify an app access token or user access token.\n* The access token is not valid.\n* The ID in the Client-Id header must match the Client ID in the access token."
      ]
    ],
    "examples": "### Example Request\n\nGets the first page of stream tags that Twitch defines.\n\n```\ncurl -X GET 'https://api.twitch.tv/helix/tags/streams' \\\n-H 'Authorization: Bearer 2gbdx6oar67tqtcmt49t3wpcgycthx' \\\n-H 'Client-Id: uo6dggojyb8d6soh92zknwmi5ej1q2'\n\n```\n\n```\n# Twitch CLI example that gets the first page of stream tags.\ntwitch api get /tags/streams\n\n# Twitch CLI example that gets the specified stream tags.\ntwitch api get /tags/streams -q tag_id=39490173-ed5f-4271-96a8-26ab546ee1e9 -q tag_id=233f4789-1ad0-403c-aaf9-7d37a22264e7\n\n```\n\n### Example Response\n\n```\n{\n  \"data\": [\n    {\n      \"tag_id\": \"621fb5bf-5498-4d8f-b4ac-db4d40d401bf\",\n      \"is_auto\": false,\n      \"localization_names\": {\n        \"bg-bg\": \"Изчистване на 1 кредит\",\n        \"cs-cz\": \"1 čistý kredit\",\n        \"da-dk\": \"1 credit klaret\",\n        \"de-de\": \"Mit 1 Leben abschließen\",\n        \"el-gr\": \"1 μόνο πίστωση\",\n        \"en-us\": \"1 Credit Clear\",\n        ...\n      },\n      \"localization_descriptions\": {\n        \"bg-bg\": \"За потоци с акцент върху завършване на аркадна игра с монети, в която не се използва продължаване\",\n        \"cs-cz\": \"Pro vysílání s důrazem na plnění mincových arkádových her bez použití pokračování.\",\n        \"da-dk\": \"Til streams med vægt på at gennemføre et arkadespil uden at bruge continues\",\n        \"de-de\": \"Für Streams mit dem Ziel, ein Coin-op-Arcade-Game mit nur einem Leben abzuschließen.\",\n        \"el-gr\": \"Για μεταδόσεις με έμφαση στην ολοκλήρωση παλαιού τύπου ηλεκτρονικών παιχνιδιών που λειτουργούν με κέρμα, χωρίς να χρησιμοποιούν συνέχειες\",\n        \"en-us\": \"For streams with an emphasis on completing a coin-op arcade game without using any continues\",\n        ...\n      }\n    },\n    ...\n  ],\n  \"pagination\": {\n    \"cursor\": \"eyJiI...\"\n  }\n}\n\n```"
  },
  {
    "id": "get-stream-tags",
    "name": "Get Stream Tags",
    "resource": "Tags",
    "description": "Gets the list of stream tags that the broadcaster or Twitch added to their channel.",
    "descriptionFull": [
      "Gets the list of stream tags that the broadcaster or Twitch added to their channel."
    ],
    "authentication": [
      "Requires an app access token or user access token."
    ],
    "authorization": [],
    "url": "https://api.twitch.tv/helix/streams/tags",
    "method": "GET",
    "requestBody": {
      "description": [],
      "parameters": []
    },
    "requestQueryParams": {
      "description": [],
      "parameters": [
        {
          "name": "broadcaster_id",
          "type": "String",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "The ID of the broadcaster whose stream tags you want to get.",
          "children": []
        }
      ]
    },
    "responseBody": {
      "description": [],
      "parameters": [
        {
          "name": "data",
          "type": "Object[]",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "The list of stream tags. The list is empty if the broadcaster or Twitch hasn’t added tags to the broadcaster’s channel.",
          "children": [
            {
              "name": "tag_id",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "An ID that identifies this tag.",
              "children": []
            },
            {
              "name": "is_auto",
              "type": "Boolean",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "A Boolean value that determines whether the tag is an automatic tag. An automatic tag is one that Twitch adds to the stream. Broadcasters may not add automatic tags to their channel. The value is **true** if the tag is an automatic tag; otherwise, **false**.",
              "children": []
            },
            {
              "name": "localization_names",
              "type": "map[string,string]",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "A dictionary that contains the localized names of the tag. The key is in the form, <locale>-<coutry/region>. For example, en-us. The value is the localized name.",
              "children": []
            },
            {
              "name": "localization_descriptions",
              "type": "map[string,string]",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "A dictionary that contains the localized descriptions of the tag. The key is in the form, <locale>-<coutry/region>. For example, en-us. The value is the localized description.",
              "children": []
            }
          ]
        }
      ]
    },
    "responseCodes": [
      [
        "200 OK",
        "Successfully retrieved the list of tags."
      ],
      [
        "400 Bad Request",
        "* The _broadcaster\\_id_ field is required.\n* The ID in the _broadcaster\\_id_ field is not valid."
      ],
      [
        "401 Unauthorized",
        "* The Authorization header is required and must specify an app access token or user access token.\n* The access token is not valid.\n* The ID in the Client-Id header must match the Client ID in the access token."
      ]
    ],
    "examples": "### Example Request\n\nGets the TwitchGaming channel’s tags.\n\n```\ncurl -X GET\n'https://api.twitch.tv/helix/streams/tags?broadcaster_id=527115020' \\\n-H 'Authorization: Bearer cfabdegwdoklmawdzdo98xt2fo512y' \\\n-H 'Client-Id: uo6dggojyb8d6soh92zknwmi5ej1q2'\n\n```\n\n```\n# Twitch CLI example that gets the TwitchGaming channel's tags.\ntwitch api get /streams/tags -q broadcaster_id=527115020\n\n```\n\n### Example Response\n\n```\n{\n  \"data\": [\n    {\n      \"tag_id\": \"6ea6bca4-4712-4ab9-a906-e3336a9d8039\",\n      \"is_auto\": true,\n      \"localization_names\": {\n        \"bg-bg\": \"английски\",\n        \"cs-cz\": \"Angličtina\",\n        \"da-dk\": \"Engelsk\",\n        \"de-de\": \"Englisch\",\n        \"el-gr\": \"Αγγλικά\",\n        \"en-us\": \"English\",\n        ...\n      },\n      \"localization_descriptions\": {\n        \"bg-bg\": \"За потоци с използване на английски\",\n        \"cs-cz\": \"Pro vysílání obsahující angličtinu.\",\n        \"da-dk\": \"Til streams, hvori der indgår engelsk\",\n        \"de-de\": \"Für Streams auf Englisch.\",\n        \"el-gr\": \"Για μεταδόσεις που περιλαμβάνουν τη χρήση Αγγλικών\",\n        \"en-us\": \"For streams featuring the use of English\",\n        ...\n      }\n    }\n  ]\n}\n\n```"
  },
  {
    "id": "replace-stream-tags",
    "name": "Replace Stream Tags",
    "resource": "Tags",
    "description": "Applies one or more tags to the specified channel, overwriting existing tags.",
    "descriptionFull": [
      "Applies one or more tags to the specified channel, overwriting existing tags.",
      "**NOTE**: You may not specify automatic tags; the call fails if you specify automatic tags. Automatic tags are tags that Twitch applies to the channel. For a list of automatic tags, see [List of All Tags](https://www.twitch.tv/directory/all/tags). To get the list of possible tags programmatically, see [Get All Stream Tags](https://dev.twitch.tv/docs/api/reference#get-all-stream-tags)."
    ],
    "authentication": [
      "Requires a user access token that includes the **channel:manage:broadcast** scope."
    ],
    "authorization": [],
    "url": "https://api.twitch.tv/helix/streams/tags",
    "method": "PUT",
    "requestBody": {
      "description": [],
      "parameters": [
        {
          "name": "tag_ids",
          "type": "String[]",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "A list of IDs that identify the tags to apply to the channel. You may specify a maximum of five tags.  \n  \nTo remove all tags from the channel, set `tag_ids` to an empty array.",
          "children": []
        }
      ]
    },
    "requestQueryParams": {
      "description": [],
      "parameters": [
        {
          "name": "broadcaster_id",
          "type": "String",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "The ID of the broadcaster that owns the channel to apply the tags to. This ID must match the user ID in the access token.",
          "children": []
        }
      ]
    },
    "responseBody": {
      "description": [],
      "parameters": []
    },
    "responseCodes": [
      [
        "204 No Content",
        "Successfully replaced the stream’s tags."
      ],
      [
        "400 Bad Request",
        "* The tag ID <value> is not valid.\n* The list of tag IDs is too long."
      ],
      [
        "401 Unauthorized",
        "* The ID in _broadcaster\\_id_ must match the user ID in the access token.\n* The Authorization header is required and must contain a user access token.\n* The user access token must include the **channel:manage:broadcast** scope.\n* The access token is not valid.\n* The client ID specified in the Client-Id header must match the client ID specified in the access token."
      ],
      [
        "403 Forbidden",
        "* You may not add automatic tags."
      ]
    ],
    "examples": "### Example Request\n\nApplies two stream tags to channel 257788195.\n\n```\ncurl -X PUT 'https://api.twitch.tv/helix/streams/tags?broadcaster_id=257788195' \\\n-H 'Authorization: Bearer 2gbdx6oar67tqtcmt49t3wpcgycthx' \\\n-H 'Client-Id: uo6dggojyb8d6soh92zknwmi5ej1q2' \\\n-H 'Content-Type: application/json' \\\n-d '{\"tag_ids\":[\"621fb5bf-5498-4d8f-b4ac-db4d40d401bf\",\"52d7e4cc-633d-46f5-818c-bb59102d9549\"]}'\n\n```\n\n```\n# Twitch CLI example that adds two stream tags to the channel.\ntwitch api put /streams/tags -q broadcaster_id=1234567 -b '{\"tag_ids\":[\"621fb5bf-5498-4d8f-b4ac-db4d40d401bf\", \"52d7e4cc-633d-46f5-818c-bb59102d9549\"]}'\n\n# Twitch CLI example that removes all stream tags from the channel.\ntwitch api put /streams/tags -q broadcaster_id=1234567 -b '{\"tag_ids\":[]}'\n\n```"
  },
  {
    "id": "get-channel-teams",
    "name": "Get Channel Teams",
    "resource": "Teams",
    "description": "Gets the list of Twitch teams that the broadcaster is a member of.",
    "descriptionFull": [
      "Gets the list of Twitch teams that the broadcaster is a member of."
    ],
    "authentication": [
      "Requires an app access token or user access token."
    ],
    "authorization": [],
    "url": "https://api.twitch.tv/helix/teams/channel",
    "method": "GET",
    "requestBody": {
      "description": [],
      "parameters": []
    },
    "requestQueryParams": {
      "description": [],
      "parameters": [
        {
          "name": "broadcaster_id",
          "type": "String",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "The ID of the broadcaster whose teams you want to get.",
          "children": []
        }
      ]
    },
    "responseBody": {
      "description": [],
      "parameters": [
        {
          "name": "data",
          "type": "Object[]",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "The list of teams that the broadcaster is a member of.",
          "children": [
            {
              "name": "broadcaster_id",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "An ID that identifies the broadcaster.",
              "children": []
            },
            {
              "name": "broadcaster_login",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The broadcaster’s login name.",
              "children": []
            },
            {
              "name": "broadcaster_name",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The broadcaster’s display name.",
              "children": []
            },
            {
              "name": "background_image_url",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "A URL to the team’s background image.",
              "children": []
            },
            {
              "name": "banner",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "A URL to the team’s banner.",
              "children": []
            },
            {
              "name": "created_at",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The UTC date and time (in RFC3339 format) of when the team was created.",
              "children": []
            },
            {
              "name": "updated_at",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The UTC date and time (in RFC3339 format) of the last time the team was updated.",
              "children": []
            },
            {
              "name": "info",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The team’s description. The description may contain formatting such as Markdown, HTML, newline (\\\\n) characters, etc.",
              "children": []
            },
            {
              "name": "thumbnail_url",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "A URL to a thumbnail image of the team’s logo.",
              "children": []
            },
            {
              "name": "team_name",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The team’s name.",
              "children": []
            },
            {
              "name": "team_display_name",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The team’s display name.",
              "children": []
            },
            {
              "name": "id",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "An ID that identifies the team.",
              "children": []
            }
          ]
        }
      ]
    },
    "responseCodes": [
      [
        "200 OK",
        "Successfully retrieved the list of teams."
      ],
      [
        "400 Bad Request",
        "* The _broadcaster\\_id_ query parameter is required."
      ],
      [
        "401 Unauthorized",
        "* The Authorization header must contain an app access token or user access token.\n* The access token is not valid.\n* The ID specified in the Client-Id header does not match the client ID specified in the access token."
      ],
      [
        "404 Not Found",
        "* The broadcaster was not found.\n* The broadcaster is not a member of a team."
      ]
    ],
    "examples": "### Example Request\n\nGets a list of Twitch Teams that the specified broadcaster is a member of.\n\n```\ncurl -X GET 'https://api.twitch.tv/helix/teams/channel?broadcaster_id=96909659' \\\n-H 'Authorization: Bearer 2gbdx6oar67tqtcmt49t3wpcgycthx' \\\n-H 'Client-Id: wbmytr93xzw8zbg0p1izqyzzc5mbiz'\n\n```\n\n### Example Response\n\n```\n{\n  \"data\": [\n    {\n      \"broadcaster_id\": \"96909659\",\n      \"broadcaster_name\": \"CSharpFritz\",\n      \"broadcaster_login\": \"csharpfritz\",\n      \"background_image_url\": null,\n      \"banner\": null,\n      \"created_at\": \"2019-02-11T12:09:22Z\",\n      \"updated_at\": \"2020-11-18T15:56:41Z\",\n      \"info\": \"<p>An outgoing and enthusiastic group of friendly channels that write code, teach about technology, and promote the technical community.</p>\",\n      \"thumbnail_url\": \"https://static-cdn.jtvnw.net/jtv_user_pictures/team-livecoders-team_logo_image-bf1d9a87ca81432687de60e24ad9593d-600x600.png\",\n      \"team_name\": \"livecoders\",\n      \"team_display_name\": \"Live Coders\",\n      \"id\": \"6358\"\n    }\n  ]\n}\n\n```"
  },
  {
    "id": "get-teams",
    "name": "Get Teams",
    "resource": "Teams",
    "description": "Gets information about the specified Twitch team.",
    "descriptionFull": [
      "Gets information about the specified Twitch team. [Read More](https://help.twitch.tv/s/article/twitch-teams)"
    ],
    "authentication": [
      "Requires an app access token or user access token."
    ],
    "authorization": [],
    "url": "https://api.twitch.tv/helix/teams",
    "method": "GET",
    "requestBody": {
      "description": [],
      "parameters": []
    },
    "requestQueryParams": {
      "description": [],
      "parameters": [
        {
          "name": "name",
          "type": "String",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "The name of the team to get. This parameter and the _id_ parameter are mutually exclusive; you must specify the team’s name or ID but not both.",
          "children": []
        },
        {
          "name": "id",
          "type": "String",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "The ID of the team to get. This parameter and the _name_ parameter are mutually exclusive; you must specify the team’s name or ID but not both.",
          "children": []
        }
      ]
    },
    "responseBody": {
      "description": [],
      "parameters": [
        {
          "name": "data",
          "type": "Object[]",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "A list that contains the single team that you requested.",
          "children": [
            {
              "name": "users",
              "type": "Object[]",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The list of team members.",
              "children": [
                {
                  "name": "user_id",
                  "type": "String",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "An ID that identifies the team member.",
                  "children": []
                },
                {
                  "name": "user_login",
                  "type": "String",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "The team member’s login name.",
                  "children": []
                },
                {
                  "name": "user_name",
                  "type": "String",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "The team member’s display name.",
                  "children": []
                }
              ]
            },
            {
              "name": "background_image_url",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "A URL to the team’s background image.",
              "children": []
            },
            {
              "name": "banner",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "A URL to the team’s banner.",
              "children": []
            },
            {
              "name": "created_at",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The UTC date and time (in RFC3339 format) of when the team was created.",
              "children": []
            },
            {
              "name": "updated_at",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The UTC date and time (in RFC3339 format) of the last time the team was updated.",
              "children": []
            },
            {
              "name": "info",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The team’s description. The description may contain formatting such as Markdown, HTML, newline (\\\\n) characters, etc.",
              "children": []
            },
            {
              "name": "thumbnail_url",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "A URL to a thumbnail image of the team’s logo.",
              "children": []
            },
            {
              "name": "team_name",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The team’s name.",
              "children": []
            },
            {
              "name": "team_display_name",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The team’s display name.",
              "children": []
            },
            {
              "name": "id",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "An ID that identifies the team.",
              "children": []
            }
          ]
        }
      ]
    },
    "responseCodes": [
      [
        "200 OK",
        "Successfully retrieved the team’s information."
      ],
      [
        "400 Bad Request",
        "* The _name_ or _id_ query parameter is required.\n* Specify either the _name_ or _id_ query parameter but not both.\n* The ID in the _id_ query parameter is not valid."
      ],
      [
        "401 Unauthorized",
        "* The Authorization header must contain an app access token or user access token.\n* The access token is not valid.\n* The ID specified in the Client-Id header does not match the client ID specified in the access token."
      ],
      [
        "404 Not Found",
        "* The specified team was not found."
      ]
    ],
    "examples": "### Example Request\n\nGets information about the specified team.\n\n```\ncurl -X GET 'https://api.twitch.tv/helix/teams?id=6358' \\\n-H 'Authorization: Bearer 2gbdx6oar67tqtcmt49t3wpcgycthx' \\\n-H 'Client-Id: wbmytr93xzw8zbg0p1izqyzzc5mbiz'\n\n```\n\n### Example Response\n\n```\n{\n  \"data\": [\n    {\n      \"users\": [\n        {\n          \"user_id\": \"278217731\",\n          \"user_name\": \"mastermndio\",\n          \"user_login\": \"mastermndio\"\n        },\n        {\n          \"user_id\": \"41284990\",\n          \"user_name\": \"jenninexus\",\n          \"user_login\": \"jenninexus\"\n        },\n        ...\n      ],\n      \"background_image_url\": null,\n      \"banner\": null,\n      \"created_at\": \"2019-02-11T12:09:22Z\",\n      \"updated_at\": \"2020-11-18T15:56:41Z\",\n      \"info\": \"<p>An outgoing and enthusiastic group of friendly channels that write code, teach about technology, and promote the technical community.</p>\",\n      \"thumbnail_url\": \"https://static-cdn.jtvnw.net/jtv_user_pictures/team-livecoders-team_logo_image-bf1d9a87ca81432687de60e24ad9593d-600x600.png\",\n      \"team_name\": \"livecoders\",\n      \"team_display_name\": \"Live Coders\",\n      \"id\": \"6358\"\n    }\n  ]\n}\n\n```"
  },
  {
    "id": "get-users",
    "name": "Get Users",
    "resource": "Users",
    "description": "Gets information about one or more users.",
    "descriptionFull": [
      "Gets information about one or more users.",
      "You may look up users using their user ID, login name, or both but the sum total of the number of users you may look up is 100\\. For example, you may specify 50 IDs and 50 names or 100 IDs or names, but you cannot specify 100 IDs and 100 names.",
      "If you don’t specify IDs or login names, the request returns information about the user in the access token if you specify a user access token.",
      "To include the user’s verified email address in the response, you must use a user access token that includes the **user:read:email** scope."
    ],
    "authentication": [
      "Requires an app access token or user access token."
    ],
    "authorization": [],
    "url": "https://api.twitch.tv/helix/users",
    "method": "GET",
    "requestBody": {
      "description": [],
      "parameters": []
    },
    "requestQueryParams": {
      "description": [],
      "parameters": [
        {
          "name": "id",
          "type": "String",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "The ID of the user to get. To specify more than one user, include the _id_ parameter for each user to get. For example, `id=1234&id=5678`. The maximum number of IDs you may specify is 100.",
          "children": []
        },
        {
          "name": "login",
          "type": "String",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "The login name of the user to get. To specify more than one user, include the _login_ parameter for each user to get. For example, `login=foo&login=bar`. The maximum number of login names you may specify is 100.",
          "children": []
        }
      ]
    },
    "responseBody": {
      "description": [],
      "parameters": [
        {
          "name": "data",
          "type": "Object[]",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "The list of users.",
          "children": [
            {
              "name": "id",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "An ID that identifies the user.",
              "children": []
            },
            {
              "name": "login",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The user’s login name.",
              "children": []
            },
            {
              "name": "display_name",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The user’s display name.",
              "children": []
            },
            {
              "name": "type",
              "type": "String",
              "possibleValues": [
                "admin",
                "global_mod",
                "staff",
                "\"\""
              ],
              "required": null,
              "depth": 1,
              "description": "The type of user. Possible values are:  \n  \n* admin — Twitch administrator\n* global\\_mod\n* staff — Twitch staff\n* \"\" — Normal user",
              "children": []
            },
            {
              "name": "broadcaster_type",
              "type": "String",
              "possibleValues": [
                "affiliate",
                "partner",
                "\"\""
              ],
              "required": null,
              "depth": 1,
              "description": "The type of broadcaster. Possible values are:  \n  \n* affiliate — An [affiliate broadcaster](https://help.twitch.tv/s/article/joining-the-affiliate-program target=)\n* partner — A [partner broadcaster](https://help.twitch.tv/s/article/partner-program-overview)\n* \"\" — A normal broadcaster",
              "children": []
            },
            {
              "name": "description",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The user’s description of their channel.",
              "children": []
            },
            {
              "name": "profile_image_url",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "A URL to the user’s profile image.",
              "children": []
            },
            {
              "name": "offline_image_url",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "A URL to the user’s offline image.",
              "children": []
            },
            {
              "name": "view_count",
              "type": "Integer",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The number of times the user’s channel has been viewed.  \n  \n**NOTE**: This field has been deprecated (see [Get Users API endpoint – “view\\_count” deprecation](https://discuss.dev.twitch.tv/t/get-users-api-endpoint-view-count-deprecation/37777)). Any data in this field is not valid and should not be used.",
              "children": []
            },
            {
              "name": "email",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The user’s verified email address. The object includes this field only if the user access token includes the **user:read:email** scope.  \n  \nIf the request contains more than one user, only the user associated with the access token that provided consent will include an email address — the email address for all other users will be empty.",
              "children": []
            },
            {
              "name": "created_at",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The UTC date and time that the user’s account was created. The timestamp is in RFC3339 format.",
              "children": []
            }
          ]
        }
      ]
    },
    "responseCodes": [
      [
        "200 OK",
        "Successfully retrieved the specified users’ information."
      ],
      [
        "400 Bad Request",
        "* The _id_ or _login_ query parameter is required unless the request uses a user access token.\n* The request exceeded the maximum allowed number of _id_ and/or _login_ query parameters."
      ],
      [
        "401 Unauthorized",
        "* The Authorization header is required and must contain an app access token or user access token.\n* The access token is not valid.\n* The ID specified in the Client-Id header does not match the client ID specified in the access token."
      ]
    ],
    "examples": "### Example Request\n\nGets information about the specified user.\n\n```\ncurl -X GET 'https://api.twitch.tv/helix/users?id=141981764' \\\n-H 'Authorization: Bearer cfabdegwdoklmawdzdo98xt2fo512y' \\\n-H 'Client-Id: uo6dggojyb8d6soh92zknwmi5ej1q2'\n\n```\n\n### Example Response\n\n```\n{\n  \"data\": [\n    {\n      \"id\": \"141981764\",\n      \"login\": \"twitchdev\",\n      \"display_name\": \"TwitchDev\",\n      \"type\": \"\",\n      \"broadcaster_type\": \"partner\",\n      \"description\": \"Supporting third-party developers building Twitch integrations from chatbots to game integrations.\",\n      \"profile_image_url\": \"https://static-cdn.jtvnw.net/jtv_user_pictures/8a6381c7-d0c0-4576-b179-38bd5ce1d6af-profile_image-300x300.png\",\n      \"offline_image_url\": \"https://static-cdn.jtvnw.net/jtv_user_pictures/3f13ab61-ec78-4fe6-8481-8682cb3b0ac2-channel_offline_image-1920x1080.png\",\n      \"view_count\": 5980557,\n      \"email\": \"not-real@email.com\",\n      \"created_at\": \"2016-12-14T20:32:28Z\"\n    }\n  ]\n}\n\n```"
  },
  {
    "id": "update-user",
    "name": "Update User",
    "resource": "Users",
    "description": "Updates the user’s information.",
    "descriptionFull": [
      "Updates the specified user’s information. The user ID in the OAuth token identifies the user whose information you want to update.",
      "To include the user’s verified email address in the response, the user access token must also include the **user:read:email** scope."
    ],
    "authentication": [
      "Requires a user access token that includes the **user:edit** scope."
    ],
    "authorization": [],
    "url": "https://api.twitch.tv/helix/users",
    "method": "PUT",
    "requestBody": {
      "description": [],
      "parameters": []
    },
    "requestQueryParams": {
      "description": [],
      "parameters": [
        {
          "name": "description",
          "type": "string",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "The string to update the channel’s description to. The description is limited to a maximum of 300 characters.  \n  \nTo remove the description, specify this parameter but don’t set it’s value (for example, `?description=`).",
          "children": []
        }
      ]
    },
    "responseBody": {
      "description": [],
      "parameters": [
        {
          "name": "data",
          "type": "Object[]",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "A list contains the single user that you updated.",
          "children": [
            {
              "name": "id",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "An ID that identifies the user.",
              "children": []
            },
            {
              "name": "login",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The user’s login name.",
              "children": []
            },
            {
              "name": "display_name",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The user’s display name.",
              "children": []
            },
            {
              "name": "type",
              "type": "String",
              "possibleValues": [
                "admin",
                "global_mod",
                "staff",
                "\"\""
              ],
              "required": null,
              "depth": 1,
              "description": "The type of user. Possible values are:  \n  \n* admin — Twitch administrator\n* global\\_mod\n* staff — Twitch staff\n* \"\" — Normal user",
              "children": []
            },
            {
              "name": "broadcaster_type",
              "type": "String",
              "possibleValues": [
                "affiliate",
                "partner",
                "\"\""
              ],
              "required": null,
              "depth": 1,
              "description": "The type of broadcaster. Possible values are:  \n  \n* affiliate — An [affiliate broadcaster](https://help.twitch.tv/s/article/joining-the-affiliate-program target=)\n* partner — A [partner broadcaster](https://help.twitch.tv/s/article/partner-program-overview)\n* \"\" — A normal broadcaster",
              "children": []
            },
            {
              "name": "description",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The user’s description of their channel.",
              "children": []
            },
            {
              "name": "profile_image_url",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "A URL to the user’s profile image.",
              "children": []
            },
            {
              "name": "offline_image_url",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "A URL to the user’s offline image.",
              "children": []
            },
            {
              "name": "view_count",
              "type": "Integer",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The number of times the user’s channel has been viewed.  \n  \n**NOTE**: This field has been deprecated (see [Get Users API endpoint – “view\\_count” deprecation](https://discuss.dev.twitch.tv/t/get-users-api-endpoint-view-count-deprecation/37777)). Any data in this field is not valid and should not be used.",
              "children": []
            },
            {
              "name": "email",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The user’s verified email address. The object includes this field only if the user access token includes the **user:read:email** scope.  \n  \nIf the request contains more than one user, only the user associated with the access token that provided consent will include an email address — the email address for all other users will be empty.",
              "children": []
            },
            {
              "name": "created_at",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The UTC date and time that the user’s account was created. The timestamp is in RFC3339 format.",
              "children": []
            }
          ]
        }
      ]
    },
    "responseCodes": [
      [
        "200 OK",
        "Successfully updated the specified user’s information."
      ],
      [
        "400 Bad Request",
        "* The string in the _description_ query parameter is too long."
      ],
      [
        "401 Unauthorized",
        "* The Authorization header is required and must contain a user access token.\n* The user access token must include the **user:edit** scope.\n* The access token is not valid.\n* The ID specified in the Client-Id header does not match the client ID specified in the access token."
      ]
    ],
    "examples": "### Example Request\n\nUpdates the description of the specified user.\n\n```\ncurl  -X PUT 'https://api.twitch.tv/helix/users?description=BaldAngel' \\\n-H 'Authorization: Bearer cfabdegwdoklmawdzdo98xt2fo512y' \\\n-H 'Client-Id: uo6dggojyb8d6soh92zknwmi5ej1q2'\n\n```\n\n### Example Response\n\n```\n{\n  \"data\":[{\n    \"id\": \"44322889\",\n    \"login\": \"dallas\",\n    \"display_name\": \"dallas\",\n    \"type\": \"staff\",\n    \"broadcaster_type\": \"affiliate\",\n    \"description\": \"BaldAngel\",\n    \"profile_image_url\": \"https://static-cdn.jtvnw.net/jtv_user_pictures/4d1f36cbf1f0072d-profile_image-300x300.png\",\n    \"offline_image_url\": \"https://static-cdn.jtvnw.net/jtv_user_pictures/dallas-channel_offline_image-2e82c1df2a464df7-1920x1080.jpeg\",\n    \"view_count\": 6995,\n    \"email\": \"not-real@email.com\",\n    \"created_at\": \"2013-06-03T19:12:02.580593Z\"\n  }]\n}\n\n```"
  },
  {
    "id": "get-users-follows",
    "name": "Get Users Follows",
    "resource": "Users",
    "description": "Gets information about users that are following other users.",
    "descriptionFull": [
      "Gets information about users that are following other users. For example, you can use this endpoint to answer questions like “who is qotrok following,” “who is following qotrok,” or “is user X following user Y.”"
    ],
    "authentication": [
      "Requires an app access token or user access token."
    ],
    "authorization": [],
    "url": "https://api.twitch.tv/helix/users/follows",
    "method": "GET",
    "requestBody": {
      "description": [],
      "parameters": []
    },
    "requestQueryParams": {
      "description": [],
      "parameters": [
        {
          "name": "from_id",
          "type": "String",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "A user ID. Specify this parameter to discover the users that this user is following.  \n  \nYou must specify this parameter, the _to\\_id_ parameter, or both.",
          "children": []
        },
        {
          "name": "to_id",
          "type": "String",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "A user ID. Specify this parameter to discover the users who are following this user.  \n  \nYou must specify this parameter, the _from\\_id_ parameter, or both.",
          "children": []
        },
        {
          "name": "first",
          "type": "Integer",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "The maximum number of items to return per page in the response. The minimum page size is 1 item per page and the maximum is 100\\. The default is 20.",
          "children": []
        },
        {
          "name": "after",
          "type": "String",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "The cursor used to get the next page of results. The **Pagination** object in the response contains the cursor’s value. [Read More](https://dev.twitch.tv/docs/api/guide#pagination)",
          "children": []
        }
      ]
    },
    "responseBody": {
      "description": [],
      "parameters": [
        {
          "name": "total",
          "type": "Integer",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "The number of items in the `data` field.  \n  \n* If the request includes only _from\\_id_, this is the total number of followed users.\n* If the request includes only _to\\_id_, this is the total number of followers.\n* If the request specifies both _from\\_id_ and _to\\_id_, the total is 1 if the \"from\" user follows the \"to\" user; otherwise, the total is 0.",
          "children": []
        },
        {
          "name": "data",
          "type": "Object[]",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "The list of follower-followee relationship information. The list is in descending order by when the follow occurred (most recent follow first).",
          "children": [
            {
              "name": "from_id",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The ID of the user that’s following the user in `to_id`.",
              "children": []
            },
            {
              "name": "from_login",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The follower’s login name.",
              "children": []
            },
            {
              "name": "from_name",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The follower’s display name.",
              "children": []
            },
            {
              "name": "to_id",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The ID of the user that’s being followed by the user in `from_id`.",
              "children": []
            },
            {
              "name": "to_login",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The login name of the user that’s being followed.",
              "children": []
            },
            {
              "name": "to_name",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The display name of the user that’s being followed.",
              "children": []
            },
            {
              "name": "followed_at",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The UTC date and time (in RFC3339 format) of when the user in `from_id` began following the user in `to_id`.",
              "children": []
            }
          ]
        },
        {
          "name": "pagination",
          "type": "Object",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "Contains the information used to page through the list of results. The object is empty if there are no more pages left to page through. [Read More](https://dev.twitch.tv/docs/api/guide#pagination)",
          "children": [
            {
              "name": "cursor",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The cursor used to get the next page of results. Use the cursor to set the request’s _after_ query parameter.",
              "children": []
            }
          ]
        }
      ]
    },
    "responseCodes": [
      [
        "200 OK",
        "Successfully retrieved the follows information."
      ],
      [
        "400 Bad Request",
        "* The _from\\_id_ query parameter, _to\\_id_ query parameter, or both parameters are required.\n* The ID in the _from\\_id_ query parameter is not valid\n* The ID in the _to\\_id_ query parameter is not valid."
      ],
      [
        "401 Unauthorized",
        "* The Authorization header is required and must contain an app access token or user access token.\n* The access token is not valid.\n* The ID specified in the Client-Id header does not match the client ID specified in the access token."
      ]
    ],
    "examples": "### Example Request\n\nGets the first 20 IDs of users who are following the specified user.\n\n```\ncurl -X GET 'https://api.twitch.tv/helix/users/follows?to_id=23161357' \\\n-H 'Authorization: Bearer 2gbdx6oar67tqtcmt49t3wpcgycthx' \\\n-H 'Client-Id: uo6dggojyb8d6soh92zknwmi5ej1q2'\n\n```\n\n### Example Response\n\n```\n{\n   \"total\": 12345,\n   \"data\":\n   [\n      {\n         \"from_id\": \"171003792\",\n         \"from_login\": \"iiisutha067iii\",\n         \"from_name\": \"IIIsutha067III\",\n         \"to_id\": \"23161357\",\n         \"to_name\": \"LIRIK\",\n         \"followed_at\": \"2017-08-22T22:55:24Z\"\n      },\n      {\n         \"from_id\": \"113627897\",\n         \"from_login\": \"birdman616\",\n         \"from_name\": \"Birdman616\",\n         \"to_id\": \"23161357\",\n         \"to_name\": \"LIRIK\",\n         \"followed_at\": \"2017-08-22T22:55:04Z\"\n      },\n      ...\n   ],\n   \"pagination\":{\n     \"cursor\": \"eyJiIjpudWxsLCJhIjoiMTUwMzQ0MTc3NjQyNDQyMjAwMCJ9\"\n   }\n}\n\n```"
  },
  {
    "id": "get-user-block-list",
    "name": "Get User Block List",
    "resource": "Users",
    "description": "Gets the list of users that the broadcaster has blocked.",
    "descriptionFull": [
      "Gets the list of users that the broadcaster has blocked. [Read More](https://help.twitch.tv/s/article/how-to-manage-harassment-in-chat?language=en%5FUS#BlockWhispersandMessagesfromStrangers)"
    ],
    "authentication": [
      "Requires a user access token that includes the **user:read:blocked\\_users** scope."
    ],
    "authorization": [],
    "url": "https://api.twitch.tv/helix/users/blocks",
    "method": "GET",
    "requestBody": {
      "description": [],
      "parameters": []
    },
    "requestQueryParams": {
      "description": [],
      "parameters": [
        {
          "name": "broadcaster_id",
          "type": "String",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "The ID of the broadcaster whose list of blocked users you want to get.",
          "children": []
        },
        {
          "name": "first",
          "type": "Integer",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "The maximum number of items to return per page in the response. The minimum page size is 1 item per page and the maximum is 100\\. The default is 20.",
          "children": []
        },
        {
          "name": "after",
          "type": "String",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "The cursor used to get the next page of results. The **Pagination** object in the response contains the cursor’s value. [Read More](https://dev.twitch.tv/docs/api/guide#pagination)",
          "children": []
        }
      ]
    },
    "responseBody": {
      "description": [],
      "parameters": [
        {
          "name": "data",
          "type": "Object[]",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "The list of blocked users. The list is in descending order by when the user was blocked.",
          "children": [
            {
              "name": "user_id",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "An ID that identifies the blocked user.",
              "children": []
            },
            {
              "name": "user_login",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The blocked user’s login name.",
              "children": []
            },
            {
              "name": "display_name",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The blocked user’s display name.",
              "children": []
            }
          ]
        }
      ]
    },
    "responseCodes": [
      [
        "200 OK",
        "Successfully retrieved the broadcaster’s list of blocked users."
      ],
      [
        "400 Bad Request",
        "* The _broadcaster\\_id_ query parameter is required."
      ],
      [
        "401 Unauthorized",
        "* The ID in _broadcaster\\_id_ must match the user ID found in the request’s access token.\n* The Authorization header is required and must contain a user access token.\n* The user access token must include the **user:read:blocked\\_users** scope.\n* The access token is not valid.\n* The ID specified in the Client-Id header does not match the client ID specified in the access token."
      ]
    ],
    "examples": "### Example Request\n\nGets the specified broadcaster’s list of blocked users.\n\n```\ncurl -X GET 'https://api.twitch.tv/helix/users/blocks?broadcaster_id=141981764' \\\n-H 'Authorization: Bearer 2gbdx6oar67tqtcmt49t3wpcgycthx' \\\n-H 'Client-Id: wbmytr93xzw8zbg0p1izqyzzc5mbiz' \\\n\n```\n\n### Example Response\n\n```\n{\n  \"data\": [\n    {\n      \"user_id\": \"135093069\",\n      \"user_login\": \"bluelava\",\n      \"display_name\": \"BlueLava\"\n    },\n    {\n      \"user_id\": \"27419011\",\n      \"user_login\": \"travistyoj\",\n      \"display_name\": \"TravistyOJ\"\n    }\n  ]\n}\n\n```"
  },
  {
    "id": "block-user",
    "name": "Block User",
    "resource": "Users",
    "description": "Blocks the specified user from interacting with or having contact with the broadcaster.",
    "descriptionFull": [
      "Blocks the specified user from interacting with or having contact with the broadcaster. The user ID in the OAuth token identifies the broadcaster who is blocking the user.",
      "To learn more about blocking users, see [Block Other Users on Twitch](https://help.twitch.tv/s/article/how-to-manage-harassment-in-chat?language=en%5FUS#BlockWhispersandMessagesfromStrangers)."
    ],
    "authentication": [
      "Requires a user access token that includes the **user:manage:blocked\\_users** scope."
    ],
    "authorization": [],
    "url": "https://api.twitch.tv/helix/users/blocks",
    "method": "PUT",
    "requestBody": {
      "description": [],
      "parameters": []
    },
    "requestQueryParams": {
      "description": [],
      "parameters": [
        {
          "name": "target_user_id",
          "type": "String",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "The ID of the user to block. The API ignores the request if the broadcaster has already blocked the user.",
          "children": []
        },
        {
          "name": "source_context",
          "type": "String",
          "possibleValues": [
            "chat",
            "whisper"
          ],
          "required": false,
          "depth": 0,
          "description": "The location where the harassment took place that is causing the brodcaster to block the user. Possible values are:  \n  \n* chat\n* whisper\n  \n.",
          "children": []
        },
        {
          "name": "reason",
          "type": "String",
          "possibleValues": [
            "harassment",
            "spam",
            "other"
          ],
          "required": false,
          "depth": 0,
          "description": "The reason that the broadcaster is blocking the user. Possible values are:  \n  \n* harassment\n* spam\n* other",
          "children": []
        }
      ]
    },
    "responseBody": {
      "description": [],
      "parameters": []
    },
    "responseCodes": [
      [
        "204 No Content",
        "Successfully blocked the user."
      ],
      [
        "400 Bad Request",
        "* The _target\\_user\\_id_ query parameter is required.\n* The ID in _target\\_user\\_id_ cannot be the same as the user ID in the access token.\n* The value in _source\\_context_ is not valid.\n* The value in _reason_ is not valid."
      ],
      [
        "401 Unauthorized",
        "* The Authorization header is required and must contain a user access token.\n* The user access token must include the **user:manage:blocked\\_users** scope.\n* The access token is not valid.\n* The ID specified in the Client-Id header does not match the client ID specified in the access token."
      ]
    ],
    "examples": "### Example Request\n\nBlocks the specified user.\n\n```\ncurl -X PUT 'https://api.twitch.tv/helix/users/blocks?target_user_id=198704263' \\\n-H 'Authorization: Bearer 2gbdx6oar67tqtcmt49t3wpcgycthx' \\\n-H 'Client-Id: wbmytr93xzw8zbg0p1izqyzzc5mbiz' \\\n\n```"
  },
  {
    "id": "unblock-user",
    "name": "Unblock User",
    "resource": "Users",
    "description": "Removes the user from the broadcaster’s list of blocked users.",
    "descriptionFull": [
      "Removes the user from the broadcaster’s list of blocked users. The user ID in the OAuth token identifies the broadcaster who’s removing the block."
    ],
    "authentication": [
      "Requires a user access token that includes the **user:manage:blocked\\_users** scope."
    ],
    "authorization": [],
    "url": "https://api.twitch.tv/helix/users/blocks",
    "method": "DELETE",
    "requestBody": {
      "description": [],
      "parameters": []
    },
    "requestQueryParams": {
      "description": [],
      "parameters": [
        {
          "name": "target_user_id",
          "type": "String",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "The ID of the user to remove from the broadcaster’s list of blocked users. The API ignores the request if the broadcaster hasn’t blocked the user.",
          "children": []
        }
      ]
    },
    "responseBody": {
      "description": [],
      "parameters": []
    },
    "responseCodes": [
      [
        "204 No Content",
        "Successfully removed the block."
      ],
      [
        "400 Bad Request",
        "* The _target\\_user\\_id_ query parameter is required."
      ],
      [
        "401 Unauthorized",
        "* The Authorization header is required and must contain a user access token.\n* The user access token must include the **user:read:blocked\\_users** scope.\n* The access token is not valid.\n* The ID specified in the Client-Id header does not match the client ID specified in the access token."
      ]
    ],
    "examples": "### Example Request\n\nUnblocks the specified user.\n\n```\ncurl -X DELETE 'https://api.twitch.tv/helix/users/blocks?target_user_id=198704263' \\\n-H 'Authorization: Bearer 2gbdx6oar67tqtcmt49t3wpcgycthx' \\\n-H 'Client-Id: wbmytr93xzw8zbg0p1izqyzzc5mbiz' \\\n\n```"
  },
  {
    "id": "get-user-extensions",
    "name": "Get User Extensions",
    "resource": "Users",
    "description": "Gets a list of all extensions (both active and inactive) that the broadcaster has installed.",
    "descriptionFull": [
      "Gets a list of all extensions (both active and inactive) that the broadcaster has installed. The user ID in the access token identifies the broadcaster."
    ],
    "authentication": [
      "Requires a user access token that includes the **user:read:broadcast** scope."
    ],
    "authorization": [],
    "url": "https://api.twitch.tv/helix/users/extensions/list",
    "method": "GET",
    "requestBody": {
      "description": [],
      "parameters": []
    },
    "requestQueryParams": {
      "description": [],
      "parameters": []
    },
    "responseBody": {
      "description": [],
      "parameters": [
        {
          "name": "data",
          "type": "Object[]",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "The list of extensions that the user has installed.",
          "children": [
            {
              "name": "id",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "An ID that identifies the extension.",
              "children": []
            },
            {
              "name": "version",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The extension’s version.",
              "children": []
            },
            {
              "name": "name",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The extension’s name.",
              "children": []
            },
            {
              "name": "can_activate",
              "type": "Boolean",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "A Boolean value that determines whether the extension is configured and can be activated. Is **true** if the extension is configured and can be activated.",
              "children": []
            },
            {
              "name": "type",
              "type": "String[]",
              "possibleValues": [
                "component",
                "mobile",
                "overlay",
                "panel"
              ],
              "required": null,
              "depth": 1,
              "description": "The extension types that you can activate for this extension. Possible values are:  \n  \n* component\n* mobile\n* overlay\n* panel",
              "children": []
            }
          ]
        }
      ]
    },
    "responseCodes": [
      [
        "200 OK",
        "Successfully retrieved the user’s installed extensions."
      ],
      [
        "401 Unauthorized",
        "* The Authorization header is required and must contain a user access token.\n* The user access token must include the **user:read:broadcast** scope.\n* The access token is not valid.\n* The ID specified in the Client-Id header does not match the client ID specified in the access token."
      ]
    ],
    "examples": "### Example Request\n\nGets the extensions that the user has installed.\n\n```\ncurl -X GET 'https://api.twitch.tv/helix/users/extensions/list' \\\n-H 'Authorization: Bearer cfabdegwdoklmawdzdo98xt2fo512y' \\\n-H 'Client-Id: uo6dggojyb8d6soh92zknwmi5ej1q2'\n\n```\n\n### Example Response\n\n```\n{\n  \"data\": [\n    {\n      \"id\": \"wi08ebtatdc7oj83wtl9uxwz807l8b\",\n      \"version\": \"1.1.8\",\n      \"name\": \"Streamlabs Leaderboard\",\n      \"can_activate\": true,\n      \"type\": [\n        \"panel\"\n      ]\n    },\n    {\n      \"id\": \"d4uvtfdr04uq6raoenvj7m86gdk16v\",\n      \"version\": \"2.0.2\",\n      \"name\": \"Prime Subscription and Loot Reminder\",\n      \"can_activate\": true,\n      \"type\": [\n        \"overlay\"\n      ]\n    },\n    {\n      \"id\": \"rh6jq1q334hqc2rr1qlzqbvwlfl3x0\",\n       \"version\": \"1.1.0\",\n      \"name\": \"TopClip\",\n      \"can_activate\": true,\n      \"type\": [\n        \"mobile\",\n        \"panel\"\n      ]\n    },\n    {\n      \"id\": \"zfh2irvx2jb4s60f02jq0ajm8vwgka\",\n      \"version\": \"1.0.19\",\n      \"name\": \"Streamlabs\",\n      \"can_activate\": true,\n      \"type\": [\n        \"mobile\",\n        \"overlay\"\n      ]\n    },\n    {\n      \"id\": \"lqnf3zxk0rv0g7gq92mtmnirjz2cjj\",\n      \"version\": \"0.0.1\",\n      \"name\": \"Dev Experience Test\",\n      \"can_activate\": true,\n      \"type\": [\n        \"component\",\n        \"mobile\",\n        \"panel\",\n        \"overlay\"\n      ]\n    }\n  ]\n}\n\n```"
  },
  {
    "id": "get-user-active-extensions",
    "name": "Get User Active Extensions",
    "resource": "Users",
    "description": "Gets the active extensions that the broadcaster has installed for each configuration.",
    "descriptionFull": [
      "Gets the active extensions that the broadcaster has installed for each configuration.",
      "NOTE: To include extensions that you have under development, you must specify a user access token that includes the **user:read:broadcast** or **user:edit:broadcast** scope."
    ],
    "authentication": [
      "Requires an app access token or user access token."
    ],
    "authorization": [],
    "url": "https://api.twitch.tv/helix/users/extensions",
    "method": "GET",
    "requestBody": {
      "description": [],
      "parameters": []
    },
    "requestQueryParams": {
      "description": [],
      "parameters": [
        {
          "name": "user_id",
          "type": "String",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "The ID of the broadcaster whose active extensions you want to get.  \n  \nThis parameter is required if you specify an app access token and is optional if you specify a user access token. If you specify a user access token and don’t specify this parameter, the API uses the user ID from the access token.",
          "children": []
        }
      ]
    },
    "responseBody": {
      "description": [],
      "parameters": [
        {
          "name": "data",
          "type": "Object",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "The active extensions that the broadcaster has installed.",
          "children": [
            {
              "name": "panel",
              "type": "map[string]Object",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "A dictionary that contains the data for a panel extension. The dictionary’s key is a sequential number beginning with 1\\. The following fields contain the panel’s data for each key.",
              "children": [
                {
                  "name": "active",
                  "type": "Boolean",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "A Boolean value that determines the extension’s activation state. If **false**, the user has not configured this panel extension.",
                  "children": []
                },
                {
                  "name": "id",
                  "type": "String",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "An ID that identifies the extension.",
                  "children": []
                },
                {
                  "name": "version",
                  "type": "String",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "The extension’s version.",
                  "children": []
                },
                {
                  "name": "name",
                  "type": "String",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "The extension’s name.",
                  "children": []
                }
              ]
            },
            {
              "name": "overlay",
              "type": "map[string]Object",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "A dictionary that contains the data for a video-overlay extension. The dictionary’s key is a sequential number beginning with 1\\. The following fields contain the overlay’s data for each key.",
              "children": [
                {
                  "name": "active",
                  "type": "Boolean",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "A Boolean value that determines the extension’s activation state. If **false**, the user has not configured this overlay extension.",
                  "children": []
                },
                {
                  "name": "id",
                  "type": "String",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "An ID that identifies the extension.",
                  "children": []
                },
                {
                  "name": "version",
                  "type": "String",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "The extension’s version.",
                  "children": []
                },
                {
                  "name": "name",
                  "type": "String",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "The extension’s name.",
                  "children": []
                }
              ]
            },
            {
              "name": "component",
              "type": "map[string]Object",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "A dictionary that contains the data for a video-component extension. The dictionary’s key is a sequential number beginning with 1\\. The following fields contain the component’s data for each key.",
              "children": [
                {
                  "name": "active",
                  "type": "Boolean",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "A Boolean value that determines the extension’s activation state. If **false**, the user has not configured this component extension.",
                  "children": []
                },
                {
                  "name": "id",
                  "type": "String",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "An ID that identifies the extension.",
                  "children": []
                },
                {
                  "name": "version",
                  "type": "String",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "The extension’s version.",
                  "children": []
                },
                {
                  "name": "name",
                  "type": "String",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "The extension’s name.",
                  "children": []
                },
                {
                  "name": "x",
                  "type": "Integer",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "The x-coordinate where the extension is placed.",
                  "children": []
                },
                {
                  "name": "y",
                  "type": "Integer",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "The y-coordinate where the extension is placed.",
                  "children": []
                }
              ]
            }
          ]
        }
      ]
    },
    "responseCodes": [
      [
        "200 OK",
        "Successfully retrieved the user’s active extensions."
      ],
      [
        "400 Bad Request",
        "* The _user\\_id_ query parameter is required if you specify an app access token."
      ],
      [
        "401 Unauthorized",
        "* The Authorization header is required and must contain an app access token or user access token.\n* The access token is not valid.\n* The ID specified in the Client-Id header does not match the client ID specified in the access token."
      ]
    ],
    "examples": "### Example Request\n\nGets the user’s active extensions. The API gets the user from the access token.\n\n```\ncurl -X GET 'https://api.twitch.tv/helix/users/extensions' \\\n-H 'Authorization: Bearer cfabdegwdoklmawdzdo98xt2fo512y' \\\n-H 'Client-Id: uo6dggojyb8d6soh92zknwmi5ej1q2'\n\n```\n\n### Example Response\n\n```\n{\n  \"data\": {\n    \"panel\": {\n      \"1\": {\n        \"active\": true,\n        \"id\": \"rh6jq1q334hqc2rr1qlzqbvwlfl3x0\",\n        \"version\": \"1.1.0\",\n        \"name\": \"TopClip\"\n      },\n      \"2\": {\n        \"active\": true,\n        \"id\": \"wi08ebtatdc7oj83wtl9uxwz807l8b\",\n        \"version\": \"1.1.8\",\n        \"name\": \"Streamlabs Leaderboard\"\n      },\n      \"3\": {\n        \"active\": true,\n        \"id\": \"naty2zwfp7vecaivuve8ef1hohh6bo\",\n        \"version\": \"1.0.9\",\n        \"name\": \"Streamlabs Stream Schedule & Countdown\"\n      }\n    },\n    \"overlay\": {\n      \"1\": {\n        \"active\": true,\n        \"id\": \"zfh2irvx2jb4s60f02jq0ajm8vwgka\",\n        \"version\": \"1.0.19\",\n        \"name\": \"Streamlabs\"\n      }\n    },\n    \"component\": {\n      \"1\": {\n        \"active\": true,\n        \"id\": \"lqnf3zxk0rv0g7gq92mtmnirjz2cjj\",\n        \"version\": \"0.0.1\",\n        \"name\": \"Dev Experience Test\",\n        \"x\": 0,\n        \"y\": 0\n      },\n      \"2\": {\n        \"active\": false\n      }\n    }\n  }\n}\n\n```"
  },
  {
    "id": "update-user-extensions",
    "name": "Update User Extensions",
    "resource": "Users",
    "description": "Updates an installed extension’s information.",
    "descriptionFull": [
      "Updates an installed extension’s information. You can update the extension’s activation state, ID, and version number. The user ID in the access token identifies the broadcaster whose extensions you’re updating.",
      "NOTE: If you try to activate an extension under multiple extension types, the last write wins (and there is no guarantee of write order)."
    ],
    "authentication": [
      "Requires a user access token that includes the **user:edit:broadcast** scope."
    ],
    "authorization": [],
    "url": "https://api.twitch.tv/helix/users/extensions",
    "method": "PUT",
    "requestBody": {
      "description": [],
      "parameters": [
        {
          "name": "data",
          "type": "map[string]string",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "The extensions to update. The `data` field is a dictionary of extension types. The dictionary’s possible keys are: panel, overlay, or component. The key’s value is a dictionary of extensions.  \n  \nFor the extension’s dictionary, the key is a sequential number beginning with 1\\. For panel and overlay extensions, the key’s value is an object that contains the following fields: `active` (true/false), `id` (the extension’s ID), and `version` (the extension’s version).  \n  \nFor component extensions, the key’s value includes the above fields plus the `x` and `y` fields, which identify the coordinate where the extension is placed.",
          "children": []
        }
      ]
    },
    "requestQueryParams": {
      "description": [],
      "parameters": []
    },
    "responseBody": {
      "description": [],
      "parameters": [
        {
          "name": "data",
          "type": "Object",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "The extensions that the broadcaster updated.",
          "children": [
            {
              "name": "panel",
              "type": "map[string]Object",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "A dictionary that contains the data for a panel extension. The dictionary’s key is a sequential number beginning with 1\\. The following fields contain the panel’s data for each key.",
              "children": [
                {
                  "name": "active",
                  "type": "Boolean",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "A Boolean value that determines the extension’s activation state. If **false**, the user has not configured a panel extension.",
                  "children": []
                },
                {
                  "name": "id",
                  "type": "String",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "An ID that identifies the extension.",
                  "children": []
                },
                {
                  "name": "version",
                  "type": "String",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "The extension’s version.",
                  "children": []
                },
                {
                  "name": "name",
                  "type": "String",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "The extension’s name.",
                  "children": []
                }
              ]
            },
            {
              "name": "overlay",
              "type": "map[string]Object",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "A dictionary that contains the data for a video-overlay extension. The dictionary’s key is a sequential number beginning with 1\\. The following fields contain the overlay’s data for each key.",
              "children": [
                {
                  "name": "active",
                  "type": "Boolean",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "A Boolean value that determines the extension’s activation state. If **false**, the user has not configured an overlay extension.",
                  "children": []
                },
                {
                  "name": "id",
                  "type": "String",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "An ID that identifies the extension.",
                  "children": []
                },
                {
                  "name": "version",
                  "type": "String",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "The extension’s version.",
                  "children": []
                },
                {
                  "name": "name",
                  "type": "String",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "The extension’s name.",
                  "children": []
                }
              ]
            },
            {
              "name": "component",
              "type": "map[string]Object",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "A dictionary that contains the data for a video-component extension. The dictionary’s key is a sequential number beginning with 1\\. The following fields contain the component’s data for each key.",
              "children": [
                {
                  "name": "active",
                  "type": "Boolean",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "A Boolean value that determines the extension’s activation state. If **false**, the user has not configured a component extension.",
                  "children": []
                },
                {
                  "name": "id",
                  "type": "String",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "An ID that identifies the extension.",
                  "children": []
                },
                {
                  "name": "version",
                  "type": "String",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "The extension’s version.",
                  "children": []
                },
                {
                  "name": "name",
                  "type": "String",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "The extension’s name.",
                  "children": []
                },
                {
                  "name": "x",
                  "type": "Integer",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "The x-coordinate where the extension is placed.",
                  "children": []
                },
                {
                  "name": "y",
                  "type": "Integer",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "The y-coordinate where the extension is placed.",
                  "children": []
                }
              ]
            }
          ]
        }
      ]
    },
    "responseCodes": [
      [
        "200 OK",
        "Successfully updated the active extensions."
      ],
      [
        "400 Bad Request",
        "* The JSON payload is malformed."
      ],
      [
        "401 Unauthorized",
        "* The Authorization header is required and must contain a user access token.\n* The user access token must include the **user:edit:broadcast** scope.\n* The access token is not valid.\n* The ID specified in the Client-Id header does not match the client ID specified in the access token."
      ],
      [
        "404 Not Found",
        "* An extension with the specified `id` and `version` values was not found."
      ]
    ],
    "examples": "### Example Request\n\nUpdates the the user’s installed extensions.\n\n```\ncurl -X PUT 'https://api.twitch.tv/helix/users/extensions' \\\n-H 'Authorization: Bearer cfabdegwdoklmawdzdo98xt2fo512y' \\\n-H 'Client-Id: uo6dggojyb8d6soh92zknwmi5ej1q2' \\\n-H \"Content-Type: application/json\" \\\n-d '{\n  \"data\": {\n    \"panel\": {\n      \"1\": {\n        \"active\": true,\n        \"id\": \"rh6jq1q334hqc2rr1qlzqbvwlfl3x0\",\n        \"version\": \"1.1.0\"\n      },\n      \"2\": {\n        \"active\": true,\n        \"id\": \"wi08ebtatdc7oj83wtl9uxwz807l8b\",\n        \"version\": \"1.1.8\"\n      },\n      \"3\": {\n        \"active\": true,\n        \"id\": \"naty2zwfp7vecaivuve8ef1hohh6bo\",\n        \"version\": \"1.0.9\"\n      }\n    },\n    \"overlay\": {\n      \"1\": {\n        \"active\": true,\n        \"id\": \"zfh2irvx2jb4s60f02jq0ajm8vwgka\",\n        \"version\": \"1.0.19\"\n      }\n    },\n    \"component\": {\n      \"1\": {\n        \"active\": true,\n        \"id\": \"lqnf3zxk0rv0g7gq92mtmnirjz2cjj\",\n        \"version\": \"0.0.1\",\n        \"x\": 0,\n        \"y\": 0\n      },\n      \"2\": {\n        \"active\": false\n      }\n    }\n  }\n}'\n\n```\n\n### Example Response\n\n```\n{\n  \"data\": {\n    \"panel\": {\n      \"1\": {\n        \"active\": true,\n        \"id\": \"rh6jq1q334hqc2rr1qlzqbvwlfl3x0\",\n        \"version\": \"1.1.0\",\n        \"name\": \"TopClip\"\n      },\n      \"2\": {\n        \"active\": true,\n        \"id\": \"wi08ebtatdc7oj83wtl9uxwz807l8b\",\n        \"version\": \"1.1.8\",\n        \"name\": \"Streamlabs Leaderboard\"\n      },\n      \"3\": {\n        \"active\": true,\n        \"id\": \"naty2zwfp7vecaivuve8ef1hohh6bo\",\n        \"version\": \"1.0.9\",\n        \"name\": \"Streamlabs Stream Schedule & Countdown\"\n      }\n    },\n    \"overlay\": {\n      \"1\": {\n        \"active\": true,\n        \"id\": \"zfh2irvx2jb4s60f02jq0ajm8vwgka\",\n        \"version\": \"1.0.19\",\n        \"name\": \"Streamlabs\"\n      }\n    },\n    \"component\": {\n      \"1\": {\n        \"active\": true,\n        \"id\": \"lqnf3zxk0rv0g7gq92mtmnirjz2cjj\",\n        \"version\": \"0.0.1\",\n        \"name\": \"Dev Experience Test\",\n        \"x\": 0,\n        \"y\": 0\n      },\n      \"2\": {\n        \"active\": false\n      }\n    }\n  }\n}\n\n```"
  },
  {
    "id": "get-videos",
    "name": "Get Videos",
    "resource": "Videos",
    "description": "Gets information about one or more published videos.",
    "descriptionFull": [
      "Gets information about one or more published videos. You may get videos by ID, by user, or by game/category.",
      "You may apply several filters to get a subset of the videos. The filters are applied as an AND operation to each video. For example, if _language_ is set to ‘de’ and _game\\_id_ is set to 21779, the response includes only videos that show playing League of Legends by users that stream in German. The filters apply only if you get videos by user ID or game ID."
    ],
    "authentication": [
      "Requires an app access token or user access token."
    ],
    "authorization": [],
    "url": "https://api.twitch.tv/helix/videos",
    "method": "GET",
    "requestBody": {
      "description": [],
      "parameters": []
    },
    "requestQueryParams": {
      "description": [],
      "parameters": [
        {
          "name": "id",
          "type": "String",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "A list of IDs that identify the videos you want to get. To get more than one video, include this parameter for each video you want to get. For example, `id=1234&id=5678`. You may specify a maximum of 100 IDs. The endpoint ignores duplicate IDs and IDs that weren’t found (if there’s at least one valid ID).  \n  \nThe _id_, _user\\_id_, and _game\\_id_ parameters are mutually exclusive.",
          "children": []
        },
        {
          "name": "user_id",
          "type": "String",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "The ID of the user whose list of videos you want to get.  \n  \nThe _id_, _user\\_id_, and _game\\_id_ parameters are mutually exclusive.",
          "children": []
        },
        {
          "name": "game_id",
          "type": "String",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "A category or game ID. The response contains a maximum of 500 videos that show this content. To get category/game IDs, use the [Search Categories](https://dev.twitch.tv/docs/api/reference#search-categories) endpoint.  \n  \nThe _id_, _user\\_id_, and _game\\_id_ parameters are mutually exclusive.",
          "children": []
        },
        {
          "name": "language",
          "type": "String",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "A filter used to filter the list of videos by the language that the video owner broadcasts in. For example, to get videos that were broadcast in German, set this parameter to the ISO 639-1 two-letter code for German (i.e., DE). For a list of supported languages, see [Supported Stream Language](https://help.twitch.tv/s/article/languages-on-twitch#streamlang). If the language is not supported, use “other.”  \n  \nSpecify this parameter only if you specify the _game\\_id_ query parameter.",
          "children": []
        },
        {
          "name": "period",
          "type": "String",
          "possibleValues": [
            "all",
            "day",
            "month",
            "week"
          ],
          "required": false,
          "depth": 0,
          "description": "A filter used to filter the list of videos by when they were published. For example, videos published in the last week. Possible values are:  \n  \n* all\n* day\n* month\n* week\n  \nThe default is “all,” which returns videos published in all periods.  \n  \nSpecify this parameter only if you specify the _game\\_id_ or _user\\_id_ query parameter.",
          "children": []
        },
        {
          "name": "sort",
          "type": "String",
          "possibleValues": [
            "time",
            "trending",
            "views"
          ],
          "required": false,
          "depth": 0,
          "description": "The order to sort the returned videos in. Possible values are:  \n  \n* time — Sort the results in descending order by when they were created (i.e., latest video first).\n* trending — Sort the results in descending order by biggest gains in viewership (i.e., highest trending video first).\n* views — Sort the results in descending order by most views (i.e., highest number of views first).\n  \nThe default is “time.”  \n  \nSpecify this parameter only if you specify the _game\\_id_ or _user\\_id_ query parameter.",
          "children": []
        },
        {
          "name": "type",
          "type": "String",
          "possibleValues": [
            "all",
            "archive",
            "highlight",
            "upload"
          ],
          "required": false,
          "depth": 0,
          "description": "A filter used to filter the list of videos by the video’s type. Possible case-sensitive values are:  \n  \n* all\n* archive — On-demand videos (VODs) of past streams.\n* highlight — Highlight reels of past streams.\n* upload — External videos that the broadcaster uploaded using the Video Producer.\n  \nThe default is “all,” which returns all video types.  \n  \nSpecify this parameter only if you specify the _game\\_id_ or _user\\_id_ query parameter.",
          "children": []
        },
        {
          "name": "first",
          "type": "String",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "The maximum number of items to return per page in the response. The minimum page size is 1 item per page and the maximum is 100\\. The default is 20.  \n  \nSpecify this parameter only if you specify the _game\\_id_ or _user\\_id_ query parameter.",
          "children": []
        },
        {
          "name": "after",
          "type": "String",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "The cursor used to get the next page of results. The **Pagination** object in the response contains the cursor’s value. [Read More](https://dev.twitch.tv/docs/api/guide#pagination)  \n  \nSpecify this parameter only if you specify the _user\\_id_ query parameter.",
          "children": []
        },
        {
          "name": "before",
          "type": "String",
          "possibleValues": [],
          "required": false,
          "depth": 0,
          "description": "The cursor used to get the previous page of results. The **Pagination** object in the response contains the cursor’s value. [Read More](https://dev.twitch.tv/docs/api/guide#pagination)  \n  \nSpecify this parameter only if you specify the _user\\_id_ query parameter.",
          "children": []
        }
      ]
    },
    "responseBody": {
      "description": [],
      "parameters": [
        {
          "name": "data",
          "type": "Object[]",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "The list of published videos that match the filter criteria.",
          "children": [
            {
              "name": "id",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "An ID that identifies the video.",
              "children": []
            },
            {
              "name": "stream_id",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The ID of the stream that the video originated from if the video’s type is “archive;” otherwise, **null**.",
              "children": []
            },
            {
              "name": "user_id",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The ID of the broadcaster that owns the video.",
              "children": []
            },
            {
              "name": "user_login",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The broadcaster’s login name.",
              "children": []
            },
            {
              "name": "user_name",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The broadcaster’s display name.",
              "children": []
            },
            {
              "name": "title",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The video’s title.",
              "children": []
            },
            {
              "name": "description",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The video’s description.",
              "children": []
            },
            {
              "name": "created_at",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The date and time, in UTC, of when the video was created. The timestamp is in RFC3339 format.",
              "children": []
            },
            {
              "name": "published_at",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The date and time, in UTC, of when the video was published. The timestamp is in RFC3339 format.",
              "children": []
            },
            {
              "name": "url",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The video’s URL.",
              "children": []
            },
            {
              "name": "thumbnail_url",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "A URL to a thumbnail image of the video. Before using the URL, you must replace the `%{width}` and `%{height}` placeholders with the width and height of the thumbnail you want returned. Specify the width and height in pixels. Because the CDN preserves the thumbnail’s ratio, the thumbnail may not be the exact size you requested.",
              "children": []
            },
            {
              "name": "viewable",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The video’s viewable state. Always set to **public**.",
              "children": []
            },
            {
              "name": "view_count",
              "type": "Integer",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The number of times that users have watched the video.",
              "children": []
            },
            {
              "name": "language",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The ISO 639-1 two-letter language code that the video was broadcast in. For example, the language code is DE if the video was broadcast in German. For a list of supported languages, see [Supported Stream Language](https://help.twitch.tv/s/article/languages-on-twitch#streamlang). The language value is “other” if the video was broadcast in a language not in the list of supported languages.",
              "children": []
            },
            {
              "name": "type",
              "type": "String",
              "possibleValues": [
                "archive",
                "highlight",
                "upload"
              ],
              "required": null,
              "depth": 1,
              "description": "The video’s type. Possible values are:  \n  \n* archive — An on-demand video (VOD) of one of the broadcaster's past streams.\n* highlight — A highlight reel of one of the broadcaster's past streams. See [Creating Highlights](https://help.twitch.tv/s/article/creating-highlights-and-stream-markers).\n* upload — A video that the broadcaster uploaded to their video library. See Upload under [Video Producer](https://help.twitch.tv/s/article/video-on-demand?language=en%5FUS#videoproducer).",
              "children": []
            },
            {
              "name": "duration",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The video’s length in ISO 8601 duration format. For example, 3m21s represents 3 minutes, 21 seconds.",
              "children": []
            },
            {
              "name": "muted_segments",
              "type": "Object[]",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The segments that Twitch Audio Recognition muted; otherwise, **null**.",
              "children": [
                {
                  "name": "duration",
                  "type": "Integer",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "The duration of the muted segment, in seconds.",
                  "children": []
                },
                {
                  "name": "offset",
                  "type": "Integer",
                  "possibleValues": [],
                  "required": null,
                  "depth": 2,
                  "description": "The offset, in seconds, from the beginning of the video to where the muted segment begins.",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "name": "pagination",
          "type": "Object",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "Contains the information used to page through the list of results. The object is empty if there are no more pages left to page through. [Read More](https://dev.twitch.tv/docs/api/guide#pagination)",
          "children": [
            {
              "name": "cursor",
              "type": "String",
              "possibleValues": [],
              "required": null,
              "depth": 1,
              "description": "The cursor used to get the next page of results. Use the cursor to set the request’s _after_ or _before_ query parameter depending on whether you’re paging forwards or backwards through the results.",
              "children": []
            }
          ]
        }
      ]
    },
    "responseCodes": [
      [
        "200 OK",
        "Successfully retrieved the list of videos."
      ],
      [
        "400 Bad Request",
        "* The request must specify either the _id_ or _user\\_id_ or _game\\_id_ query parameter.\n* The _id_, _user\\_id_, and _game\\_id_ query parameters are mutually exclusive; you must specify only one of them.\n* The value in the _id_ query parameter is not valid.\n* The ID in the _game\\_id_ query parameter is not valid.\n* The value in the _type_ query parameter is not valid.\n* The value in the _period_ query parameter is not valid.\n* The value in the _sort_ query parameter is not valid."
      ],
      [
        "401 Unauthorized",
        "* The Authorization header is required and must contain an app access token or user access token.\n* The access token is not valid.\n* The ID specified in the Client-Id header does not match the client ID specified in the access token."
      ],
      [
        "404 Not Found",
        "* The ID in the _game\\_id_ query parameter was not found.\n* The ID in the _id_ query parameter was not found. Returned only if all the IDs were not found; otherwise, the ID is ignored."
      ]
    ],
    "examples": "### Example Request\n\nGets information about the specified video.\n\n```\ncurl -X GET 'https://api.twitch.tv/helix/videos?id=335921245' \\\n-H 'Authorization: Bearer 2gbdx6oar67tqtcmt49t3wpcgycthx' \\\n-H 'Client-Id: uo6dggojyb8d6soh92zknwmi5ej1q2'\n\n```\n\n### Example Response\n\n```\n{\n  \"data\": [\n    {\n      \"id\": \"335921245\",\n      \"stream_id\": null,\n      \"user_id\": \"141981764\",\n      \"user_login\": \"twitchdev\",\n      \"user_name\": \"TwitchDev\",\n      \"title\": \"Twitch Developers 101\",\n      \"description\": \"Welcome to Twitch development! Here is a quick overview of our products and information to help you get started.\",\n      \"created_at\": \"2018-11-14T21:30:18Z\",\n      \"published_at\": \"2018-11-14T22:04:30Z\",\n      \"url\": \"https://www.twitch.tv/videos/335921245\",\n      \"thumbnail_url\": \"https://static-cdn.jtvnw.net/cf_vods/d2nvs31859zcd8/twitchdev/335921245/ce0f3a7f-57a3-4152-bc06-0c6610189fb3/thumb/index-0000000000-%{width}x%{height}.jpg\",\n      \"viewable\": \"public\",\n      \"view_count\": 1863062,\n      \"language\": \"en\",\n      \"type\": \"upload\",\n      \"duration\": \"3m21s\",\n      \"muted_segments\": [\n        {\n          \"duration\": 30,\n          \"offset\": 120\n        }\n      ]\n    }\n  ],\n  \"pagination\": {}\n}\n\n```"
  },
  {
    "id": "delete-videos",
    "name": "Delete Videos",
    "resource": "Videos",
    "description": "Deletes one or more videos.",
    "descriptionFull": [
      "Deletes one or more videos. You may delete past broadcasts, highlights, or uploads."
    ],
    "authentication": [
      "Requires a user access token that includes the **channel:manage:videos** scope."
    ],
    "authorization": [],
    "url": "https://api.twitch.tv/helix/videos",
    "method": "DELETE",
    "requestBody": {
      "description": [],
      "parameters": []
    },
    "requestQueryParams": {
      "description": [],
      "parameters": [
        {
          "name": "id",
          "type": "String",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "The list of videos to delete. To specify more than one video, include the _id_ parameter for each video to delete. For example, `id=1234&id=5678`. You can delete a maximum of 5 videos per request. Ignores invalid video IDs.  \n  \nIf the user doesn’t have permission to delete one of the videos in the list, none of the videos are deleted.",
          "children": []
        }
      ]
    },
    "responseBody": {
      "description": [],
      "parameters": [
        {
          "name": "data",
          "type": "String[]",
          "possibleValues": [],
          "required": null,
          "depth": 0,
          "description": "The list of IDs of the videos that were deleted.",
          "children": []
        }
      ]
    },
    "responseCodes": [
      [
        "200 OK",
        "Successfully deleted the list of videos."
      ],
      [
        "400 Bad Request",
        "* The _id_ query parameter is required.\n* The request exceeded the number of allowed _id_ query parameters."
      ],
      [
        "401 Unauthorized",
        "* The caller is not authorized to delete the specified video.\n* The Authorization header is required and must contain a user access token.\n* The user access token must include the **channel:manage:videos** scope.\n* The access token is not valid.\n* The ID specified in the Client-Id header does not match the client ID specified in the access token."
      ]
    ],
    "examples": "### Example Request\n\nDeletes the two specified videos.\n\n```\ncurl -X DELETE 'https://api.twitch.tv/helix/videos?id=1234&id=9876' \\\n-H 'Authorization: Bearer 2gbdx6oar67tqtcmt49t3wpcgycthx' \\\n-H 'Client-Id: uo6dggojyb8d6soh92zknwmi5ej1q2'\n\n```\n\n### Example Response\n\n```\n{\n  \"data\": [\n    \"1234\",\n    \"9876\"\n  ]\n}\n\n```"
  },
  {
    "id": "send-whisper",
    "name": "Send Whisper",
    "resource": "Whispers",
    "description": "Sends a whisper message to the specified user.",
    "descriptionFull": [
      "Sends a whisper message to the specified user.",
      "NOTE: The user sending the whisper must have a verified phone number (see the **Phone Number** setting in your [Security and Privacy](https://www.twitch.tv/settings/security) settings).",
      "NOTE: The API may silently drop whispers that it suspects of violating Twitch policies. (The API does not indicate that it dropped the whisper; it returns a 204 status code as if it succeeded.)",
      "**Rate Limits**: You may whisper to a maximum of 40 unique recipients per day. Within the per day limit, you may whisper a maximum of 3 whispers per second and a maximum of 100 whispers per minute."
    ],
    "authentication": [],
    "authorization": [
      "Requires a user access token that includes the **user:manage:whispers** scope."
    ],
    "url": "https://api.twitch.tv/helix/whispers",
    "method": "POST",
    "requestBody": {
      "description": [],
      "parameters": []
    },
    "requestQueryParams": {
      "description": [],
      "parameters": [
        {
          "name": "from_user_id",
          "type": "String",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "The ID of the user sending the whisper. This user must have a verified phone number. This ID must match the user ID in the user access token.",
          "children": []
        },
        {
          "name": "to_user_id",
          "type": "String",
          "possibleValues": [],
          "required": true,
          "depth": 0,
          "description": "The ID of the user to receive the whisper.",
          "children": []
        }
      ]
    },
    "responseBody": {
      "description": [],
      "parameters": []
    },
    "responseCodes": [
      [
        "204 No Content",
        "Successfully sent the whisper message or the message was silently dropped."
      ],
      [
        "400 Bad Request",
        "* The ID in the _from\\_user\\_id_ and _to\\_user\\_id_ query parameters must be different.\n* The `message` field must not contain an empty string.\n* The user that you're sending the whisper to doesn't allow whisper messages (see the **Block Whispers from Strangers** setting in your [Security and Privacy](https://www.twitch.tv/settings/security) settings).\n* Whisper messages may not be sent to suspended users.\n* The ID in the _from\\_user\\_id_ query parameter is not valid.\n* The ID in the _to\\_user\\_id_ query parameter is not valid."
      ],
      [
        "401 Unauthorized",
        "* The user in the _from\\_user\\_id_ query parameter must have a verified phone number.\n* The Authorization header is required and must contain a user access token.\n* The user access token must include the **user:manage:whispers** scope.\n* The access token is not valid.\n* This ID in _from\\_user\\_id_ must match the user ID in the user access token.\n* The client ID specified in the Client-Id header does not match the client ID specified in the access token."
      ],
      [
        "403 Forbidden",
        "* Suspended users may not send whisper messages.\n* The account that's sending the message doesn't allow sending whispers."
      ],
      [
        "404 Not Found",
        "* The ID in _to\\_user\\_id_ was not found."
      ],
      [
        "429 Too Many Requests",
        "* The sending user exceeded the number of whisper requests that they may make. See Rate Limits for this endpoint above."
      ]
    ],
    "examples": "### Example Request\n\nSend the user a whisper message.\n\n```\ncurl -X POST 'https://api.twitch.tv/helix/whispers?from_user_id=123&to_user_id=456' \\\n-H 'Authorization: Bearer kpvy3cjboyptmdkiacwr0c19hotn5s' \\\n-H 'Client-Id: hof5gwx0su6owfnys0nyan9c87zr6t' \\\n-H 'Content-Type: application/json' \\\n-d '{\"message\":\"hello\"}'\n\n```"
  }
]